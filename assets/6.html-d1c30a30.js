const e=JSON.parse('{"key":"v-b64f755e","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/6.html","title":"前k个高频元素","lang":"zh-CN","frontmatter":{"title":"前k个高频元素","order":6,"category":["算法题"],"description":"题目链接 链接 思路 桶排序 首先用 map 统计每个数的频次 遍历 map，以频数为下标，key 为值保存到数组中（因为可能有相同频数的，所以数组中的每个元素也是数组） 倒序遍历数组，取 k 个最大的 实现 暴力排序","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/6.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"前k个高频元素"}],["meta",{"property":"og:description","content":"题目链接 链接 思路 桶排序 首先用 map 统计每个数的频次 遍历 map，以频数为下标，key 为值保存到数组中（因为可能有相同频数的，所以数组中的每个元素也是数组） 倒序遍历数组，取 k 个最大的 实现 暴力排序"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T08:05:49.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-01-21T08:05:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前k个高频元素\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-21T08:05:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1705824349000,"updatedTime":1705824349000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.85,"words":254},"filePathRelative":"算法题/栈与队列/6.md","localizedDate":"2024年1月21日","excerpt":"<h2> 题目链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/top-k-frequent-elements/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">链接</a></p>\\n<h2> 思路</h2>\\n<p>桶排序</p>\\n<ol>\\n<li>首先用 map 统计每个数的频次</li>\\n<li>遍历 map，以频数为下标，key 为值保存到数组中（因为可能有相同频数的，所以数组中的每个元素也是数组）</li>\\n<li>倒序遍历数组，取 k 个最大的</li>\\n</ol>\\n<h2> 实现</h2>\\n<ol>\\n<li>暴力排序</li>\\n</ol>","autoDesc":true}');export{e as data};
