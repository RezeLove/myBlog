const n=JSON.parse('{"key":"v-1b91470f","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/2.%E6%8C%87%E9%92%88%E9%97%AE%E9%A2%98.html","title":"指针问题","lang":"zh-CN","frontmatter":{"title":"指针问题","order":2,"category":["算法题","区间"],"description":"题 1 汇总区间 题目链接 思路： 遍历每个元素，然后从当前元素开始扩张区间 var summaryRanges = function (nums) { const res = [], len = nums.length; let i = 0; while (i &lt; len) { let low = i; i++; while (i &lt; len &amp;&amp; nums[i] - nums[i - 1] == 1) { i++; } let high = i - 1; if (low &lt; high) { res.push(String(nums[low] + \\"-&gt;\\" + nums[high])); } else { res.push(String(nums[low])); } } return res; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E5%8C%BA%E9%97%B4%E9%97%AE%E9%A2%98/2.%E6%8C%87%E9%92%88%E9%97%AE%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"指针问题"}],["meta",{"property":"og:description","content":"题 1 汇总区间 题目链接 思路： 遍历每个元素，然后从当前元素开始扩张区间 var summaryRanges = function (nums) { const res = [], len = nums.length; let i = 0; while (i &lt; len) { let low = i; i++; while (i &lt; len &amp;&amp; nums[i] - nums[i - 1] == 1) { i++; } let high = i - 1; if (low &lt; high) { res.push(String(nums[low] + \\"-&gt;\\" + nums[high])); } else { res.push(String(nums[low])); } } return res; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-12T09:10:17.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-06-12T09:10:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"指针问题\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-12T09:10:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题 1 汇总区间","slug":"题-1-汇总区间","link":"#题-1-汇总区间","children":[]},{"level":2,"title":"题 2 插入区间","slug":"题-2-插入区间","link":"#题-2-插入区间","children":[]}],"git":{"createdTime":1718183417000,"updatedTime":1718183417000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.99,"words":296},"filePathRelative":"算法题/数组/区间问题/2.指针问题.md","localizedDate":"2024年6月12日","excerpt":"<h2> 题 1 汇总区间</h2>\\n<p><a href=\\"https://leetcode.cn/problems/summary-ranges/?envType=study-plan-v2&amp;envId=top-interview-150\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">题目链接</a></p>\\n<p>思路：</p>\\n<ol>\\n<li>遍历每个元素，然后从当前元素开始扩张区间</li>\\n</ol>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">summaryRanges</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">nums</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> res <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n    len <span class=\\"token operator\\">=</span> nums<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">&lt;</span> len<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> low <span class=\\"token operator\\">=</span> i<span class=\\"token punctuation\\">;</span>\\n    i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">&lt;</span> len <span class=\\"token operator\\">&amp;&amp;</span> nums<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">-</span> nums<span class=\\"token punctuation\\">[</span>i <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">let</span> high <span class=\\"token operator\\">=</span> i <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>low <span class=\\"token operator\\">&lt;</span> high<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">String</span><span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">[</span>low<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\"-&gt;\\"</span> <span class=\\"token operator\\">+</span> nums<span class=\\"token punctuation\\">[</span>high<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n      res<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">String</span><span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">[</span>low<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> res<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
