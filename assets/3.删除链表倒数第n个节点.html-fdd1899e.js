const n=JSON.parse('{"key":"v-8ca3767e","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/3.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E5%80%92%E6%95%B0%E7%AC%ACn%E4%B8%AA%E8%8A%82%E7%82%B9.html","title":"移除链表倒数第n个元素","lang":"zh-CN","frontmatter":{"title":"移除链表倒数第n个元素","order":3,"category":["算法题","链表"],"description":"题目链接 移除链表倒数第 n 个元素 思路 快慢指针来解决，先让快指针自己走 n 步，然后让快慢指针同时走，这样快慢指针的间隔就保持为 n，当快指针走到终点，慢指针指向的就是待删除元素的前一个 实现 var removeNthFromEnd = function (head, n) { if (!head) { return; } let dummy = new ListNode(null, head); let right = dummy; for (let i = 1; i &lt;= n; i++) { right = right.next; } let left = dummy; while (right.next) { right = right.next; left = left.next; } left.next = left.next.next; return dummy.next; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/3.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E5%80%92%E6%95%B0%E7%AC%ACn%E4%B8%AA%E8%8A%82%E7%82%B9.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"移除链表倒数第n个元素"}],["meta",{"property":"og:description","content":"题目链接 移除链表倒数第 n 个元素 思路 快慢指针来解决，先让快指针自己走 n 步，然后让快慢指针同时走，这样快慢指针的间隔就保持为 n，当快指针走到终点，慢指针指向的就是待删除元素的前一个 实现 var removeNthFromEnd = function (head, n) { if (!head) { return; } let dummy = new ListNode(null, head); let right = dummy; for (let i = 1; i &lt;= n; i++) { right = right.next; } let left = dummy; while (right.next) { right = right.next; left = left.next; } left.next = left.next.next; return dummy.next; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-08T11:11:14.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-04-08T11:11:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"移除链表倒数第n个元素\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-08T11:11:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1712574674000,"updatedTime":1712574674000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.49,"words":147},"filePathRelative":"算法题/链表/删除链表元素/3.删除链表倒数第n个节点.md","localizedDate":"2024年4月8日","excerpt":"<h2> 题目链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/SLwz0R/description/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">移除链表倒数第 n 个元素</a></p>\\n<h2> 思路</h2>\\n<p>快慢指针来解决，先让快指针自己走 n 步，然后让快慢指针同时走，这样快慢指针的间隔就保持为 n，当快指针走到终点，慢指针指向的就是待删除元素的前一个</p>\\n<h2> 实现</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">removeNthFromEnd</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">head<span class=\\"token punctuation\\">,</span> n</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>head<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">let</span> dummy <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ListNode</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">,</span> head<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">let</span> right <span class=\\"token operator\\">=</span> dummy<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;=</span> n<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    right <span class=\\"token operator\\">=</span> right<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">let</span> left <span class=\\"token operator\\">=</span> dummy<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>right<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    right <span class=\\"token operator\\">=</span> right<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n    left <span class=\\"token operator\\">=</span> left<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  left<span class=\\"token punctuation\\">.</span>next <span class=\\"token operator\\">=</span> left<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> dummy<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
