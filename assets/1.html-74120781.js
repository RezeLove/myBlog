const a=JSON.parse('{"key":"v-71275d66","path":"/tips/1.html","title":"tips","lang":"zh-CN","frontmatter":{"title":"tips","order":1,"category":["knowledge"],"description":"symbol： symbol symbol 是一种基本数据类型,每个从 Symbol() 返回的 symbol 值都是唯一的,因此一般作为对象属性的标识符 arguments: arguments arguments 是所有（非箭头）函数中都可用的局部变量，类似于 Array，但只能使用 length 属性和索引元素 如果想使用其他 Array 属性，可以将其转换为 Array 数组，或是调用 Array 的方法 //转换为 Array const args = Array.from(arguments); const args = [...arguments]; //调用Array的方法 var args = Array.prototype.slice.call(arguments); var args = [].slice.call(arguments);","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/tips/1.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"tips"}],["meta",{"property":"og:description","content":"symbol： symbol symbol 是一种基本数据类型,每个从 Symbol() 返回的 symbol 值都是唯一的,因此一般作为对象属性的标识符 arguments: arguments arguments 是所有（非箭头）函数中都可用的局部变量，类似于 Array，但只能使用 length 属性和索引元素 如果想使用其他 Array 属性，可以将其转换为 Array 数组，或是调用 Array 的方法 //转换为 Array const args = Array.from(arguments); const args = [...arguments]; //调用Array的方法 var args = Array.prototype.slice.call(arguments); var args = [].slice.call(arguments);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T08:05:49.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-01-21T08:05:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"tips\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-21T08:05:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1705824349000,"updatedTime":1705824349000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.48,"words":145},"filePathRelative":"tips/1.md","localizedDate":"2024年1月21日","excerpt":"<ul>\\n<li>\\n<p>symbol：\\n<a href=\\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">symbol</a>\\nsymbol 是一种基本数据类型,每个从 Symbol() 返回的 symbol 值都是<mark>唯一的</mark>,因此一般作为对象属性的标识符</p>\\n</li>\\n<li>\\n<p>arguments:\\n<a href=\\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/arguments\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">arguments</a>\\narguments 是所有（<mark>非箭头</mark>）函数中都可用的局部变量，类似于 Array，但只能使用 length 属性和索引元素<br>\\n如果想使用其他 Array 属性，可以将其转换为 Array 数组，或是调用 Array 的方法</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">//转换为 Array</span>\\n<span class=\\"token keyword\\">const</span> args <span class=\\"token operator\\">=</span> Array<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">from</span><span class=\\"token punctuation\\">(</span>arguments<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">const</span> args <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">...</span>arguments<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token comment\\">//调用Array的方法</span>\\n<span class=\\"token keyword\\">var</span> args <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">.</span>prototype<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">slice</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">call</span><span class=\\"token punctuation\\">(</span>arguments<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">var</span> args <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">slice</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">call</span><span class=\\"token punctuation\\">(</span>arguments<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ul>","autoDesc":true}');export{a as data};
