const e=JSON.parse('{"key":"v-5e5ec650","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/11.html","title":"二叉搜索树中的搜索","lang":"zh-CN","frontmatter":{"title":"二叉搜索树中的搜索","order":11,"category":["算法题","二叉树"],"description":"题目链接 题目链接 思路 注意：搜索二叉树并不是单纯的比较左节点小于中间节点，右节点大于中间节点；而是要比较左子树和右子树 利用中序遍历的特点，将每个节点的值存入数组，然后查看这个数组是否满足从小到大的排序 实现","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/11.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"二叉搜索树中的搜索"}],["meta",{"property":"og:description","content":"题目链接 题目链接 思路 注意：搜索二叉树并不是单纯的比较左节点小于中间节点，右节点大于中间节点；而是要比较左子树和右子树 利用中序遍历的特点，将每个节点的值存入数组，然后查看这个数组是否满足从小到大的排序 实现"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T08:05:49.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-01-21T08:05:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二叉搜索树中的搜索\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-21T08:05:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1705824349000,"updatedTime":1705824349000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.58,"words":173},"filePathRelative":"算法题/二叉树/11.md","localizedDate":"2024年1月21日","excerpt":"<h2> 题目链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/validate-binary-search-tree/description/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">题目链接</a></p>\\n<h2> 思路</h2>\\n<p>注意：搜索二叉树并不是单纯的比较左节点小于中间节点，右节点大于中间节点；而是要比较<mark>左子树</mark>和<mark>右子树</mark></p>\\n<p>利用中序遍历的特点，将每个节点的值存入数组，然后查看这个数组是否满足从小到大的排序</p>\\n<h2> 实现</h2>","autoDesc":true}');export{e as data};
