const n=JSON.parse('{"key":"v-161d618c","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E7%9F%A9%E9%98%B5/1.%E9%AA%8C%E8%AF%81%E6%95%B0%E7%8B%AC.html","title":"验证数独","lang":"zh-CN","frontmatter":{"title":"验证数独","order":1,"category":["算法题","矩形"],"description":"题目链接 题目链接 思路 分别建立三个哈希表，存储每行/每列/每个九宫格中各数字出现次数，验证是否满足规则 实现 var isValidSudoku = function (board) { // 用3个哈希表去存储每行/每列/每个九宫格中各数字出现次数 const rows = new Array(9).fill().map(() =&gt; new Array(9).fill(0)); const cols = new Array(9).fill().map(() =&gt; new Array(9).fill(0)); const boxes = new Array(3) .fill() .map(() =&gt; new Array(3).fill().map(() =&gt; new Array(9).fill(0))); for (let i = 0; i &lt; 9; i++) { for (let j = 0; j &lt; 9; j++) { const c = board[i][j]; // 数独从1开始，还要额外减去1 let index = c.charCodeAt() - \\"0\\".charCodeAt() - 1; rows[i][index]++; cols[j][index]++; // 计算当前index在哪个九宫格中 let row = Math.floor(i / 3), col = Math.floor(j / 3); boxes[row][col][index]++; // 验证规则 if ( rows[i][index] &gt; 1 || cols[j][index] &gt; 1 || boxes[row][col][index] &gt; 1 ) { return false; } } } return true; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E7%9F%A9%E9%98%B5/1.%E9%AA%8C%E8%AF%81%E6%95%B0%E7%8B%AC.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"验证数独"}],["meta",{"property":"og:description","content":"题目链接 题目链接 思路 分别建立三个哈希表，存储每行/每列/每个九宫格中各数字出现次数，验证是否满足规则 实现 var isValidSudoku = function (board) { // 用3个哈希表去存储每行/每列/每个九宫格中各数字出现次数 const rows = new Array(9).fill().map(() =&gt; new Array(9).fill(0)); const cols = new Array(9).fill().map(() =&gt; new Array(9).fill(0)); const boxes = new Array(3) .fill() .map(() =&gt; new Array(3).fill().map(() =&gt; new Array(9).fill(0))); for (let i = 0; i &lt; 9; i++) { for (let j = 0; j &lt; 9; j++) { const c = board[i][j]; // 数独从1开始，还要额外减去1 let index = c.charCodeAt() - \\"0\\".charCodeAt() - 1; rows[i][index]++; cols[j][index]++; // 计算当前index在哪个九宫格中 let row = Math.floor(i / 3), col = Math.floor(j / 3); boxes[row][col][index]++; // 验证规则 if ( rows[i][index] &gt; 1 || cols[j][index] &gt; 1 || boxes[row][col][index] &gt; 1 ) { return false; } } } return true; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-06T12:03:13.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-06-06T12:03:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"验证数独\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-06T12:03:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1717675393000,"updatedTime":1717675393000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.82,"words":245},"filePathRelative":"算法题/矩阵/1.验证数独.md","localizedDate":"2024年6月6日","excerpt":"<h2> 题目链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/valid-sudoku/?envType=study-plan-v2&amp;envId=top-interview-150\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">题目链接</a></p>\\n<h2> 思路</h2>\\n<p>分别建立三个哈希表，存储每行/每列/每个九宫格中各数字出现次数，验证是否满足规则</p>\\n<h2> 实现</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">isValidSudoku</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">board</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 用3个哈希表去存储每行/每列/每个九宫格中各数字出现次数</span>\\n  <span class=\\"token keyword\\">const</span> rows <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">9</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fill</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">9</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fill</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> cols <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">9</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fill</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">9</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fill</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> boxes <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fill</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fill</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">9</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fill</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">9</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> j <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> j <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">9</span><span class=\\"token punctuation\\">;</span> j<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">const</span> c <span class=\\"token operator\\">=</span> board<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token comment\\">// 数独从1开始，还要额外减去1</span>\\n      <span class=\\"token keyword\\">let</span> index <span class=\\"token operator\\">=</span> c<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charCodeAt</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> <span class=\\"token string\\">\\"0\\"</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charCodeAt</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n      rows<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>index<span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n      cols<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>index<span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token comment\\">// 计算当前index在哪个九宫格中</span>\\n      <span class=\\"token keyword\\">let</span> row <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">/</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n        col <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span>j <span class=\\"token operator\\">/</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      boxes<span class=\\"token punctuation\\">[</span>row<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>col<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>index<span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token comment\\">//   验证规则</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>\\n        rows<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>index<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">||</span>\\n        cols<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>index<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">||</span>\\n        boxes<span class=\\"token punctuation\\">[</span>row<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>col<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>index<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">1</span>\\n      <span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">false</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
