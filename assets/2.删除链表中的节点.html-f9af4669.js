import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o,c,a as n,b as a,e as p,f as r}from"./app-e6c0a0b6.js";const i={},l=n("h2",{id:"题目连接",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#题目连接","aria-hidden":"true"},"#"),a(" 题目连接")],-1),d={href:"https://leetcode.cn/problems/delete-node-in-a-linked-list/description/",target:"_blank",rel:"noopener noreferrer"},u=r(`<h2 id="思路" tabindex="-1"><a class="header-anchor" href="#思路" aria-hidden="true">#</a> 思路</h2><p>这题没法获取 head 节点，因此上一题的删除思路行不通，可以将一个节点的值赋给前 node，然后将下一个节点删除，可以实现相同的效果</p><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">deleteNode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  node<span class="token punctuation">.</span>val <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
  node<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function _(k,h){const e=t("ExternalLinkIcon");return o(),c("div",null,[l,n("p",null,[n("a",d,[a("题目链接"),p(e)])]),u])}const f=s(i,[["render",_],["__file","2.删除链表中的节点.html.vue"]]);export{f as default};
