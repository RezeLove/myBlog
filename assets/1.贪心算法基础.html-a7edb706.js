import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,f as t}from"./app-8e678c3d.js";const r={},_=t('<h2 id="贪心算法的思想" tabindex="-1"><a class="header-anchor" href="#贪心算法的思想" aria-hidden="true">#</a> 贪心算法的思想</h2><p>贪心的本质是选择每一阶段的局部最优，从而达到全局最优。</p><p>例如，有一堆钞票，你可以拿走十张，如果想达到最大的金额，你要怎么拿？</p><p>指定每次拿最大的，最终结果就是拿走最大数额的钱。</p><p>贪心算法并不想回溯，有固定的套路，因此贪心算法实际上就是在模拟局部最优的过程，从而推出整体最优</p><h2 id="贪心算法的集体步骤" tabindex="-1"><a class="header-anchor" href="#贪心算法的集体步骤" aria-hidden="true">#</a> 贪心算法的集体步骤</h2><p>贪心算法一般分为如下四步：</p><ul><li>将问题分解为若干个子问题</li><li>找出适合的贪心策略</li><li>求解每一个子问题的最优解</li><li>将局部最优解堆叠成全局最优解</li></ul>',8),c=[_];function l(o,n){return a(),i("div",null,c)}const h=e(r,[["render",l],["__file","1.贪心算法基础.html.vue"]]);export{h as default};
