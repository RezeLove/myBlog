const n=JSON.parse('{"key":"v-77c41d4c","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/5.%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97.html","title":"判断子序列","lang":"zh-CN","frontmatter":{"title":"判断子序列","order":5,"category":["算法题","字符串"],"description":"题目要求 给定字符串 s 和 t ，判断 s 是否为 t 的子序列 思路 双指针遍历 实现 const isSubsequence = (s, t) =&gt; { let i = 0, j = 0; while (i &lt; s.length &amp;&amp; j &lt; t.length) { if (s[i] === t[j]) { i++; } j++; } return i === s.length; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/5.%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"判断子序列"}],["meta",{"property":"og:description","content":"题目要求 给定字符串 s 和 t ，判断 s 是否为 t 的子序列 思路 双指针遍历 实现 const isSubsequence = (s, t) =&gt; { let i = 0, j = 0; while (i &lt; s.length &amp;&amp; j &lt; t.length) { if (s[i] === t[j]) { i++; } j++; } return i === s.length; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-30T06:26:09.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-10-30T06:26:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"判断子序列\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-30T06:26:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目要求","slug":"题目要求","link":"#题目要求","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1730269569000,"updatedTime":1730269569000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.24,"words":72},"filePathRelative":"算法题/字符串/5.判断子序列.md","localizedDate":"2024年10月30日","excerpt":"<h2> 题目要求</h2>\\n<p>给定字符串 s 和 t ，判断 s 是否为 t 的子序列</p>\\n<h2> 思路</h2>\\n<p>双指针遍历</p>\\n<h2> 实现</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">isSubsequence</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">s<span class=\\"token punctuation\\">,</span> t</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n    j <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">&lt;</span> s<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">&amp;&amp;</span> j <span class=\\"token operator\\">&lt;</span> t<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>s<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">===</span> t<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    j<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> i <span class=\\"token operator\\">===</span> s<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
