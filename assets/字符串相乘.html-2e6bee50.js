const n=JSON.parse('{"key":"v-075f1d1f","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98.html","title":"字符串相乘","lang":"zh-CN","frontmatter":{"title":"字符串相乘","order":1,"category":["算法题","字符串相乘"],"description":"题目链接 链接 思路 以三位数乘三位数为例：三位数乘三位数，最多是一个 6 位数，因此可以维护一个 6 位的数组，用来存储结果 然后模拟竖式乘法过程，每次乘以一位，然后进位，最后取结果 实现 var multiply = function (num1, num2) { let len1 = num1.length, len2 = num2.length; const pos = new Array(len1 + len2).fill(0); for (let i = len1 - 1; i &gt;= 0; i--) { let n1 = +num1[i]; for (let j = len2 - 1; j &gt;= 0; j--) { let n2 = +num2[j]; let mult = n1 * n2; let sum = pos[i + j + 1] + mult; // 这里是关键 i+j+1 是当前的位置 pos[i + j + 1] = sum % 10; // i+j是进位的位置 pos[i + j] += (sum / 10) | 0; } } // 6位是最大的情况，实际情况可能是5位，所以把前面的0去掉 while (pos[0] === 0) { pos.shift(); } return pos.length ? pos.join(\\"\\") : \\"0\\"; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E4%B9%98.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"字符串相乘"}],["meta",{"property":"og:description","content":"题目链接 链接 思路 以三位数乘三位数为例：三位数乘三位数，最多是一个 6 位数，因此可以维护一个 6 位的数组，用来存储结果 然后模拟竖式乘法过程，每次乘以一位，然后进位，最后取结果 实现 var multiply = function (num1, num2) { let len1 = num1.length, len2 = num2.length; const pos = new Array(len1 + len2).fill(0); for (let i = len1 - 1; i &gt;= 0; i--) { let n1 = +num1[i]; for (let j = len2 - 1; j &gt;= 0; j--) { let n2 = +num2[j]; let mult = n1 * n2; let sum = pos[i + j + 1] + mult; // 这里是关键 i+j+1 是当前的位置 pos[i + j + 1] = sum % 10; // i+j是进位的位置 pos[i + j] += (sum / 10) | 0; } } // 6位是最大的情况，实际情况可能是5位，所以把前面的0去掉 while (pos[0] === 0) { pos.shift(); } return pos.length ? pos.join(\\"\\") : \\"0\\"; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-23T13:55:21.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-10-23T13:55:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"字符串相乘\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-23T13:55:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1729691721000,"updatedTime":1729691721000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.75,"words":226},"filePathRelative":"算法题/经典面试题/字符串相乘.md","localizedDate":"2024年10月23日","excerpt":"<h2> 题目链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/multiply-strings/description/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">链接</a></p>\\n<h2> 思路</h2>\\n<p>以三位数乘三位数为例：三位数乘三位数，最多是一个 6 位数，因此可以维护一个 6 位的数组，用来存储结果</p>\\n<p>然后模拟竖式乘法过程，每次乘以一位，然后进位，最后取结果</p>\\n<h2> 实现</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">multiply</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">num1<span class=\\"token punctuation\\">,</span> num2</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> len1 <span class=\\"token operator\\">=</span> num1<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">,</span>\\n    len2 <span class=\\"token operator\\">=</span> num2<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> pos <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">(</span>len1 <span class=\\"token operator\\">+</span> len2<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fill</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> len1 <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> n1 <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">+</span>num1<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> j <span class=\\"token operator\\">=</span> len2 <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> j <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> j<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">let</span> n2 <span class=\\"token operator\\">=</span> <span class=\\"token operator\\">+</span>num2<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">let</span> mult <span class=\\"token operator\\">=</span> n1 <span class=\\"token operator\\">*</span> n2<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">let</span> sum <span class=\\"token operator\\">=</span> pos<span class=\\"token punctuation\\">[</span>i <span class=\\"token operator\\">+</span> j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+</span> mult<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token comment\\">// 这里是关键 i+j+1 是当前的位置</span>\\n      pos<span class=\\"token punctuation\\">[</span>i <span class=\\"token operator\\">+</span> j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> sum <span class=\\"token operator\\">%</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token comment\\">// i+j是进位的位置</span>\\n      pos<span class=\\"token punctuation\\">[</span>i <span class=\\"token operator\\">+</span> j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+=</span> <span class=\\"token punctuation\\">(</span>sum <span class=\\"token operator\\">/</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">|</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">// 6位是最大的情况，实际情况可能是5位，所以把前面的0去掉</span>\\n  <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>pos<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">===</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    pos<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">shift</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> pos<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">?</span> pos<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"0\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
