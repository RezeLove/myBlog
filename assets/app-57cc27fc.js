const gu="modulepreload",yu=function(n){return"/"+n},Dp={},l=function(s,a,e){if(!a||a.length===0)return s();const t=document.getElementsByTagName("link");return Promise.all(a.map(o=>{if(o=yu(o),o in Dp)return;Dp[o]=!0;const p=o.endsWith(".css"),i=p?'[rel="stylesheet"]':"";if(!!e)for(let d=t.length-1;d>=0;d--){const v=t[d];if(v.href===o&&(!p||v.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${o}"]${i}`))return;const u=document.createElement("link");if(u.rel=p?"stylesheet":gu,p||(u.as="script",u.crossOrigin=""),u.href=o,document.head.appendChild(u),p)return new Promise((d,v)=>{u.addEventListener("load",d),u.addEventListener("error",()=>v(new Error(`Unable to preload CSS for ${o}`)))})})).then(()=>s()).catch(o=>{const p=new Event("vite:preloadError",{cancelable:!0});if(p.payload=o,window.dispatchEvent(p),!p.defaultPrevented)throw o})};function Lo(n,s){const a=Object.create(null),e=n.split(",");for(let t=0;t<e.length;t++)a[e[t]]=!0;return s?t=>!!a[t.toLowerCase()]:t=>!!a[t]}const On={},ya=[],ms=()=>{},Au=()=>!1,wu=/^on[^a-z]/,Ee=n=>wu.test(n),Po=n=>n.startsWith("onUpdate:"),Cn=Object.assign,Ro=(n,s)=>{const a=n.indexOf(s);a>-1&&n.splice(a,1)},Bu=Object.prototype.hasOwnProperty,vn=(n,s)=>Bu.call(n,s),Z=Array.isArray,Xa=n=>ut(n)==="[object Map]",Ou=n=>ut(n)==="[object Set]",tn=n=>typeof n=="function",mn=n=>typeof n=="string",rt=n=>typeof n=="symbol",In=n=>n!==null&&typeof n=="object",sl=n=>(In(n)||tn(n))&&tn(n.then)&&tn(n.catch),Tu=Object.prototype.toString,ut=n=>Tu.call(n),Du=n=>ut(n).slice(8,-1),Iu=n=>ut(n)==="[object Object]",xo=n=>mn(n)&&n!=="NaN"&&n[0]!=="-"&&""+parseInt(n,10)===n,Za=Lo(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),dt=n=>{const s=Object.create(null);return a=>s[a]||(s[a]=n(a))},Lu=/-(\w)/g,is=dt(n=>n.replace(Lu,(s,a)=>a?a.toUpperCase():"")),Pu=/\B([A-Z])/g,Ma=dt(n=>n.replace(Pu,"-$1").toLowerCase()),be=dt(n=>n.charAt(0).toUpperCase()+n.slice(1)),Tt=dt(n=>n?`on${be(n)}`:""),la=(n,s)=>!Object.is(n,s),Dt=(n,s)=>{for(let a=0;a<n.length;a++)n[a](s)},Ze=(n,s,a)=>{Object.defineProperty(n,s,{configurable:!0,enumerable:!1,value:a})},Ru=n=>{const s=parseFloat(n);return isNaN(s)?n:s},xu=n=>{const s=mn(n)?Number(n):NaN;return isNaN(s)?n:s};let Ip;const no=()=>Ip||(Ip=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function Co(n){if(Z(n)){const s={};for(let a=0;a<n.length;a++){const e=n[a],t=mn(e)?Su(e):Co(e);if(t)for(const o in t)s[o]=t[o]}return s}else if(mn(n)||In(n))return n}const Cu=/;(?![^(]*\))/g,Vu=/:([^]+)/,ju=/\/\*[^]*?\*\//g;function Su(n){const s={};return n.replace(ju,"").split(Cu).forEach(a=>{if(a){const e=a.split(Vu);e.length>1&&(s[e[0].trim()]=e[1].trim())}}),s}function Vo(n){let s="";if(mn(n))s=n;else if(Z(n))for(let a=0;a<n.length;a++){const e=Vo(n[a]);e&&(s+=e+" ")}else if(In(n))for(const a in n)n[a]&&(s+=a+" ");return s.trim()}const Fu="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",Mu=Lo(Fu);function al(n){return!!n||n===""}let Xn;class $u{constructor(s=!1){this.detached=s,this._active=!0,this.effects=[],this.cleanups=[],this.parent=Xn,!s&&Xn&&(this.index=(Xn.scopes||(Xn.scopes=[])).push(this)-1)}get active(){return this._active}run(s){if(this._active){const a=Xn;try{return Xn=this,s()}finally{Xn=a}}}on(){Xn=this}off(){Xn=this.parent}stop(s){if(this._active){let a,e;for(a=0,e=this.effects.length;a<e;a++)this.effects[a].stop();for(a=0,e=this.cleanups.length;a<e;a++)this.cleanups[a]();if(this.scopes)for(a=0,e=this.scopes.length;a<e;a++)this.scopes[a].stop(!0);if(!this.detached&&this.parent&&!s){const t=this.parent.scopes.pop();t&&t!==this&&(this.parent.scopes[this.index]=t,t.index=this.index)}this.parent=void 0,this._active=!1}}}function Nu(n,s=Xn){s&&s.active&&s.effects.push(n)}function el(){return Xn}function zu(n){Xn&&Xn.cleanups.push(n)}const jo=n=>{const s=new Set(n);return s.w=0,s.n=0,s},tl=n=>(n.w&Js)>0,ol=n=>(n.n&Js)>0,Hu=({deps:n})=>{if(n.length)for(let s=0;s<n.length;s++)n[s].w|=Js},qu=n=>{const{deps:s}=n;if(s.length){let a=0;for(let e=0;e<s.length;e++){const t=s[e];tl(t)&&!ol(t)?t.delete(n):s[a++]=t,t.w&=~Js,t.n&=~Js}s.length=a}},nt=new WeakMap;let Ya=0,Js=1;const so=30;let vs;const oa=Symbol(""),ao=Symbol("");class So{constructor(s,a=null,e){this.fn=s,this.scheduler=a,this.active=!0,this.deps=[],this.parent=void 0,Nu(this,e)}run(){if(!this.active)return this.fn();let s=vs,a=Ws;for(;s;){if(s===this)return;s=s.parent}try{return this.parent=vs,vs=this,Ws=!0,Js=1<<++Ya,Ya<=so?Hu(this):Lp(this),this.fn()}finally{Ya<=so&&qu(this),Js=1<<--Ya,vs=this.parent,Ws=a,this.parent=void 0,this.deferStop&&this.stop()}}stop(){vs===this?this.deferStop=!0:this.active&&(Lp(this),this.onStop&&this.onStop(),this.active=!1)}}function Lp(n){const{deps:s}=n;if(s.length){for(let a=0;a<s.length;a++)s[a].delete(n);s.length=0}}let Ws=!0;const pl=[];function $a(){pl.push(Ws),Ws=!1}function Na(){const n=pl.pop();Ws=n===void 0?!0:n}function Kn(n,s,a){if(Ws&&vs){let e=nt.get(n);e||nt.set(n,e=new Map);let t=e.get(a);t||e.set(a,t=jo()),cl(t)}}function cl(n,s){let a=!1;Ya<=so?ol(n)||(n.n|=Js,a=!tl(n)):a=!n.has(vs),a&&(n.add(vs),vs.deps.push(n))}function Rs(n,s,a,e,t,o){const p=nt.get(n);if(!p)return;let i=[];if(s==="clear")i=[...p.values()];else if(a==="length"&&Z(n)){const r=Number(e);p.forEach((u,d)=>{(d==="length"||!rt(d)&&d>=r)&&i.push(u)})}else switch(a!==void 0&&i.push(p.get(a)),s){case"add":Z(n)?xo(a)&&i.push(p.get("length")):(i.push(p.get(oa)),Xa(n)&&i.push(p.get(ao)));break;case"delete":Z(n)||(i.push(p.get(oa)),Xa(n)&&i.push(p.get(ao)));break;case"set":Xa(n)&&i.push(p.get(oa));break}if(i.length===1)i[0]&&eo(i[0]);else{const r=[];for(const u of i)u&&r.push(...u);eo(jo(r))}}function eo(n,s){const a=Z(n)?n:[...n];for(const e of a)e.computed&&Pp(e);for(const e of a)e.computed||Pp(e)}function Pp(n,s){(n!==vs||n.allowRecurse)&&(n.scheduler?n.scheduler():n.run())}function Uu(n,s){var a;return(a=nt.get(n))==null?void 0:a.get(s)}const Wu=Lo("__proto__,__v_isRef,__isVue"),ll=new Set(Object.getOwnPropertyNames(Symbol).filter(n=>n!=="arguments"&&n!=="caller").map(n=>Symbol[n]).filter(rt)),Rp=Gu();function Gu(){const n={};return["includes","indexOf","lastIndexOf"].forEach(s=>{n[s]=function(...a){const e=ln(this);for(let o=0,p=this.length;o<p;o++)Kn(e,"get",o+"");const t=e[s](...a);return t===-1||t===!1?e[s](...a.map(ln)):t}}),["push","pop","shift","unshift","splice"].forEach(s=>{n[s]=function(...a){$a();const e=ln(this)[s].apply(this,a);return Na(),e}}),n}function Ku(n){const s=ln(this);return Kn(s,"has",n),s.hasOwnProperty(n)}class il{constructor(s=!1,a=!1){this._isReadonly=s,this._shallow=a}get(s,a,e){const t=this._isReadonly,o=this._shallow;if(a==="__v_isReactive")return!t;if(a==="__v_isReadonly")return t;if(a==="__v_isShallow")return o;if(a==="__v_raw"&&e===(t?o?cd:vl:o?dl:ul).get(s))return s;const p=Z(s);if(!t){if(p&&vn(Rp,a))return Reflect.get(Rp,a,e);if(a==="hasOwnProperty")return Ku}const i=Reflect.get(s,a,e);return(rt(a)?ll.has(a):Wu(a))||(t||Kn(s,"get",a),o)?i:jn(i)?p&&xo(a)?i:i.value:In(i)?t?ia(i):_e(i):i}}class rl extends il{constructor(s=!1){super(!1,s)}set(s,a,e,t){let o=s[a];if(Ia(o)&&jn(o)&&!jn(e))return!1;if(!this._shallow&&(!st(e)&&!Ia(e)&&(o=ln(o),e=ln(e)),!Z(s)&&jn(o)&&!jn(e)))return o.value=e,!0;const p=Z(s)&&xo(a)?Number(a)<s.length:vn(s,a),i=Reflect.set(s,a,e,t);return s===ln(t)&&(p?la(e,o)&&Rs(s,"set",a,e):Rs(s,"add",a,e)),i}deleteProperty(s,a){const e=vn(s,a);s[a];const t=Reflect.deleteProperty(s,a);return t&&e&&Rs(s,"delete",a,void 0),t}has(s,a){const e=Reflect.has(s,a);return(!rt(a)||!ll.has(a))&&Kn(s,"has",a),e}ownKeys(s){return Kn(s,"iterate",Z(s)?"length":oa),Reflect.ownKeys(s)}}class Ju extends il{constructor(s=!1){super(!0,s)}set(s,a){return!0}deleteProperty(s,a){return!0}}const Yu=new rl,Qu=new Ju,Xu=new rl(!0),Fo=n=>n,vt=n=>Reflect.getPrototypeOf(n);function Se(n,s,a=!1,e=!1){n=n.__v_raw;const t=ln(n),o=ln(s);a||(la(s,o)&&Kn(t,"get",s),Kn(t,"get",o));const{has:p}=vt(t),i=e?Fo:a?No:ce;if(p.call(t,s))return i(n.get(s));if(p.call(t,o))return i(n.get(o));n!==t&&n.get(s)}function Fe(n,s=!1){const a=this.__v_raw,e=ln(a),t=ln(n);return s||(la(n,t)&&Kn(e,"has",n),Kn(e,"has",t)),n===t?a.has(n):a.has(n)||a.has(t)}function Me(n,s=!1){return n=n.__v_raw,!s&&Kn(ln(n),"iterate",oa),Reflect.get(n,"size",n)}function xp(n){n=ln(n);const s=ln(this);return vt(s).has.call(s,n)||(s.add(n),Rs(s,"add",n,n)),this}function Cp(n,s){s=ln(s);const a=ln(this),{has:e,get:t}=vt(a);let o=e.call(a,n);o||(n=ln(n),o=e.call(a,n));const p=t.call(a,n);return a.set(n,s),o?la(s,p)&&Rs(a,"set",n,s):Rs(a,"add",n,s),this}function Vp(n){const s=ln(this),{has:a,get:e}=vt(s);let t=a.call(s,n);t||(n=ln(n),t=a.call(s,n)),e&&e.call(s,n);const o=s.delete(n);return t&&Rs(s,"delete",n,void 0),o}function jp(){const n=ln(this),s=n.size!==0,a=n.clear();return s&&Rs(n,"clear",void 0,void 0),a}function $e(n,s){return function(e,t){const o=this,p=o.__v_raw,i=ln(p),r=s?Fo:n?No:ce;return!n&&Kn(i,"iterate",oa),p.forEach((u,d)=>e.call(t,r(u),r(d),o))}}function Ne(n,s,a){return function(...e){const t=this.__v_raw,o=ln(t),p=Xa(o),i=n==="entries"||n===Symbol.iterator&&p,r=n==="keys"&&p,u=t[n](...e),d=a?Fo:s?No:ce;return!s&&Kn(o,"iterate",r?ao:oa),{next(){const{value:v,done:k}=u.next();return k?{value:v,done:k}:{value:i?[d(v[0]),d(v[1])]:d(v),done:k}},[Symbol.iterator](){return this}}}}function Ss(n){return function(...s){return n==="delete"?!1:this}}function Zu(){const n={get(o){return Se(this,o)},get size(){return Me(this)},has:Fe,add:xp,set:Cp,delete:Vp,clear:jp,forEach:$e(!1,!1)},s={get(o){return Se(this,o,!1,!0)},get size(){return Me(this)},has:Fe,add:xp,set:Cp,delete:Vp,clear:jp,forEach:$e(!1,!0)},a={get(o){return Se(this,o,!0)},get size(){return Me(this,!0)},has(o){return Fe.call(this,o,!0)},add:Ss("add"),set:Ss("set"),delete:Ss("delete"),clear:Ss("clear"),forEach:$e(!0,!1)},e={get(o){return Se(this,o,!0,!0)},get size(){return Me(this,!0)},has(o){return Fe.call(this,o,!0)},add:Ss("add"),set:Ss("set"),delete:Ss("delete"),clear:Ss("clear"),forEach:$e(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(o=>{n[o]=Ne(o,!1,!1),a[o]=Ne(o,!0,!1),s[o]=Ne(o,!1,!0),e[o]=Ne(o,!0,!0)}),[n,a,s,e]}const[nd,sd,ad,ed]=Zu();function Mo(n,s){const a=s?n?ed:ad:n?sd:nd;return(e,t,o)=>t==="__v_isReactive"?!n:t==="__v_isReadonly"?n:t==="__v_raw"?e:Reflect.get(vn(a,t)&&t in e?a:e,t,o)}const td={get:Mo(!1,!1)},od={get:Mo(!1,!0)},pd={get:Mo(!0,!1)},ul=new WeakMap,dl=new WeakMap,vl=new WeakMap,cd=new WeakMap;function ld(n){switch(n){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function id(n){return n.__v_skip||!Object.isExtensible(n)?0:ld(Du(n))}function _e(n){return Ia(n)?n:$o(n,!1,Yu,td,ul)}function kl(n){return $o(n,!1,Xu,od,dl)}function ia(n){return $o(n,!0,Qu,pd,vl)}function $o(n,s,a,e,t){if(!In(n)||n.__v_raw&&!(s&&n.__v_isReactive))return n;const o=t.get(n);if(o)return o;const p=id(n);if(p===0)return n;const i=new Proxy(n,p===2?e:a);return t.set(n,i),i}function Aa(n){return Ia(n)?Aa(n.__v_raw):!!(n&&n.__v_isReactive)}function Ia(n){return!!(n&&n.__v_isReadonly)}function st(n){return!!(n&&n.__v_isShallow)}function ml(n){return Aa(n)||Ia(n)}function ln(n){const s=n&&n.__v_raw;return s?ln(s):n}function fl(n){return Ze(n,"__v_skip",!0),n}const ce=n=>In(n)?_e(n):n,No=n=>In(n)?ia(n):n;function zo(n){Ws&&vs&&(n=ln(n),cl(n.dep||(n.dep=jo())))}function Ho(n,s){n=ln(n);const a=n.dep;a&&eo(a)}function jn(n){return!!(n&&n.__v_isRef===!0)}function Y(n){return hl(n,!1)}function Hn(n){return hl(n,!0)}function hl(n,s){return jn(n)?n:new rd(n,s)}class rd{constructor(s,a){this.__v_isShallow=a,this.dep=void 0,this.__v_isRef=!0,this._rawValue=a?s:ln(s),this._value=a?s:ce(s)}get value(){return zo(this),this._value}set value(s){const a=this.__v_isShallow||st(s)||Ia(s);s=a?s:ln(s),la(s,this._rawValue)&&(this._rawValue=s,this._value=a?s:ce(s),Ho(this))}}function pa(n){return jn(n)?n.value:n}const ud={get:(n,s,a)=>pa(Reflect.get(n,s,a)),set:(n,s,a,e)=>{const t=n[s];return jn(t)&&!jn(a)?(t.value=a,!0):Reflect.set(n,s,a,e)}};function El(n){return Aa(n)?n:new Proxy(n,ud)}class dd{constructor(s){this.dep=void 0,this.__v_isRef=!0;const{get:a,set:e}=s(()=>zo(this),()=>Ho(this));this._get=a,this._set=e}get value(){return this._get()}set value(s){this._set(s)}}function bl(n){return new dd(n)}class vd{constructor(s,a,e){this._object=s,this._key=a,this._defaultValue=e,this.__v_isRef=!0}get value(){const s=this._object[this._key];return s===void 0?this._defaultValue:s}set value(s){this._object[this._key]=s}get dep(){return Uu(ln(this._object),this._key)}}class kd{constructor(s){this._getter=s,this.__v_isRef=!0,this.__v_isReadonly=!0}get value(){return this._getter()}}function za(n,s,a){return jn(n)?n:tn(n)?new kd(n):In(n)&&arguments.length>1?md(n,s,a):Y(n)}function md(n,s,a){const e=n[s];return jn(e)?e:new vd(n,s,a)}class fd{constructor(s,a,e,t){this._setter=a,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this._dirty=!0,this.effect=new So(s,()=>{this._dirty||(this._dirty=!0,Ho(this))}),this.effect.computed=this,this.effect.active=this._cacheable=!t,this.__v_isReadonly=e}get value(){const s=ln(this);return zo(s),(s._dirty||!s._cacheable)&&(s._dirty=!1,s._value=s.effect.run()),s._value}set value(s){this._setter(s)}}function hd(n,s,a=!1){let e,t;const o=tn(n);return o?(e=n,t=ms):(e=n.get,t=n.set),new fd(e,t,o||!t,a)}function Gs(n,s,a,e){let t;try{t=e?n(...e):n()}catch(o){ge(o,s,a)}return t}function cs(n,s,a,e){if(tn(n)){const o=Gs(n,s,a,e);return o&&sl(o)&&o.catch(p=>{ge(p,s,a)}),o}const t=[];for(let o=0;o<n.length;o++)t.push(cs(n[o],s,a,e));return t}function ge(n,s,a,e=!0){const t=s?s.vnode:null;if(s){let o=s.parent;const p=s.proxy,i=a;for(;o;){const u=o.ec;if(u){for(let d=0;d<u.length;d++)if(u[d](n,p,i)===!1)return}o=o.parent}const r=s.appContext.config.errorHandler;if(r){Gs(r,null,10,[n,p,i]);return}}Ed(n,a,t,e)}function Ed(n,s,a,e=!0){console.error(n)}let le=!1,to=!1;const Mn=[];let As=0;const wa=[];let Ps=null,aa=0;const _l=Promise.resolve();let qo=null;function ra(n){const s=qo||_l;return n?s.then(this?n.bind(this):n):s}function bd(n){let s=As+1,a=Mn.length;for(;s<a;){const e=s+a>>>1,t=Mn[e],o=ie(t);o<n||o===n&&t.pre?s=e+1:a=e}return s}function kt(n){(!Mn.length||!Mn.includes(n,le&&n.allowRecurse?As+1:As))&&(n.id==null?Mn.push(n):Mn.splice(bd(n.id),0,n),gl())}function gl(){!le&&!to&&(to=!0,qo=_l.then(yl))}function _d(n){const s=Mn.indexOf(n);s>As&&Mn.splice(s,1)}function gd(n){Z(n)?wa.push(...n):(!Ps||!Ps.includes(n,n.allowRecurse?aa+1:aa))&&wa.push(n),gl()}function Sp(n,s=le?As+1:0){for(;s<Mn.length;s++){const a=Mn[s];a&&a.pre&&(Mn.splice(s,1),s--,a())}}function at(n){if(wa.length){const s=[...new Set(wa)];if(wa.length=0,Ps){Ps.push(...s);return}for(Ps=s,Ps.sort((a,e)=>ie(a)-ie(e)),aa=0;aa<Ps.length;aa++)Ps[aa]();Ps=null,aa=0}}const ie=n=>n.id==null?1/0:n.id,yd=(n,s)=>{const a=ie(n)-ie(s);if(a===0){if(n.pre&&!s.pre)return-1;if(s.pre&&!n.pre)return 1}return a};function yl(n){to=!1,le=!0,Mn.sort(yd);const s=ms;try{for(As=0;As<Mn.length;As++){const a=Mn[As];a&&a.active!==!1&&Gs(a,null,14)}}finally{As=0,Mn.length=0,at(),le=!1,qo=null,(Mn.length||wa.length)&&yl()}}function Ad(n,s,...a){if(n.isUnmounted)return;const e=n.vnode.props||On;let t=a;const o=s.startsWith("update:"),p=o&&s.slice(7);if(p&&p in e){const d=`${p==="modelValue"?"model":p}Modifiers`,{number:v,trim:k}=e[d]||On;k&&(t=a.map(f=>mn(f)?f.trim():f)),v&&(t=a.map(Ru))}let i,r=e[i=Tt(s)]||e[i=Tt(is(s))];!r&&o&&(r=e[i=Tt(Ma(s))]),r&&cs(r,n,6,t);const u=e[i+"Once"];if(u){if(!n.emitted)n.emitted={};else if(n.emitted[i])return;n.emitted[i]=!0,cs(u,n,6,t)}}function Al(n,s,a=!1){const e=s.emitsCache,t=e.get(n);if(t!==void 0)return t;const o=n.emits;let p={},i=!1;if(!tn(n)){const r=u=>{const d=Al(u,s,!0);d&&(i=!0,Cn(p,d))};!a&&s.mixins.length&&s.mixins.forEach(r),n.extends&&r(n.extends),n.mixins&&n.mixins.forEach(r)}return!o&&!i?(In(n)&&e.set(n,null),null):(Z(o)?o.forEach(r=>p[r]=null):Cn(p,o),In(n)&&e.set(n,p),p)}function mt(n,s){return!n||!Ee(s)?!1:(s=s.slice(2).replace(/Once$/,""),vn(n,s[0].toLowerCase()+s.slice(1))||vn(n,Ma(s))||vn(n,s))}let ps=null,wl=null;function et(n){const s=ps;return ps=n,wl=n&&n.type.__scopeId||null,s}function wd(n,s=ps,a){if(!s||n._n)return n;const e=(...t)=>{e._d&&Jp(-1);const o=et(s);let p;try{p=n(...t)}finally{et(o),e._d&&Jp(1)}return p};return e._n=!0,e._c=!0,e._d=!0,e}function It(n){const{type:s,vnode:a,proxy:e,withProxy:t,props:o,propsOptions:[p],slots:i,attrs:r,emit:u,render:d,renderCache:v,data:k,setupState:f,ctx:b,inheritAttrs:_}=n;let B,y;const T=et(n);try{if(a.shapeFlag&4){const O=t||e;B=ds(d.call(O,O,v,o,f,k,b)),y=r}else{const O=s;B=ds(O.length>1?O(o,{attrs:r,slots:i,emit:u}):O(o,null)),y=s.props?r:Bd(r)}}catch(O){ee.length=0,ge(O,n,1),B=Ln(ls)}let g=B;if(y&&_!==!1){const O=Object.keys(y),{shapeFlag:V}=g;O.length&&V&7&&(p&&O.some(Po)&&(y=Od(y,p)),g=Ys(g,y))}return a.dirs&&(g=Ys(g),g.dirs=g.dirs?g.dirs.concat(a.dirs):a.dirs),a.transition&&(g.transition=a.transition),B=g,et(T),B}const Bd=n=>{let s;for(const a in n)(a==="class"||a==="style"||Ee(a))&&((s||(s={}))[a]=n[a]);return s},Od=(n,s)=>{const a={};for(const e in n)(!Po(e)||!(e.slice(9)in s))&&(a[e]=n[e]);return a};function Td(n,s,a){const{props:e,children:t,component:o}=n,{props:p,children:i,patchFlag:r}=s,u=o.emitsOptions;if(s.dirs||s.transition)return!0;if(a&&r>=0){if(r&1024)return!0;if(r&16)return e?Fp(e,p,u):!!p;if(r&8){const d=s.dynamicProps;for(let v=0;v<d.length;v++){const k=d[v];if(p[k]!==e[k]&&!mt(u,k))return!0}}}else return(t||i)&&(!i||!i.$stable)?!0:e===p?!1:e?p?Fp(e,p,u):!0:!!p;return!1}function Fp(n,s,a){const e=Object.keys(s);if(e.length!==Object.keys(n).length)return!0;for(let t=0;t<e.length;t++){const o=e[t];if(s[o]!==n[o]&&!mt(a,o))return!0}return!1}function Dd({vnode:n,parent:s},a){for(;s&&s.subTree===n;)(n=s.vnode).el=a,s=s.parent}const Id=n=>n.__isSuspense;function Bl(n,s){s&&s.pendingBranch?Z(n)?s.effects.push(...n):s.effects.push(n):gd(n)}function Ol(n,s){return Uo(n,null,s)}const ze={};function fn(n,s,a){return Uo(n,s,a)}function Uo(n,s,{immediate:a,deep:e,flush:t,onTrack:o,onTrigger:p}=On){var i;const r=el()===((i=Vn)==null?void 0:i.scope)?Vn:null;let u,d=!1,v=!1;if(jn(n)?(u=()=>n.value,d=st(n)):Aa(n)?(u=()=>n,e=!0):Z(n)?(v=!0,d=n.some(O=>Aa(O)||st(O)),u=()=>n.map(O=>{if(jn(O))return O.value;if(Aa(O))return ba(O);if(tn(O))return Gs(O,r,2)})):tn(n)?s?u=()=>Gs(n,r,2):u=()=>{if(!(r&&r.isUnmounted))return k&&k(),cs(n,r,3,[f])}:u=ms,s&&e){const O=u;u=()=>ba(O())}let k,f=O=>{k=T.onStop=()=>{Gs(O,r,4)}},b;if(Ra)if(f=ms,s?a&&cs(s,r,3,[u(),v?[]:void 0,f]):u(),t==="sync"){const O=wv();b=O.__watcherHandles||(O.__watcherHandles=[])}else return ms;let _=v?new Array(n.length).fill(ze):ze;const B=()=>{if(T.active)if(s){const O=T.run();(e||d||(v?O.some((V,P)=>la(V,_[P])):la(O,_)))&&(k&&k(),cs(s,r,3,[O,_===ze?void 0:v&&_[0]===ze?[]:_,f]),_=O)}else T.run()};B.allowRecurse=!!s;let y;t==="sync"?y=B:t==="post"?y=()=>Wn(B,r&&r.suspense):(B.pre=!0,r&&(B.id=r.uid),y=()=>kt(B));const T=new So(u,y);s?a?B():_=T.run():t==="post"?Wn(T.run.bind(T),r&&r.suspense):T.run();const g=()=>{T.stop(),r&&r.scope&&Ro(r.scope.effects,T)};return b&&b.push(g),g}function Ld(n,s,a){const e=this.proxy,t=mn(n)?n.includes(".")?Tl(e,n):()=>e[n]:n.bind(e,e);let o;tn(s)?o=s:(o=s.handler,a=s);const p=Vn;Pa(this);const i=Uo(t,o.bind(e),a);return p?Pa(p):ca(),i}function Tl(n,s){const a=s.split(".");return()=>{let e=n;for(let t=0;t<a.length&&e;t++)e=e[a[t]];return e}}function ba(n,s){if(!In(n)||n.__v_skip||(s=s||new Set,s.has(n)))return n;if(s.add(n),jn(n))ba(n.value,s);else if(Z(n))for(let a=0;a<n.length;a++)ba(n[a],s);else if(Ou(n)||Xa(n))n.forEach(a=>{ba(a,s)});else if(Iu(n))for(const a in n)ba(n[a],s);return n}function ys(n,s,a,e){const t=n.dirs,o=s&&s.dirs;for(let p=0;p<t.length;p++){const i=t[p];o&&(i.oldValue=o[p].value);let r=i.dir[e];r&&($a(),cs(r,a,8,[n.el,i,n,s]),Na())}}const Hs=Symbol("_leaveCb"),He=Symbol("_enterCb");function Dl(){const n={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return gn(()=>{n.isMounted=!0}),Go(()=>{n.isUnmounting=!0}),n}const es=[Function,Array],Il={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:es,onEnter:es,onAfterEnter:es,onEnterCancelled:es,onBeforeLeave:es,onLeave:es,onAfterLeave:es,onLeaveCancelled:es,onBeforeAppear:es,onAppear:es,onAfterAppear:es,onAppearCancelled:es},Pd={name:"BaseTransition",props:Il,setup(n,{slots:s}){const a=ua(),e=Dl();let t;return()=>{const o=s.default&&Wo(s.default(),!0);if(!o||!o.length)return;let p=o[0];if(o.length>1){for(const _ of o)if(_.type!==ls){p=_;break}}const i=ln(n),{mode:r}=i;if(e.isLeaving)return Lt(p);const u=Mp(p);if(!u)return Lt(p);const d=re(u,i,e,a);ue(u,d);const v=a.subTree,k=v&&Mp(v);let f=!1;const{getTransitionKey:b}=u.type;if(b){const _=b();t===void 0?t=_:_!==t&&(t=_,f=!0)}if(k&&k.type!==ls&&(!ea(u,k)||f)){const _=re(k,i,e,a);if(ue(k,_),r==="out-in")return e.isLeaving=!0,_.afterLeave=()=>{e.isLeaving=!1,a.update.active!==!1&&a.update()},Lt(p);r==="in-out"&&u.type!==ls&&(_.delayLeave=(B,y,T)=>{const g=Ll(e,k);g[String(k.key)]=k,B[Hs]=()=>{y(),B[Hs]=void 0,delete d.delayedLeave},d.delayedLeave=T})}return p}}},Rd=Pd;function Ll(n,s){const{leavingVNodes:a}=n;let e=a.get(s.type);return e||(e=Object.create(null),a.set(s.type,e)),e}function re(n,s,a,e){const{appear:t,mode:o,persisted:p=!1,onBeforeEnter:i,onEnter:r,onAfterEnter:u,onEnterCancelled:d,onBeforeLeave:v,onLeave:k,onAfterLeave:f,onLeaveCancelled:b,onBeforeAppear:_,onAppear:B,onAfterAppear:y,onAppearCancelled:T}=s,g=String(n.key),O=Ll(a,n),V=(L,N)=>{L&&cs(L,e,9,N)},P=(L,N)=>{const H=N[1];V(L,N),Z(L)?L.every(nn=>nn.length<=1)&&H():L.length<=1&&H()},j={mode:o,persisted:p,beforeEnter(L){let N=i;if(!a.isMounted)if(t)N=_||i;else return;L[Hs]&&L[Hs](!0);const H=O[g];H&&ea(n,H)&&H.el[Hs]&&H.el[Hs](),V(N,[L])},enter(L){let N=r,H=u,nn=d;if(!a.isMounted)if(t)N=B||r,H=y||u,nn=T||d;else return;let z=!1;const sn=L[He]=Dn=>{z||(z=!0,Dn?V(nn,[L]):V(H,[L]),j.delayedLeave&&j.delayedLeave(),L[He]=void 0)};N?P(N,[L,sn]):sn()},leave(L,N){const H=String(n.key);if(L[He]&&L[He](!0),a.isUnmounting)return N();V(v,[L]);let nn=!1;const z=L[Hs]=sn=>{nn||(nn=!0,N(),sn?V(b,[L]):V(f,[L]),L[Hs]=void 0,O[H]===n&&delete O[H])};O[H]=n,k?P(k,[L,z]):z()},clone(L){return re(L,s,a,e)}};return j}function Lt(n){if(ye(n))return n=Ys(n),n.children=null,n}function Mp(n){return ye(n)?n.children?n.children[0]:void 0:n}function ue(n,s){n.shapeFlag&6&&n.component?ue(n.component.subTree,s):n.shapeFlag&128?(n.ssContent.transition=s.clone(n.ssContent),n.ssFallback.transition=s.clone(n.ssFallback)):n.transition=s}function Wo(n,s=!1,a){let e=[],t=0;for(let o=0;o<n.length;o++){let p=n[o];const i=a==null?p.key:String(a)+String(p.key!=null?p.key:o);p.type===Zn?(p.patchFlag&128&&t++,e=e.concat(Wo(p.children,s,i))):(s||p.type!==ls)&&e.push(i!=null?Ys(p,{key:i}):p)}if(t>1)for(let o=0;o<e.length;o++)e[o].patchFlag=-2;return e}/*! #__NO_SIDE_EFFECTS__ */function F(n,s){return tn(n)?(()=>Cn({name:n.name},s,{setup:n}))():n}const ne=n=>!!n.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function m(n){tn(n)&&(n={loader:n});const{loader:s,loadingComponent:a,errorComponent:e,delay:t=200,timeout:o,suspensible:p=!0,onError:i}=n;let r=null,u,d=0;const v=()=>(d++,r=null,k()),k=()=>{let f;return r||(f=r=s().catch(b=>{if(b=b instanceof Error?b:new Error(String(b)),i)return new Promise((_,B)=>{i(b,()=>_(v()),()=>B(b),d+1)});throw b}).then(b=>f!==r&&r?r:(b&&(b.__esModule||b[Symbol.toStringTag]==="Module")&&(b=b.default),u=b,b)))};return F({name:"AsyncComponentWrapper",__asyncLoader:k,get __asyncResolved(){return u},setup(){const f=Vn;if(u)return()=>Pt(u,f);const b=T=>{r=null,ge(T,f,13,!e)};if(p&&f.suspense||Ra)return k().then(T=>()=>Pt(T,f)).catch(T=>(b(T),()=>e?Ln(e,{error:T}):null));const _=Y(!1),B=Y(),y=Y(!!t);return t&&setTimeout(()=>{y.value=!1},t),o!=null&&setTimeout(()=>{if(!_.value&&!B.value){const T=new Error(`Async component timed out after ${o}ms.`);b(T),B.value=T}},o),k().then(()=>{_.value=!0,f.parent&&ye(f.parent.vnode)&&kt(f.parent.update)}).catch(T=>{b(T),B.value=T}),()=>{if(_.value&&u)return Pt(u,f);if(B.value&&e)return Ln(e,{error:B.value});if(a&&!y.value)return Ln(a)}}})}function Pt(n,s){const{ref:a,props:e,children:t,ce:o}=s.vnode,p=Ln(n,e,t);return p.ref=a,p.ce=o,delete s.vnode.ce,p}const ye=n=>n.type.__isKeepAlive;function xd(n,s){Pl(n,"a",s)}function Cd(n,s){Pl(n,"da",s)}function Pl(n,s,a=Vn){const e=n.__wdc||(n.__wdc=()=>{let t=a;for(;t;){if(t.isDeactivated)return;t=t.parent}return n()});if(ft(s,e,a),a){let t=a.parent;for(;t&&t.parent;)ye(t.parent.vnode)&&Vd(e,s,a,t),t=t.parent}}function Vd(n,s,a,e){const t=ft(s,n,e,!0);Ae(()=>{Ro(e[s],t)},a)}function ft(n,s,a=Vn,e=!1){if(a){const t=a[n]||(a[n]=[]),o=s.__weh||(s.__weh=(...p)=>{if(a.isUnmounted)return;$a(),Pa(a);const i=cs(s,a,n,p);return ca(),Na(),i});return e?t.unshift(o):t.push(o),o}}const Vs=n=>(s,a=Vn)=>(!Ra||n==="sp")&&ft(n,(...e)=>s(...e),a),jd=Vs("bm"),gn=Vs("m"),Sd=Vs("bu"),Rl=Vs("u"),Go=Vs("bum"),Ae=Vs("um"),Fd=Vs("sp"),Md=Vs("rtg"),$d=Vs("rtc");function Nd(n,s=Vn){ft("ec",n,s)}const xl="components";function ns(n,s){return Hd(xl,n,!0,s)||n}const zd=Symbol.for("v-ndc");function Hd(n,s,a=!0,e=!1){const t=ps||Vn;if(t){const o=t.type;if(n===xl){const i=gv(o,!1);if(i&&(i===s||i===is(s)||i===be(is(s))))return o}const p=$p(t[n]||o[n],s)||$p(t.appContext[n],s);return!p&&e?o:p}}function $p(n,s){return n&&(n[s]||n[is(s)]||n[be(is(s))])}const oo=n=>n?Gl(n)?Xo(n)||n.proxy:oo(n.parent):null,se=Cn(Object.create(null),{$:n=>n,$el:n=>n.vnode.el,$data:n=>n.data,$props:n=>n.props,$attrs:n=>n.attrs,$slots:n=>n.slots,$refs:n=>n.refs,$parent:n=>oo(n.parent),$root:n=>oo(n.root),$emit:n=>n.emit,$options:n=>Ko(n),$forceUpdate:n=>n.f||(n.f=()=>kt(n.update)),$nextTick:n=>n.n||(n.n=ra.bind(n.proxy)),$watch:n=>Ld.bind(n)}),Rt=(n,s)=>n!==On&&!n.__isScriptSetup&&vn(n,s),qd={get({_:n},s){const{ctx:a,setupState:e,data:t,props:o,accessCache:p,type:i,appContext:r}=n;let u;if(s[0]!=="$"){const f=p[s];if(f!==void 0)switch(f){case 1:return e[s];case 2:return t[s];case 4:return a[s];case 3:return o[s]}else{if(Rt(e,s))return p[s]=1,e[s];if(t!==On&&vn(t,s))return p[s]=2,t[s];if((u=n.propsOptions[0])&&vn(u,s))return p[s]=3,o[s];if(a!==On&&vn(a,s))return p[s]=4,a[s];po&&(p[s]=0)}}const d=se[s];let v,k;if(d)return s==="$attrs"&&Kn(n,"get",s),d(n);if((v=i.__cssModules)&&(v=v[s]))return v;if(a!==On&&vn(a,s))return p[s]=4,a[s];if(k=r.config.globalProperties,vn(k,s))return k[s]},set({_:n},s,a){const{data:e,setupState:t,ctx:o}=n;return Rt(t,s)?(t[s]=a,!0):e!==On&&vn(e,s)?(e[s]=a,!0):vn(n.props,s)||s[0]==="$"&&s.slice(1)in n?!1:(o[s]=a,!0)},has({_:{data:n,setupState:s,accessCache:a,ctx:e,appContext:t,propsOptions:o}},p){let i;return!!a[p]||n!==On&&vn(n,p)||Rt(s,p)||(i=o[0])&&vn(i,p)||vn(e,p)||vn(se,p)||vn(t.config.globalProperties,p)},defineProperty(n,s,a){return a.get!=null?n._.accessCache[s]=0:vn(a,"value")&&this.set(n,s,a.value,null),Reflect.defineProperty(n,s,a)}};function Np(n){return Z(n)?n.reduce((s,a)=>(s[a]=null,s),{}):n}let po=!0;function Ud(n){const s=Ko(n),a=n.proxy,e=n.ctx;po=!1,s.beforeCreate&&zp(s.beforeCreate,n,"bc");const{data:t,computed:o,methods:p,watch:i,provide:r,inject:u,created:d,beforeMount:v,mounted:k,beforeUpdate:f,updated:b,activated:_,deactivated:B,beforeDestroy:y,beforeUnmount:T,destroyed:g,unmounted:O,render:V,renderTracked:P,renderTriggered:j,errorCaptured:L,serverPrefetch:N,expose:H,inheritAttrs:nn,components:z,directives:sn,filters:Dn}=s;if(u&&Wd(u,e,null),p)for(const an in p){const K=p[an];tn(K)&&(e[an]=K.bind(a))}if(t){const an=t.call(a,a);In(an)&&(n.data=_e(an))}if(po=!0,o)for(const an in o){const K=o[an],Pn=tn(K)?K.bind(a,a):tn(K.get)?K.get.bind(a,a):ms,bs=!tn(K)&&tn(K.set)?K.set.bind(a):ms,as=w({get:Pn,set:bs});Object.defineProperty(e,an,{enumerable:!0,configurable:!0,get:()=>as.value,set:Sn=>as.value=Sn})}if(i)for(const an in i)Cl(i[an],e,a,an);if(r){const an=tn(r)?r.call(a):r;Reflect.ownKeys(an).forEach(K=>{fs(K,an[K])})}d&&zp(d,n,"c");function W(an,K){Z(K)?K.forEach(Pn=>an(Pn.bind(a))):K&&an(K.bind(a))}if(W(jd,v),W(gn,k),W(Sd,f),W(Rl,b),W(xd,_),W(Cd,B),W(Nd,L),W($d,P),W(Md,j),W(Go,T),W(Ae,O),W(Fd,N),Z(H))if(H.length){const an=n.exposed||(n.exposed={});H.forEach(K=>{Object.defineProperty(an,K,{get:()=>a[K],set:Pn=>a[K]=Pn})})}else n.exposed||(n.exposed={});V&&n.render===ms&&(n.render=V),nn!=null&&(n.inheritAttrs=nn),z&&(n.components=z),sn&&(n.directives=sn)}function Wd(n,s,a=ms){Z(n)&&(n=co(n));for(const e in n){const t=n[e];let o;In(t)?"default"in t?o=hn(t.from||e,t.default,!0):o=hn(t.from||e):o=hn(t),jn(o)?Object.defineProperty(s,e,{enumerable:!0,configurable:!0,get:()=>o.value,set:p=>o.value=p}):s[e]=o}}function zp(n,s,a){cs(Z(n)?n.map(e=>e.bind(s.proxy)):n.bind(s.proxy),s,a)}function Cl(n,s,a,e){const t=e.includes(".")?Tl(a,e):()=>a[e];if(mn(n)){const o=s[n];tn(o)&&fn(t,o)}else if(tn(n))fn(t,n.bind(a));else if(In(n))if(Z(n))n.forEach(o=>Cl(o,s,a,e));else{const o=tn(n.handler)?n.handler.bind(a):s[n.handler];tn(o)&&fn(t,o,n)}}function Ko(n){const s=n.type,{mixins:a,extends:e}=s,{mixins:t,optionsCache:o,config:{optionMergeStrategies:p}}=n.appContext,i=o.get(s);let r;return i?r=i:!t.length&&!a&&!e?r=s:(r={},t.length&&t.forEach(u=>tt(r,u,p,!0)),tt(r,s,p)),In(s)&&o.set(s,r),r}function tt(n,s,a,e=!1){const{mixins:t,extends:o}=s;o&&tt(n,o,a,!0),t&&t.forEach(p=>tt(n,p,a,!0));for(const p in s)if(!(e&&p==="expose")){const i=Gd[p]||a&&a[p];n[p]=i?i(n[p],s[p]):s[p]}return n}const Gd={data:Hp,props:qp,emits:qp,methods:Qa,computed:Qa,beforeCreate:$n,created:$n,beforeMount:$n,mounted:$n,beforeUpdate:$n,updated:$n,beforeDestroy:$n,beforeUnmount:$n,destroyed:$n,unmounted:$n,activated:$n,deactivated:$n,errorCaptured:$n,serverPrefetch:$n,components:Qa,directives:Qa,watch:Jd,provide:Hp,inject:Kd};function Hp(n,s){return s?n?function(){return Cn(tn(n)?n.call(this,this):n,tn(s)?s.call(this,this):s)}:s:n}function Kd(n,s){return Qa(co(n),co(s))}function co(n){if(Z(n)){const s={};for(let a=0;a<n.length;a++)s[n[a]]=n[a];return s}return n}function $n(n,s){return n?[...new Set([].concat(n,s))]:s}function Qa(n,s){return n?Cn(Object.create(null),n,s):s}function qp(n,s){return n?Z(n)&&Z(s)?[...new Set([...n,...s])]:Cn(Object.create(null),Np(n),Np(s??{})):s}function Jd(n,s){if(!n)return s;if(!s)return n;const a=Cn(Object.create(null),n);for(const e in s)a[e]=$n(n[e],s[e]);return a}function Vl(){return{app:null,config:{isNativeTag:Au,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Yd=0;function Qd(n,s){return function(e,t=null){tn(e)||(e=Cn({},e)),t!=null&&!In(t)&&(t=null);const o=Vl(),p=new WeakSet;let i=!1;const r=o.app={_uid:Yd++,_component:e,_props:t,_container:null,_context:o,_instance:null,version:Bv,get config(){return o.config},set config(u){},use(u,...d){return p.has(u)||(u&&tn(u.install)?(p.add(u),u.install(r,...d)):tn(u)&&(p.add(u),u(r,...d))),r},mixin(u){return o.mixins.includes(u)||o.mixins.push(u),r},component(u,d){return d?(o.components[u]=d,r):o.components[u]},directive(u,d){return d?(o.directives[u]=d,r):o.directives[u]},mount(u,d,v){if(!i){const k=Ln(e,t);return k.appContext=o,d&&s?s(k,u):n(k,u,v),i=!0,r._container=u,u.__vue_app__=r,Xo(k.component)||k.component.proxy}},unmount(){i&&(n(null,r._container),delete r._container.__vue_app__)},provide(u,d){return o.provides[u]=d,r},runWithContext(u){ot=r;try{return u()}finally{ot=null}}};return r}}let ot=null;function fs(n,s){if(Vn){let a=Vn.provides;const e=Vn.parent&&Vn.parent.provides;e===a&&(a=Vn.provides=Object.create(e)),a[n]=s}}function hn(n,s,a=!1){const e=Vn||ps;if(e||ot){const t=e?e.parent==null?e.vnode.appContext&&e.vnode.appContext.provides:e.parent.provides:ot._context.provides;if(t&&n in t)return t[n];if(arguments.length>1)return a&&tn(s)?s.call(e&&e.proxy):s}}function Xd(n,s,a,e=!1){const t={},o={};Ze(o,ht,1),n.propsDefaults=Object.create(null),jl(n,s,t,o);for(const p in n.propsOptions[0])p in t||(t[p]=void 0);a?n.props=e?t:kl(t):n.type.props?n.props=t:n.props=o,n.attrs=o}function Zd(n,s,a,e){const{props:t,attrs:o,vnode:{patchFlag:p}}=n,i=ln(t),[r]=n.propsOptions;let u=!1;if((e||p>0)&&!(p&16)){if(p&8){const d=n.vnode.dynamicProps;for(let v=0;v<d.length;v++){let k=d[v];if(mt(n.emitsOptions,k))continue;const f=s[k];if(r)if(vn(o,k))f!==o[k]&&(o[k]=f,u=!0);else{const b=is(k);t[b]=lo(r,i,b,f,n,!1)}else f!==o[k]&&(o[k]=f,u=!0)}}}else{jl(n,s,t,o)&&(u=!0);let d;for(const v in i)(!s||!vn(s,v)&&((d=Ma(v))===v||!vn(s,d)))&&(r?a&&(a[v]!==void 0||a[d]!==void 0)&&(t[v]=lo(r,i,v,void 0,n,!0)):delete t[v]);if(o!==i)for(const v in o)(!s||!vn(s,v))&&(delete o[v],u=!0)}u&&Rs(n,"set","$attrs")}function jl(n,s,a,e){const[t,o]=n.propsOptions;let p=!1,i;if(s)for(let r in s){if(Za(r))continue;const u=s[r];let d;t&&vn(t,d=is(r))?!o||!o.includes(d)?a[d]=u:(i||(i={}))[d]=u:mt(n.emitsOptions,r)||(!(r in e)||u!==e[r])&&(e[r]=u,p=!0)}if(o){const r=ln(a),u=i||On;for(let d=0;d<o.length;d++){const v=o[d];a[v]=lo(t,r,v,u[v],n,!vn(u,v))}}return p}function lo(n,s,a,e,t,o){const p=n[a];if(p!=null){const i=vn(p,"default");if(i&&e===void 0){const r=p.default;if(p.type!==Function&&!p.skipFactory&&tn(r)){const{propsDefaults:u}=t;a in u?e=u[a]:(Pa(t),e=u[a]=r.call(null,s),ca())}else e=r}p[0]&&(o&&!i?e=!1:p[1]&&(e===""||e===Ma(a))&&(e=!0))}return e}function Sl(n,s,a=!1){const e=s.propsCache,t=e.get(n);if(t)return t;const o=n.props,p={},i=[];let r=!1;if(!tn(n)){const d=v=>{r=!0;const[k,f]=Sl(v,s,!0);Cn(p,k),f&&i.push(...f)};!a&&s.mixins.length&&s.mixins.forEach(d),n.extends&&d(n.extends),n.mixins&&n.mixins.forEach(d)}if(!o&&!r)return In(n)&&e.set(n,ya),ya;if(Z(o))for(let d=0;d<o.length;d++){const v=is(o[d]);Up(v)&&(p[v]=On)}else if(o)for(const d in o){const v=is(d);if(Up(v)){const k=o[d],f=p[v]=Z(k)||tn(k)?{type:k}:Cn({},k);if(f){const b=Kp(Boolean,f.type),_=Kp(String,f.type);f[0]=b>-1,f[1]=_<0||b<_,(b>-1||vn(f,"default"))&&i.push(v)}}}const u=[p,i];return In(n)&&e.set(n,u),u}function Up(n){return n[0]!=="$"}function Wp(n){const s=n&&n.toString().match(/^\s*(function|class) (\w+)/);return s?s[2]:n===null?"null":""}function Gp(n,s){return Wp(n)===Wp(s)}function Kp(n,s){return Z(s)?s.findIndex(a=>Gp(a,n)):tn(s)&&Gp(s,n)?0:-1}const Fl=n=>n[0]==="_"||n==="$stable",Jo=n=>Z(n)?n.map(ds):[ds(n)],nv=(n,s,a)=>{if(s._n)return s;const e=wd((...t)=>Jo(s(...t)),a);return e._c=!1,e},Ml=(n,s,a)=>{const e=n._ctx;for(const t in n){if(Fl(t))continue;const o=n[t];if(tn(o))s[t]=nv(t,o,e);else if(o!=null){const p=Jo(o);s[t]=()=>p}}},$l=(n,s)=>{const a=Jo(s);n.slots.default=()=>a},sv=(n,s)=>{if(n.vnode.shapeFlag&32){const a=s._;a?(n.slots=ln(s),Ze(s,"_",a)):Ml(s,n.slots={})}else n.slots={},s&&$l(n,s);Ze(n.slots,ht,1)},av=(n,s,a)=>{const{vnode:e,slots:t}=n;let o=!0,p=On;if(e.shapeFlag&32){const i=s._;i?a&&i===1?o=!1:(Cn(t,s),!a&&i===1&&delete t._):(o=!s.$stable,Ml(s,t)),p=s}else s&&($l(n,s),p={default:1});if(o)for(const i in t)!Fl(i)&&p[i]==null&&delete t[i]};function pt(n,s,a,e,t=!1){if(Z(n)){n.forEach((k,f)=>pt(k,s&&(Z(s)?s[f]:s),a,e,t));return}if(ne(e)&&!t)return;const o=e.shapeFlag&4?Xo(e.component)||e.component.proxy:e.el,p=t?null:o,{i,r}=n,u=s&&s.r,d=i.refs===On?i.refs={}:i.refs,v=i.setupState;if(u!=null&&u!==r&&(mn(u)?(d[u]=null,vn(v,u)&&(v[u]=null)):jn(u)&&(u.value=null)),tn(r))Gs(r,i,12,[p,d]);else{const k=mn(r),f=jn(r);if(k||f){const b=()=>{if(n.f){const _=k?vn(v,r)?v[r]:d[r]:r.value;t?Z(_)&&Ro(_,o):Z(_)?_.includes(o)||_.push(o):k?(d[r]=[o],vn(v,r)&&(v[r]=d[r])):(r.value=[o],n.k&&(d[n.k]=r.value))}else k?(d[r]=p,vn(v,r)&&(v[r]=p)):f&&(r.value=p,n.k&&(d[n.k]=p))};p?(b.id=-1,Wn(b,a)):b()}}}let Fs=!1;const qe=n=>/svg/.test(n.namespaceURI)&&n.tagName!=="foreignObject",Ue=n=>n.nodeType===8;function ev(n){const{mt:s,p:a,o:{patchProp:e,createText:t,nextSibling:o,parentNode:p,remove:i,insert:r,createComment:u}}=n,d=(g,O)=>{if(!O.hasChildNodes()){a(null,g,O),at(),O._vnode=g;return}Fs=!1,v(O.firstChild,g,null,null,null),at(),O._vnode=g,Fs&&console.error("Hydration completed but contains mismatches.")},v=(g,O,V,P,j,L=!1)=>{const N=Ue(g)&&g.data==="[",H=()=>_(g,O,V,P,j,N),{type:nn,ref:z,shapeFlag:sn,patchFlag:Dn}=O;let Bn=g.nodeType;O.el=g,Dn===-2&&(L=!1,O.dynamicChildren=null);let W=null;switch(nn){case La:Bn!==3?O.children===""?(r(O.el=t(""),p(g),g),W=g):W=H():(g.data!==O.children&&(Fs=!0,g.data=O.children),W=o(g));break;case ls:if(Bn!==8||N)if(g.tagName.toLowerCase()==="template"){const an=O.el.content.firstChild;y(an,g,V),O.el=g=an,W=o(g)}else W=H();else W=o(g);break;case ae:if(N&&(g=o(g),Bn=g.nodeType),Bn===1||Bn===3){W=g;const an=!O.children.length;for(let K=0;K<O.staticCount;K++)an&&(O.children+=W.nodeType===1?W.outerHTML:W.data),K===O.staticCount-1&&(O.anchor=W),W=o(W);return N?o(W):W}else H();break;case Zn:N?W=b(g,O,V,P,j,L):W=H();break;default:if(sn&1)(Bn!==1||O.type.toLowerCase()!==g.tagName.toLowerCase())&&!T(g)?W=H():W=k(g,O,V,P,j,L);else if(sn&6){O.slotScopeIds=j;const an=p(g);if(N?W=B(g):Ue(g)&&g.data==="teleport start"?W=B(g,g.data,"teleport end"):W=o(g),s(O,an,null,V,P,qe(an),L),ne(O)){let K;N?(K=Ln(Zn),K.anchor=W?W.previousSibling:an.lastChild):K=g.nodeType===3?Wl(""):Ln("div"),K.el=g,O.component.subTree=K}}else sn&64?Bn!==8?W=H():W=O.type.hydrate(g,O,V,P,j,L,n,f):sn&128&&(W=O.type.hydrate(g,O,V,P,qe(p(g)),j,L,n,v))}return z!=null&&pt(z,null,P,O),W},k=(g,O,V,P,j,L)=>{L=L||!!O.dynamicChildren;const{type:N,props:H,patchFlag:nn,shapeFlag:z,dirs:sn,transition:Dn}=O,Bn=N==="input"&&sn||N==="option";if(Bn||nn!==-1){if(sn&&ys(O,null,V,"created"),H)if(Bn||!L||nn&48)for(const K in H)(Bn&&K.endsWith("value")||Ee(K)&&!Za(K))&&e(g,K,null,H[K],!1,void 0,V);else H.onClick&&e(g,"onClick",null,H.onClick,!1,void 0,V);let W;(W=H&&H.onVnodeBeforeMount)&&ts(W,V,O);let an=!1;if(T(g)){an=Nl(P,Dn)&&V&&V.vnode.props&&V.vnode.props.appear;const K=g.content.firstChild;an&&Dn.beforeEnter(K),y(K,g,V),O.el=g=K}if(sn&&ys(O,null,V,"beforeMount"),((W=H&&H.onVnodeMounted)||sn||an)&&Bl(()=>{W&&ts(W,V,O),an&&Dn.enter(g),sn&&ys(O,null,V,"mounted")},P),z&16&&!(H&&(H.innerHTML||H.textContent))){let K=f(g.firstChild,O,g,V,P,j,L);for(;K;){Fs=!0;const Pn=K;K=K.nextSibling,i(Pn)}}else z&8&&g.textContent!==O.children&&(Fs=!0,g.textContent=O.children)}return g.nextSibling},f=(g,O,V,P,j,L,N)=>{N=N||!!O.dynamicChildren;const H=O.children,nn=H.length;for(let z=0;z<nn;z++){const sn=N?H[z]:H[z]=ds(H[z]);if(g)g=v(g,sn,P,j,L,N);else{if(sn.type===La&&!sn.children)continue;Fs=!0,a(null,sn,V,null,P,j,qe(V),L)}}return g},b=(g,O,V,P,j,L)=>{const{slotScopeIds:N}=O;N&&(j=j?j.concat(N):N);const H=p(g),nn=f(o(g),O,H,V,P,j,L);return nn&&Ue(nn)&&nn.data==="]"?o(O.anchor=nn):(Fs=!0,r(O.anchor=u("]"),H,nn),nn)},_=(g,O,V,P,j,L)=>{if(Fs=!0,O.el=null,L){const nn=B(g);for(;;){const z=o(g);if(z&&z!==nn)i(z);else break}}const N=o(g),H=p(g);return i(g),a(null,O,H,N,V,P,qe(H),j),N},B=(g,O="[",V="]")=>{let P=0;for(;g;)if(g=o(g),g&&Ue(g)&&(g.data===O&&P++,g.data===V)){if(P===0)return o(g);P--}return g},y=(g,O,V)=>{const P=O.parentNode;P&&P.replaceChild(g,O);let j=V;for(;j;)j.vnode.el===O&&(j.vnode.el=g,j.subTree.el=g),j=j.parent},T=g=>g.nodeType===1&&g.tagName.toLowerCase()==="template";return[d,v]}const Wn=Bl;function tv(n){return ov(n,ev)}function ov(n,s){const a=no();a.__VUE__=!0;const{insert:e,remove:t,patchProp:o,createElement:p,createText:i,createComment:r,setText:u,setElementText:d,parentNode:v,nextSibling:k,setScopeId:f=ms,insertStaticContent:b}=n,_=(h,E,A,D=null,R=null,x=null,q=!1,S=null,$=!!E.dynamicChildren)=>{if(h===E)return;h&&!ea(h,E)&&(D=I(h),Sn(h,R,x,!0),h=null),E.patchFlag===-2&&($=!1,E.dynamicChildren=null);const{type:C,ref:Q,shapeFlag:G}=E;switch(C){case La:B(h,E,A,D);break;case ls:y(h,E,A,D);break;case ae:h==null&&T(E,A,D,q);break;case Zn:z(h,E,A,D,R,x,q,S,$);break;default:G&1?V(h,E,A,D,R,x,q,S,$):G&6?sn(h,E,A,D,R,x,q,S,$):(G&64||G&128)&&C.process(h,E,A,D,R,x,q,S,$,M)}Q!=null&&R&&pt(Q,h&&h.ref,x,E||h,!E)},B=(h,E,A,D)=>{if(h==null)e(E.el=i(E.children),A,D);else{const R=E.el=h.el;E.children!==h.children&&u(R,E.children)}},y=(h,E,A,D)=>{h==null?e(E.el=r(E.children||""),A,D):E.el=h.el},T=(h,E,A,D)=>{[h.el,h.anchor]=b(h.children,E,A,D,h.el,h.anchor)},g=({el:h,anchor:E},A,D)=>{let R;for(;h&&h!==E;)R=k(h),e(h,A,D),h=R;e(E,A,D)},O=({el:h,anchor:E})=>{let A;for(;h&&h!==E;)A=k(h),t(h),h=A;t(E)},V=(h,E,A,D,R,x,q,S,$)=>{q=q||E.type==="svg",h==null?P(E,A,D,R,x,q,S,$):N(h,E,R,x,q,S,$)},P=(h,E,A,D,R,x,q,S)=>{let $,C;const{type:Q,props:G,shapeFlag:X,transition:en,dirs:on}=h;if($=h.el=p(h.type,x,G&&G.is,G),X&8?d($,h.children):X&16&&L(h.children,$,null,D,R,x&&Q!=="foreignObject",q,S),on&&ys(h,null,D,"created"),j($,h,h.scopeId,q,D),G){for(const bn in G)bn!=="value"&&!Za(bn)&&o($,bn,null,G[bn],x,h.children,D,R,Rn);"value"in G&&o($,"value",null,G.value),(C=G.onVnodeBeforeMount)&&ts(C,D,h)}on&&ys(h,null,D,"beforeMount");const An=Nl(R,en);An&&en.beforeEnter($),e($,E,A),((C=G&&G.onVnodeMounted)||An||on)&&Wn(()=>{C&&ts(C,D,h),An&&en.enter($),on&&ys(h,null,D,"mounted")},R)},j=(h,E,A,D,R)=>{if(A&&f(h,A),D)for(let x=0;x<D.length;x++)f(h,D[x]);if(R){let x=R.subTree;if(E===x){const q=R.vnode;j(h,q,q.scopeId,q.slotScopeIds,R.parent)}}},L=(h,E,A,D,R,x,q,S,$=0)=>{for(let C=$;C<h.length;C++){const Q=h[C]=S?qs(h[C]):ds(h[C]);_(null,Q,E,A,D,R,x,q,S)}},N=(h,E,A,D,R,x,q)=>{const S=E.el=h.el;let{patchFlag:$,dynamicChildren:C,dirs:Q}=E;$|=h.patchFlag&16;const G=h.props||On,X=E.props||On;let en;A&&na(A,!1),(en=X.onVnodeBeforeUpdate)&&ts(en,A,E,h),Q&&ys(E,h,A,"beforeUpdate"),A&&na(A,!0);const on=R&&E.type!=="foreignObject";if(C?H(h.dynamicChildren,C,S,A,D,on,x):q||K(h,E,S,null,A,D,on,x,!1),$>0){if($&16)nn(S,E,G,X,A,D,R);else if($&2&&G.class!==X.class&&o(S,"class",null,X.class,R),$&4&&o(S,"style",G.style,X.style,R),$&8){const An=E.dynamicProps;for(let bn=0;bn<An.length;bn++){const xn=An[bn],rs=G[xn],va=X[xn];(va!==rs||xn==="value")&&o(S,xn,rs,va,R,h.children,A,D,Rn)}}$&1&&h.children!==E.children&&d(S,E.children)}else!q&&C==null&&nn(S,E,G,X,A,D,R);((en=X.onVnodeUpdated)||Q)&&Wn(()=>{en&&ts(en,A,E,h),Q&&ys(E,h,A,"updated")},D)},H=(h,E,A,D,R,x,q)=>{for(let S=0;S<E.length;S++){const $=h[S],C=E[S],Q=$.el&&($.type===Zn||!ea($,C)||$.shapeFlag&70)?v($.el):A;_($,C,Q,null,D,R,x,q,!0)}},nn=(h,E,A,D,R,x,q)=>{if(A!==D){if(A!==On)for(const S in A)!Za(S)&&!(S in D)&&o(h,S,A[S],null,q,E.children,R,x,Rn);for(const S in D){if(Za(S))continue;const $=D[S],C=A[S];$!==C&&S!=="value"&&o(h,S,C,$,q,E.children,R,x,Rn)}"value"in D&&o(h,"value",A.value,D.value)}},z=(h,E,A,D,R,x,q,S,$)=>{const C=E.el=h?h.el:i(""),Q=E.anchor=h?h.anchor:i("");let{patchFlag:G,dynamicChildren:X,slotScopeIds:en}=E;en&&(S=S?S.concat(en):en),h==null?(e(C,A,D),e(Q,A,D),L(E.children,A,Q,R,x,q,S,$)):G>0&&G&64&&X&&h.dynamicChildren?(H(h.dynamicChildren,X,A,R,x,q,S),(E.key!=null||R&&E===R.subTree)&&zl(h,E,!0)):K(h,E,A,Q,R,x,q,S,$)},sn=(h,E,A,D,R,x,q,S,$)=>{E.slotScopeIds=S,h==null?E.shapeFlag&512?R.ctx.activate(E,A,D,q,$):Dn(E,A,D,R,x,q,$):Bn(h,E,$)},Dn=(h,E,A,D,R,x,q)=>{const S=h.component=fv(h,D,R);if(ye(h)&&(S.ctx.renderer=M),hv(S),S.asyncDep){if(R&&R.registerDep(S,W),!h.el){const $=S.subTree=Ln(ls);y(null,$,E,A)}return}W(S,h,E,A,R,x,q)},Bn=(h,E,A)=>{const D=E.component=h.component;if(Td(h,E,A))if(D.asyncDep&&!D.asyncResolved){an(D,E,A);return}else D.next=E,_d(D.update),D.update();else E.el=h.el,D.vnode=E},W=(h,E,A,D,R,x,q)=>{const S=()=>{if(h.isMounted){let{next:Q,bu:G,u:X,parent:en,vnode:on}=h,An=Q,bn;na(h,!1),Q?(Q.el=on.el,an(h,Q,q)):Q=on,G&&Dt(G),(bn=Q.props&&Q.props.onVnodeBeforeUpdate)&&ts(bn,en,Q,on),na(h,!0);const xn=It(h),rs=h.subTree;h.subTree=xn,_(rs,xn,v(rs.el),I(rs),h,R,x),Q.el=xn.el,An===null&&Dd(h,xn.el),X&&Wn(X,R),(bn=Q.props&&Q.props.onVnodeUpdated)&&Wn(()=>ts(bn,en,Q,on),R)}else{let Q;const{el:G,props:X}=E,{bm:en,m:on,parent:An}=h,bn=ne(E);if(na(h,!1),en&&Dt(en),!bn&&(Q=X&&X.onVnodeBeforeMount)&&ts(Q,An,E),na(h,!0),G&&un){const xn=()=>{h.subTree=It(h),un(G,h.subTree,h,R,null)};bn?E.type.__asyncLoader().then(()=>!h.isUnmounted&&xn()):xn()}else{const xn=h.subTree=It(h);_(null,xn,A,D,h,R,x),E.el=xn.el}if(on&&Wn(on,R),!bn&&(Q=X&&X.onVnodeMounted)){const xn=E;Wn(()=>ts(Q,An,xn),R)}(E.shapeFlag&256||An&&ne(An.vnode)&&An.vnode.shapeFlag&256)&&h.a&&Wn(h.a,R),h.isMounted=!0,E=A=D=null}},$=h.effect=new So(S,()=>kt(C),h.scope),C=h.update=()=>$.run();C.id=h.uid,na(h,!0),C()},an=(h,E,A)=>{E.component=h;const D=h.vnode.props;h.vnode=E,h.next=null,Zd(h,E.props,D,A),av(h,E.children,A),$a(),Sp(),Na()},K=(h,E,A,D,R,x,q,S,$=!1)=>{const C=h&&h.children,Q=h?h.shapeFlag:0,G=E.children,{patchFlag:X,shapeFlag:en}=E;if(X>0){if(X&128){bs(C,G,A,D,R,x,q,S,$);return}else if(X&256){Pn(C,G,A,D,R,x,q,S,$);return}}en&8?(Q&16&&Rn(C,R,x),G!==C&&d(A,G)):Q&16?en&16?bs(C,G,A,D,R,x,q,S,$):Rn(C,R,x,!0):(Q&8&&d(A,""),en&16&&L(G,A,D,R,x,q,S,$))},Pn=(h,E,A,D,R,x,q,S,$)=>{h=h||ya,E=E||ya;const C=h.length,Q=E.length,G=Math.min(C,Q);let X;for(X=0;X<G;X++){const en=E[X]=$?qs(E[X]):ds(E[X]);_(h[X],en,A,null,R,x,q,S,$)}C>Q?Rn(h,R,x,!0,!1,G):L(E,A,D,R,x,q,S,$,G)},bs=(h,E,A,D,R,x,q,S,$)=>{let C=0;const Q=E.length;let G=h.length-1,X=Q-1;for(;C<=G&&C<=X;){const en=h[C],on=E[C]=$?qs(E[C]):ds(E[C]);if(ea(en,on))_(en,on,A,null,R,x,q,S,$);else break;C++}for(;C<=G&&C<=X;){const en=h[G],on=E[X]=$?qs(E[X]):ds(E[X]);if(ea(en,on))_(en,on,A,null,R,x,q,S,$);else break;G--,X--}if(C>G){if(C<=X){const en=X+1,on=en<Q?E[en].el:D;for(;C<=X;)_(null,E[C]=$?qs(E[C]):ds(E[C]),A,on,R,x,q,S,$),C++}}else if(C>X)for(;C<=G;)Sn(h[C],R,x,!0),C++;else{const en=C,on=C,An=new Map;for(C=on;C<=X;C++){const Qn=E[C]=$?qs(E[C]):ds(E[C]);Qn.key!=null&&An.set(Qn.key,C)}let bn,xn=0;const rs=X-on+1;let va=!1,Bp=0;const Wa=new Array(rs);for(C=0;C<rs;C++)Wa[C]=0;for(C=en;C<=G;C++){const Qn=h[C];if(xn>=rs){Sn(Qn,R,x,!0);continue}let gs;if(Qn.key!=null)gs=An.get(Qn.key);else for(bn=on;bn<=X;bn++)if(Wa[bn-on]===0&&ea(Qn,E[bn])){gs=bn;break}gs===void 0?Sn(Qn,R,x,!0):(Wa[gs-on]=C+1,gs>=Bp?Bp=gs:va=!0,_(Qn,E[gs],A,null,R,x,q,S,$),xn++)}const Op=va?pv(Wa):ya;for(bn=Op.length-1,C=rs-1;C>=0;C--){const Qn=on+C,gs=E[Qn],Tp=Qn+1<Q?E[Qn+1].el:D;Wa[C]===0?_(null,gs,A,Tp,R,x,q,S,$):va&&(bn<0||C!==Op[bn]?as(gs,A,Tp,2):bn--)}}},as=(h,E,A,D,R=null)=>{const{el:x,type:q,transition:S,children:$,shapeFlag:C}=h;if(C&6){as(h.component.subTree,E,A,D);return}if(C&128){h.suspense.move(E,A,D);return}if(C&64){q.move(h,E,A,M);return}if(q===Zn){e(x,E,A);for(let G=0;G<$.length;G++)as($[G],E,A,D);e(h.anchor,E,A);return}if(q===ae){g(h,E,A);return}if(D!==2&&C&1&&S)if(D===0)S.beforeEnter(x),e(x,E,A),Wn(()=>S.enter(x),R);else{const{leave:G,delayLeave:X,afterLeave:en}=S,on=()=>e(x,E,A),An=()=>{G(x,()=>{on(),en&&en()})};X?X(x,on,An):An()}else e(x,E,A)},Sn=(h,E,A,D=!1,R=!1)=>{const{type:x,props:q,ref:S,children:$,dynamicChildren:C,shapeFlag:Q,patchFlag:G,dirs:X}=h;if(S!=null&&pt(S,null,A,h,!0),Q&256){E.ctx.deactivate(h);return}const en=Q&1&&X,on=!ne(h);let An;if(on&&(An=q&&q.onVnodeBeforeUnmount)&&ts(An,E,h),Q&6)_s(h.component,A,D);else{if(Q&128){h.suspense.unmount(A,D);return}en&&ys(h,null,E,"beforeUnmount"),Q&64?h.type.remove(h,E,A,R,M,D):C&&(x!==Zn||G>0&&G&64)?Rn(C,E,A,!1,!0):(x===Zn&&G&384||!R&&Q&16)&&Rn($,E,A),D&&Yn(h)}(on&&(An=q&&q.onVnodeUnmounted)||en)&&Wn(()=>{An&&ts(An,E,h),en&&ys(h,null,E,"unmounted")},A)},Yn=h=>{const{type:E,el:A,anchor:D,transition:R}=h;if(E===Zn){Os(A,D);return}if(E===ae){O(h);return}const x=()=>{t(A),R&&!R.persisted&&R.afterLeave&&R.afterLeave()};if(h.shapeFlag&1&&R&&!R.persisted){const{leave:q,delayLeave:S}=R,$=()=>q(A,x);S?S(h.el,x,$):$()}else x()},Os=(h,E)=>{let A;for(;h!==E;)A=k(h),t(h),h=A;t(E)},_s=(h,E,A)=>{const{bum:D,scope:R,update:x,subTree:q,um:S}=h;D&&Dt(D),R.stop(),x&&(x.active=!1,Sn(q,h,E,A)),S&&Wn(S,E),Wn(()=>{h.isUnmounted=!0},E),E&&E.pendingBranch&&!E.isUnmounted&&h.asyncDep&&!h.asyncResolved&&h.suspenseId===E.pendingId&&(E.deps--,E.deps===0&&E.resolve())},Rn=(h,E,A,D=!1,R=!1,x=0)=>{for(let q=x;q<h.length;q++)Sn(h[q],E,A,D,R)},I=h=>h.shapeFlag&6?I(h.component.subTree):h.shapeFlag&128?h.suspense.next():k(h.anchor||h.el),U=(h,E,A)=>{h==null?E._vnode&&Sn(E._vnode,null,null,!0):_(E._vnode||null,h,E,null,null,null,A),Sp(),at(),E._vnode=h},M={p:_,um:Sn,m:as,r:Yn,mt:Dn,mc:L,pc:K,pbc:H,n:I,o:n};let J,un;return s&&([J,un]=s(M)),{render:U,hydrate:J,createApp:Qd(U,J)}}function na({effect:n,update:s},a){n.allowRecurse=s.allowRecurse=a}function Nl(n,s){return(!n||n&&!n.pendingBranch)&&s&&!s.persisted}function zl(n,s,a=!1){const e=n.children,t=s.children;if(Z(e)&&Z(t))for(let o=0;o<e.length;o++){const p=e[o];let i=t[o];i.shapeFlag&1&&!i.dynamicChildren&&((i.patchFlag<=0||i.patchFlag===32)&&(i=t[o]=qs(t[o]),i.el=p.el),a||zl(p,i)),i.type===La&&(i.el=p.el)}}function pv(n){const s=n.slice(),a=[0];let e,t,o,p,i;const r=n.length;for(e=0;e<r;e++){const u=n[e];if(u!==0){if(t=a[a.length-1],n[t]<u){s[e]=t,a.push(e);continue}for(o=0,p=a.length-1;o<p;)i=o+p>>1,n[a[i]]<u?o=i+1:p=i;u<n[a[o]]&&(o>0&&(s[e]=a[o-1]),a[o]=e)}}for(o=a.length,p=a[o-1];o-- >0;)a[o]=p,p=s[p];return a}const cv=n=>n.__isTeleport,Zn=Symbol.for("v-fgt"),La=Symbol.for("v-txt"),ls=Symbol.for("v-cmt"),ae=Symbol.for("v-stc"),ee=[];let ks=null;function lv(n=!1){ee.push(ks=n?null:[])}function iv(){ee.pop(),ks=ee[ee.length-1]||null}let de=1;function Jp(n){de+=n}function Hl(n){return n.dynamicChildren=de>0?ks||ya:null,iv(),de>0&&ks&&ks.push(n),n}function Q8(n,s,a,e,t,o){return Hl(Ul(n,s,a,e,t,o,!0))}function rv(n,s,a,e,t){return Hl(Ln(n,s,a,e,t,!0))}function io(n){return n?n.__v_isVNode===!0:!1}function ea(n,s){return n.type===s.type&&n.key===s.key}const ht="__vInternal",ql=({key:n})=>n??null,Xe=({ref:n,ref_key:s,ref_for:a})=>(typeof n=="number"&&(n=""+n),n!=null?mn(n)||jn(n)||tn(n)?{i:ps,r:n,k:s,f:!!a}:n:null);function Ul(n,s=null,a=null,e=0,t=null,o=n===Zn?0:1,p=!1,i=!1){const r={__v_isVNode:!0,__v_skip:!0,type:n,props:s,key:s&&ql(s),ref:s&&Xe(s),scopeId:wl,slotScopeIds:null,children:a,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:o,patchFlag:e,dynamicProps:t,dynamicChildren:null,appContext:null,ctx:ps};return i?(Yo(r,a),o&128&&n.normalize(r)):a&&(r.shapeFlag|=mn(a)?8:16),de>0&&!p&&ks&&(r.patchFlag>0||o&6)&&r.patchFlag!==32&&ks.push(r),r}const Ln=uv;function uv(n,s=null,a=null,e=0,t=null,o=!1){if((!n||n===zd)&&(n=ls),io(n)){const i=Ys(n,s,!0);return a&&Yo(i,a),de>0&&!o&&ks&&(i.shapeFlag&6?ks[ks.indexOf(n)]=i:ks.push(i)),i.patchFlag|=-2,i}if(yv(n)&&(n=n.__vccOpts),s){s=dv(s);let{class:i,style:r}=s;i&&!mn(i)&&(s.class=Vo(i)),In(r)&&(ml(r)&&!Z(r)&&(r=Cn({},r)),s.style=Co(r))}const p=mn(n)?1:Id(n)?128:cv(n)?64:In(n)?4:tn(n)?2:0;return Ul(n,s,a,e,t,p,o,!0)}function dv(n){return n?ml(n)||ht in n?Cn({},n):n:null}function Ys(n,s,a=!1){const{props:e,ref:t,patchFlag:o,children:p}=n,i=s?vv(e||{},s):e;return{__v_isVNode:!0,__v_skip:!0,type:n.type,props:i,key:i&&ql(i),ref:s&&s.ref?a&&t?Z(t)?t.concat(Xe(s)):[t,Xe(s)]:Xe(s):t,scopeId:n.scopeId,slotScopeIds:n.slotScopeIds,children:p,target:n.target,targetAnchor:n.targetAnchor,staticCount:n.staticCount,shapeFlag:n.shapeFlag,patchFlag:s&&n.type!==Zn?o===-1?16:o|16:o,dynamicProps:n.dynamicProps,dynamicChildren:n.dynamicChildren,appContext:n.appContext,dirs:n.dirs,transition:n.transition,component:n.component,suspense:n.suspense,ssContent:n.ssContent&&Ys(n.ssContent),ssFallback:n.ssFallback&&Ys(n.ssFallback),el:n.el,anchor:n.anchor,ctx:n.ctx,ce:n.ce}}function Wl(n=" ",s=0){return Ln(La,null,n,s)}function X8(n,s){const a=Ln(ae,null,n);return a.staticCount=s,a}function Z8(n="",s=!1){return s?(lv(),rv(ls,null,n)):Ln(ls,null,n)}function ds(n){return n==null||typeof n=="boolean"?Ln(ls):Z(n)?Ln(Zn,null,n.slice()):typeof n=="object"?qs(n):Ln(La,null,String(n))}function qs(n){return n.el===null&&n.patchFlag!==-1||n.memo?n:Ys(n)}function Yo(n,s){let a=0;const{shapeFlag:e}=n;if(s==null)s=null;else if(Z(s))a=16;else if(typeof s=="object")if(e&65){const t=s.default;t&&(t._c&&(t._d=!1),Yo(n,t()),t._c&&(t._d=!0));return}else{a=32;const t=s._;!t&&!(ht in s)?s._ctx=ps:t===3&&ps&&(ps.slots._===1?s._=1:(s._=2,n.patchFlag|=1024))}else tn(s)?(s={default:s,_ctx:ps},a=32):(s=String(s),e&64?(a=16,s=[Wl(s)]):a=8);n.children=s,n.shapeFlag|=a}function vv(...n){const s={};for(let a=0;a<n.length;a++){const e=n[a];for(const t in e)if(t==="class")s.class!==e.class&&(s.class=Vo([s.class,e.class]));else if(t==="style")s.style=Co([s.style,e.style]);else if(Ee(t)){const o=s[t],p=e[t];p&&o!==p&&!(Z(o)&&o.includes(p))&&(s[t]=o?[].concat(o,p):p)}else t!==""&&(s[t]=e[t])}return s}function ts(n,s,a,e=null){cs(n,s,7,[a,e])}const kv=Vl();let mv=0;function fv(n,s,a){const e=n.type,t=(s?s.appContext:n.appContext)||kv,o={uid:mv++,vnode:n,type:e,parent:s,appContext:t,root:null,next:null,subTree:null,effect:null,update:null,scope:new $u(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:s?s.provides:Object.create(t.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Sl(e,t),emitsOptions:Al(e,t),emit:null,emitted:null,propsDefaults:On,inheritAttrs:e.inheritAttrs,ctx:On,data:On,props:On,attrs:On,slots:On,refs:On,setupState:On,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:a,suspenseId:a?a.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx={_:o},o.root=s?s.root:o,o.emit=Ad.bind(null,o),n.ce&&n.ce(o),o}let Vn=null;const ua=()=>Vn||ps;let Qo,ka,Yp="__VUE_INSTANCE_SETTERS__";(ka=no()[Yp])||(ka=no()[Yp]=[]),ka.push(n=>Vn=n),Qo=n=>{ka.length>1?ka.forEach(s=>s(n)):ka[0](n)};const Pa=n=>{Qo(n),n.scope.on()},ca=()=>{Vn&&Vn.scope.off(),Qo(null)};function Gl(n){return n.vnode.shapeFlag&4}let Ra=!1;function hv(n,s=!1){Ra=s;const{props:a,children:e}=n.vnode,t=Gl(n);Xd(n,a,t,s),sv(n,e);const o=t?Ev(n,s):void 0;return Ra=!1,o}function Ev(n,s){const a=n.type;n.accessCache=Object.create(null),n.proxy=fl(new Proxy(n.ctx,qd));const{setup:e}=a;if(e){const t=n.setupContext=e.length>1?_v(n):null;Pa(n),$a();const o=Gs(e,n,0,[n.props,t]);if(Na(),ca(),sl(o)){if(o.then(ca,ca),s)return o.then(p=>{Qp(n,p,s)}).catch(p=>{ge(p,n,0)});n.asyncDep=o}else Qp(n,o,s)}else Kl(n,s)}function Qp(n,s,a){tn(s)?n.type.__ssrInlineRender?n.ssrRender=s:n.render=s:In(s)&&(n.setupState=El(s)),Kl(n,a)}let Xp;function Kl(n,s,a){const e=n.type;if(!n.render){if(!s&&Xp&&!e.render){const t=e.template||Ko(n).template;if(t){const{isCustomElement:o,compilerOptions:p}=n.appContext.config,{delimiters:i,compilerOptions:r}=e,u=Cn(Cn({isCustomElement:o,delimiters:i},p),r);e.render=Xp(t,u)}}n.render=e.render||ms}{Pa(n),$a();try{Ud(n)}finally{Na(),ca()}}}function bv(n){return n.attrsProxy||(n.attrsProxy=new Proxy(n.attrs,{get(s,a){return Kn(n,"get","$attrs"),s[a]}}))}function _v(n){const s=a=>{n.exposed=a||{}};return{get attrs(){return bv(n)},slots:n.slots,emit:n.emit,expose:s}}function Xo(n){if(n.exposed)return n.exposeProxy||(n.exposeProxy=new Proxy(El(fl(n.exposed)),{get(s,a){if(a in s)return s[a];if(a in se)return se[a](n)},has(s,a){return a in s||a in se}}))}function gv(n,s=!0){return tn(n)?n.displayName||n.name:n.name||s&&n.__name}function yv(n){return tn(n)&&"__vccOpts"in n}const w=(n,s)=>hd(n,s,Ra);function c(n,s,a){const e=arguments.length;return e===2?In(s)&&!Z(s)?io(s)?Ln(n,null,[s]):Ln(n,s):Ln(n,null,s):(e>3?a=Array.prototype.slice.call(arguments,2):e===3&&io(a)&&(a=[a]),Ln(n,s,a))}const Av=Symbol.for("v-scx"),wv=()=>hn(Av),Bv="3.3.7",Ov="http://www.w3.org/2000/svg",ta=typeof document<"u"?document:null,Zp=ta&&ta.createElement("template"),Tv={insert:(n,s,a)=>{s.insertBefore(n,a||null)},remove:n=>{const s=n.parentNode;s&&s.removeChild(n)},createElement:(n,s,a,e)=>{const t=s?ta.createElementNS(Ov,n):ta.createElement(n,a?{is:a}:void 0);return n==="select"&&e&&e.multiple!=null&&t.setAttribute("multiple",e.multiple),t},createText:n=>ta.createTextNode(n),createComment:n=>ta.createComment(n),setText:(n,s)=>{n.nodeValue=s},setElementText:(n,s)=>{n.textContent=s},parentNode:n=>n.parentNode,nextSibling:n=>n.nextSibling,querySelector:n=>ta.querySelector(n),setScopeId(n,s){n.setAttribute(s,"")},insertStaticContent(n,s,a,e,t,o){const p=a?a.previousSibling:s.lastChild;if(t&&(t===o||t.nextSibling))for(;s.insertBefore(t.cloneNode(!0),a),!(t===o||!(t=t.nextSibling)););else{Zp.innerHTML=e?`<svg>${n}</svg>`:n;const i=Zp.content;if(e){const r=i.firstChild;for(;r.firstChild;)i.appendChild(r.firstChild);i.removeChild(r)}s.insertBefore(i,a)}return[p?p.nextSibling:s.firstChild,a?a.previousSibling:s.lastChild]}},Ms="transition",Ga="animation",xa=Symbol("_vtc"),Qs=(n,{slots:s})=>c(Rd,Yl(n),s);Qs.displayName="Transition";const Jl={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},Dv=Qs.props=Cn({},Il,Jl),sa=(n,s=[])=>{Z(n)?n.forEach(a=>a(...s)):n&&n(...s)},nc=n=>n?Z(n)?n.some(s=>s.length>1):n.length>1:!1;function Yl(n){const s={};for(const z in n)z in Jl||(s[z]=n[z]);if(n.css===!1)return s;const{name:a="v",type:e,duration:t,enterFromClass:o=`${a}-enter-from`,enterActiveClass:p=`${a}-enter-active`,enterToClass:i=`${a}-enter-to`,appearFromClass:r=o,appearActiveClass:u=p,appearToClass:d=i,leaveFromClass:v=`${a}-leave-from`,leaveActiveClass:k=`${a}-leave-active`,leaveToClass:f=`${a}-leave-to`}=n,b=Iv(t),_=b&&b[0],B=b&&b[1],{onBeforeEnter:y,onEnter:T,onEnterCancelled:g,onLeave:O,onLeaveCancelled:V,onBeforeAppear:P=y,onAppear:j=T,onAppearCancelled:L=g}=s,N=(z,sn,Dn)=>{zs(z,sn?d:i),zs(z,sn?u:p),Dn&&Dn()},H=(z,sn)=>{z._isLeaving=!1,zs(z,v),zs(z,f),zs(z,k),sn&&sn()},nn=z=>(sn,Dn)=>{const Bn=z?j:T,W=()=>N(sn,z,Dn);sa(Bn,[sn,W]),sc(()=>{zs(sn,z?r:o),Ds(sn,z?d:i),nc(Bn)||ac(sn,e,_,W)})};return Cn(s,{onBeforeEnter(z){sa(y,[z]),Ds(z,o),Ds(z,p)},onBeforeAppear(z){sa(P,[z]),Ds(z,r),Ds(z,u)},onEnter:nn(!1),onAppear:nn(!0),onLeave(z,sn){z._isLeaving=!0;const Dn=()=>H(z,sn);Ds(z,v),Xl(),Ds(z,k),sc(()=>{z._isLeaving&&(zs(z,v),Ds(z,f),nc(O)||ac(z,e,B,Dn))}),sa(O,[z,Dn])},onEnterCancelled(z){N(z,!1),sa(g,[z])},onAppearCancelled(z){N(z,!0),sa(L,[z])},onLeaveCancelled(z){H(z),sa(V,[z])}})}function Iv(n){if(n==null)return null;if(In(n))return[xt(n.enter),xt(n.leave)];{const s=xt(n);return[s,s]}}function xt(n){return xu(n)}function Ds(n,s){s.split(/\s+/).forEach(a=>a&&n.classList.add(a)),(n[xa]||(n[xa]=new Set)).add(s)}function zs(n,s){s.split(/\s+/).forEach(e=>e&&n.classList.remove(e));const a=n[xa];a&&(a.delete(s),a.size||(n[xa]=void 0))}function sc(n){requestAnimationFrame(()=>{requestAnimationFrame(n)})}let Lv=0;function ac(n,s,a,e){const t=n._endId=++Lv,o=()=>{t===n._endId&&e()};if(a)return setTimeout(o,a);const{type:p,timeout:i,propCount:r}=Ql(n,s);if(!p)return e();const u=p+"end";let d=0;const v=()=>{n.removeEventListener(u,k),o()},k=f=>{f.target===n&&++d>=r&&v()};setTimeout(()=>{d<r&&v()},i+1),n.addEventListener(u,k)}function Ql(n,s){const a=window.getComputedStyle(n),e=b=>(a[b]||"").split(", "),t=e(`${Ms}Delay`),o=e(`${Ms}Duration`),p=ec(t,o),i=e(`${Ga}Delay`),r=e(`${Ga}Duration`),u=ec(i,r);let d=null,v=0,k=0;s===Ms?p>0&&(d=Ms,v=p,k=o.length):s===Ga?u>0&&(d=Ga,v=u,k=r.length):(v=Math.max(p,u),d=v>0?p>u?Ms:Ga:null,k=d?d===Ms?o.length:r.length:0);const f=d===Ms&&/\b(transform|all)(,|$)/.test(e(`${Ms}Property`).toString());return{type:d,timeout:v,propCount:k,hasTransform:f}}function ec(n,s){for(;n.length<s.length;)n=n.concat(n);return Math.max(...s.map((a,e)=>tc(a)+tc(n[e])))}function tc(n){return n==="auto"?0:Number(n.slice(0,-1).replace(",","."))*1e3}function Xl(){return document.body.offsetHeight}function Pv(n,s,a){const e=n[xa];e&&(s=(s?[s,...e]:[...e]).join(" ")),s==null?n.removeAttribute("class"):a?n.setAttribute("class",s):n.className=s}const Rv=Symbol("_vod");function xv(n,s,a){const e=n.style,t=mn(a);if(a&&!t){if(s&&!mn(s))for(const o in s)a[o]==null&&ro(e,o,"");for(const o in a)ro(e,o,a[o])}else{const o=e.display;t?s!==a&&(e.cssText=a):s&&n.removeAttribute("style"),Rv in n&&(e.display=o)}}const oc=/\s*!important$/;function ro(n,s,a){if(Z(a))a.forEach(e=>ro(n,s,e));else if(a==null&&(a=""),s.startsWith("--"))n.setProperty(s,a);else{const e=Cv(n,s);oc.test(a)?n.setProperty(Ma(e),a.replace(oc,""),"important"):n[e]=a}}const pc=["Webkit","Moz","ms"],Ct={};function Cv(n,s){const a=Ct[s];if(a)return a;let e=is(s);if(e!=="filter"&&e in n)return Ct[s]=e;e=be(e);for(let t=0;t<pc.length;t++){const o=pc[t]+e;if(o in n)return Ct[s]=o}return s}const cc="http://www.w3.org/1999/xlink";function Vv(n,s,a,e,t){if(e&&s.startsWith("xlink:"))a==null?n.removeAttributeNS(cc,s.slice(6,s.length)):n.setAttributeNS(cc,s,a);else{const o=Mu(s);a==null||o&&!al(a)?n.removeAttribute(s):n.setAttribute(s,o?"":a)}}function jv(n,s,a,e,t,o,p){if(s==="innerHTML"||s==="textContent"){e&&p(e,t,o),n[s]=a??"";return}const i=n.tagName;if(s==="value"&&i!=="PROGRESS"&&!i.includes("-")){n._value=a;const u=i==="OPTION"?n.getAttribute("value"):n.value,d=a??"";u!==d&&(n.value=d),a==null&&n.removeAttribute(s);return}let r=!1;if(a===""||a==null){const u=typeof n[s];u==="boolean"?a=al(a):a==null&&u==="string"?(a="",r=!0):u==="number"&&(a=0,r=!0)}try{n[s]=a}catch{}r&&n.removeAttribute(s)}function Sv(n,s,a,e){n.addEventListener(s,a,e)}function Fv(n,s,a,e){n.removeEventListener(s,a,e)}const lc=Symbol("_vei");function Mv(n,s,a,e,t=null){const o=n[lc]||(n[lc]={}),p=o[s];if(e&&p)p.value=e;else{const[i,r]=$v(s);if(e){const u=o[s]=Hv(e,t);Sv(n,i,u,r)}else p&&(Fv(n,i,p,r),o[s]=void 0)}}const ic=/(?:Once|Passive|Capture)$/;function $v(n){let s;if(ic.test(n)){s={};let e;for(;e=n.match(ic);)n=n.slice(0,n.length-e[0].length),s[e[0].toLowerCase()]=!0}return[n[2]===":"?n.slice(3):Ma(n.slice(2)),s]}let Vt=0;const Nv=Promise.resolve(),zv=()=>Vt||(Nv.then(()=>Vt=0),Vt=Date.now());function Hv(n,s){const a=e=>{if(!e._vts)e._vts=Date.now();else if(e._vts<=a.attached)return;cs(qv(e,a.value),s,5,[e])};return a.value=n,a.attached=zv(),a}function qv(n,s){if(Z(s)){const a=n.stopImmediatePropagation;return n.stopImmediatePropagation=()=>{a.call(n),n._stopped=!0},s.map(e=>t=>!t._stopped&&e&&e(t))}else return s}const rc=/^on[a-z]/,Uv=(n,s,a,e,t=!1,o,p,i,r)=>{s==="class"?Pv(n,e,t):s==="style"?xv(n,a,e):Ee(s)?Po(s)||Mv(n,s,a,e,p):(s[0]==="."?(s=s.slice(1),!0):s[0]==="^"?(s=s.slice(1),!1):Wv(n,s,e,t))?jv(n,s,e,o,p,i,r):(s==="true-value"?n._trueValue=e:s==="false-value"&&(n._falseValue=e),Vv(n,s,e,t))};function Wv(n,s,a,e){return e?!!(s==="innerHTML"||s==="textContent"||s in n&&rc.test(s)&&tn(a)):s==="spellcheck"||s==="draggable"||s==="translate"||s==="form"||s==="list"&&n.tagName==="INPUT"||s==="type"&&n.tagName==="TEXTAREA"||rc.test(s)&&mn(a)?!1:s in n}const Zl=new WeakMap,ni=new WeakMap,ct=Symbol("_moveCb"),uc=Symbol("_enterCb"),si={name:"TransitionGroup",props:Cn({},Dv,{tag:String,moveClass:String}),setup(n,{slots:s}){const a=ua(),e=Dl();let t,o;return Rl(()=>{if(!t.length)return;const p=n.moveClass||`${n.name||"v"}-move`;if(!Xv(t[0].el,a.vnode.el,p))return;t.forEach(Jv),t.forEach(Yv);const i=t.filter(Qv);Xl(),i.forEach(r=>{const u=r.el,d=u.style;Ds(u,p),d.transform=d.webkitTransform=d.transitionDuration="";const v=u[ct]=k=>{k&&k.target!==u||(!k||/transform$/.test(k.propertyName))&&(u.removeEventListener("transitionend",v),u[ct]=null,zs(u,p))};u.addEventListener("transitionend",v)})}),()=>{const p=ln(n),i=Yl(p);let r=p.tag||Zn;t=o,o=s.default?Wo(s.default()):[];for(let u=0;u<o.length;u++){const d=o[u];d.key!=null&&ue(d,re(d,i,e,a))}if(t)for(let u=0;u<t.length;u++){const d=t[u];ue(d,re(d,i,e,a)),Zl.set(d,d.el.getBoundingClientRect())}return Ln(r,null,o)}}},Gv=n=>delete n.mode;si.props;const Kv=si;function Jv(n){const s=n.el;s[ct]&&s[ct](),s[uc]&&s[uc]()}function Yv(n){ni.set(n,n.el.getBoundingClientRect())}function Qv(n){const s=Zl.get(n),a=ni.get(n),e=s.left-a.left,t=s.top-a.top;if(e||t){const o=n.el.style;return o.transform=o.webkitTransform=`translate(${e}px,${t}px)`,o.transitionDuration="0s",n}}function Xv(n,s,a){const e=n.cloneNode(),t=n[xa];t&&t.forEach(i=>{i.split(/\s+/).forEach(r=>r&&e.classList.remove(r))}),a.split(/\s+/).forEach(i=>i&&e.classList.add(i)),e.style.display="none";const o=s.nodeType===1?s:s.parentNode;o.appendChild(e);const{hasTransform:p}=Ql(e);return o.removeChild(e),p}const Zv=Cn({patchProp:Uv},Tv);let jt,dc=!1;function nk(){return jt=dc?jt:tv(Zv),dc=!0,jt}const sk=(...n)=>{const s=nk().createApp(...n),{mount:a}=s;return s.mount=e=>{const t=ak(e);if(t)return a(t,!0,t instanceof SVGElement)},s};function ak(n){return mn(n)?document.querySelector(n):n}const ek={"v-8daa1a0e":()=>l(()=>import("./index.html-e621fcfe.js"),[]).then(({data:n})=>n),"v-184f4da6":()=>l(()=>import("./intro.html-0fa2f037.js"),[]).then(({data:n})=>n),"v-2e3eac9e":()=>l(()=>import("./slides.html-e26a3f00.js"),[]).then(({data:n})=>n),"v-e02a086e":()=>l(()=>import("./index.html-72e17ae6.js"),[]).then(({data:n})=>n),"v-64bbdf77":()=>l(()=>import("./cherry.html-1ce9bfa8.js"),[]).then(({data:n})=>n),"v-a91ef53e":()=>l(()=>import("./dragonfruit.html-618a2a71.js"),[]).then(({data:n})=>n),"v-49f030b2":()=>l(()=>import("./first.html-8d7b4b17.js"),[]).then(({data:n})=>n),"v-7e8fa17c":()=>l(()=>import("./second.html-1b56cad7.js"),[]).then(({data:n})=>n),"v-310bb201":()=>l(()=>import("./strawberry.html-2c9e2125.js"),[]).then(({data:n})=>n),"v-0ad953a6":()=>l(()=>import("./tomato.html-e41d8123.js"),[]).then(({data:n})=>n),"v-e1e3da16":()=>l(()=>import("./index.html-5844dd48.js"),[]).then(({data:n})=>n),"v-2bc6566a":()=>l(()=>import("./cherry.html-26abf454.js"),[]).then(({data:n})=>n),"v-24b7c48d":()=>l(()=>import("./dragonfruit.html-9031c3f8.js"),[]).then(({data:n})=>n),"v-f0ec4556":()=>l(()=>import("./strawberry.html-da087f8c.js"),[]).then(({data:n})=>n),"v-df8b6e0c":()=>l(()=>import("./tomato.html-27fdd357.js"),[]).then(({data:n})=>n),"v-71275d66":()=>l(()=>import("./1.html-74120781.js"),[]).then(({data:n})=>n),"v-39d0d2b8":()=>l(()=>import("./前段模块化的演进.html-b85f932d.js"),[]).then(({data:n})=>n),"v-40fb11e6":()=>l(()=>import("./1.html-9e15b90f.js"),[]).then(({data:n})=>n),"v-42afea85":()=>l(()=>import("./2.html-0a1c04e2.js"),[]).then(({data:n})=>n),"v-4464c324":()=>l(()=>import("./3.html-8bf1bbed.js"),[]).then(({data:n})=>n),"v-46199bc3":()=>l(()=>import("./4.html-7918e499.js"),[]).then(({data:n})=>n),"v-67b8c712":()=>l(()=>import("./1.html-4e8486d4.js"),[]).then(({data:n})=>n),"v-696d9fb1":()=>l(()=>import("./2.html-4434ff75.js"),[]).then(({data:n})=>n),"v-6b227850":()=>l(()=>import("./3.html-b1d000e6.js"),[]).then(({data:n})=>n),"v-6cd750ef":()=>l(()=>import("./4.html-ab01b535.js"),[]).then(({data:n})=>n),"v-7a07405d":()=>l(()=>import("./1.html-8259acef.js"),[]).then(({data:n})=>n),"v-7bbc18fc":()=>l(()=>import("./2.html-8faf8155.js"),[]).then(({data:n})=>n),"v-7d70f19b":()=>l(()=>import("./3.html-cca2b042.js"),[]).then(({data:n})=>n),"v-7f25ca3a":()=>l(()=>import("./4.html-c77910dd.js"),[]).then(({data:n})=>n),"v-4526f0a1":()=>l(()=>import("./一.html-10cbf34b.js"),[]).then(({data:n})=>n),"v-c80a2912":()=>l(()=>import("./二.html-36dcf318.js"),[]).then(({data:n})=>n),"v-6f659f6a":()=>l(()=>import("./1.html-842d99f3.js"),[]).then(({data:n})=>n),"v-7d815238":()=>l(()=>import("./10.html-bd28c6b0.js"),[]).then(({data:n})=>n),"v-711a7809":()=>l(()=>import("./2.html-66ee7188.js"),[]).then(({data:n})=>n),"v-72cf50a8":()=>l(()=>import("./3.html-92e46477.js"),[]).then(({data:n})=>n),"v-74842947":()=>l(()=>import("./4.html-aff01125.js"),[]).then(({data:n})=>n),"v-763901e6":()=>l(()=>import("./5.html-ced32567.js"),[]).then(({data:n})=>n),"v-77edda85":()=>l(()=>import("./6.html-968682ec.js"),[]).then(({data:n})=>n),"v-79a2b324":()=>l(()=>import("./7.html-7b328172.js"),[]).then(({data:n})=>n),"v-7b578bc3":()=>l(()=>import("./8.html-136d18d5.js"),[]).then(({data:n})=>n),"v-7d0c6462":()=>l(()=>import("./9.html-f534a59a.js"),[]).then(({data:n})=>n),"v-125607ee":()=>l(()=>import("./1.html-3e7901c2.js"),[]).then(({data:n})=>n),"v-632c4f45":()=>l(()=>import("./1.html-145e41b7.js"),[]).then(({data:n})=>n),"v-02909dbd":()=>l(()=>import("./10.html-1e39e435.js"),[]).then(({data:n})=>n),"v-0445765c":()=>l(()=>import("./11.html-42825233.js"),[]).then(({data:n})=>n),"v-99db8cbe":()=>l(()=>import("./12.手写深拷贝.html-2a05fcb2.js"),[]).then(({data:n})=>n),"v-58cd5109":()=>l(()=>import("./14.防抖与节流.html-26ed3e1f.js"),[]).then(({data:n})=>n),"v-0966a248":()=>l(()=>import("./15.Symbol的作用.html-0ceaec3b.js"),[]).then(({data:n})=>n),"v-0a3c8135":()=>l(()=>import("./16.遍历对象的方法.html-bf174a9a.js"),[]).then(({data:n})=>n),"v-dc280cae":()=>l(()=>import("./17.数组去重的几种方法.html-ce14961e.js"),[]).then(({data:n})=>n),"v-ad785c40":()=>l(()=>import("./18.手写Promise.html-de89042e.js"),[]).then(({data:n})=>n),"v-64e127e4":()=>l(()=>import("./2.html-8a111624.js"),[]).then(({data:n})=>n),"v-66960083":()=>l(()=>import("./3.html-d94a0a6b.js"),[]).then(({data:n})=>n),"v-684ad922":()=>l(()=>import("./4.html-8f350262.js"),[]).then(({data:n})=>n),"v-69ffb1c1":()=>l(()=>import("./5.html-7909c829.js"),[]).then(({data:n})=>n),"v-6bb48a60":()=>l(()=>import("./6.html-d03808fb.js"),[]).then(({data:n})=>n),"v-6d6962ff":()=>l(()=>import("./7.html-e96da1f7.js"),[]).then(({data:n})=>n),"v-6f1e3b9e":()=>l(()=>import("./8.html-d346dc29.js"),[]).then(({data:n})=>n),"v-70d3143d":()=>l(()=>import("./9.html-ef491921.js"),[]).then(({data:n})=>n),"v-9fc14a42":()=>l(()=>import("./杂记.html-b5f2a1fa.js"),[]).then(({data:n})=>n),"v-1ff2a25a":()=>l(()=>import("./1.html-784e04c3.js"),[]).then(({data:n})=>n),"v-1d38721f":()=>l(()=>import("./虚拟列表.html-5d9e4f15.js"),[]).then(({data:n})=>n),"v-5d219e5e":()=>l(()=>import("./1.html-010cd8ac.js"),[]).then(({data:n})=>n),"v-5ca9edb1":()=>l(()=>import("./10.html-0632e9ed.js"),[]).then(({data:n})=>n),"v-5e5ec650":()=>l(()=>import("./11.html-12620a5e.js"),[]).then(({data:n})=>n),"v-60139eef":()=>l(()=>import("./12.html-34eede6c.js"),[]).then(({data:n})=>n),"v-637d502d":()=>l(()=>import("./14.html-80d7d8fb.js"),[]).then(({data:n})=>n),"v-653228cc":()=>l(()=>import("./15.html-03dad227.js"),[]).then(({data:n})=>n),"v-66e7016b":()=>l(()=>import("./16.html-15ef1d27.js"),[]).then(({data:n})=>n),"v-689bda0a":()=>l(()=>import("./17.html-e9339e99.js"),[]).then(({data:n})=>n),"v-6a50b2a9":()=>l(()=>import("./18.html-5e021596.js"),[]).then(({data:n})=>n),"v-6c058b48":()=>l(()=>import("./19.html-fe55f2b1.js"),[]).then(({data:n})=>n),"v-59b7ed20":()=>l(()=>import("./2.html-311b7ebb.js"),[]).then(({data:n})=>n),"v-dcdfae1c":()=>l(()=>import("./20.html-39f37f1e.js"),[]).then(({data:n})=>n),"v-df10df86":()=>l(()=>import("./21.验证二叉搜索树.html-1c74de36.js"),[]).then(({data:n})=>n),"v-52e48aa4":()=>l(()=>import("./4.html-106fcff6.js"),[]).then(({data:n})=>n),"v-4c112828":()=>l(()=>import("./6.html-d242b23a.js"),[]).then(({data:n})=>n),"v-48a776ea":()=>l(()=>import("./7.html-1aa12f3a.js"),[]).then(({data:n})=>n),"v-453dc5ac":()=>l(()=>import("./8.html-08ba9e6f.js"),[]).then(({data:n})=>n),"v-41d4146e":()=>l(()=>import("./9.html-baad98a0.js"),[]).then(({data:n})=>n),"v-0628f8e5":()=>l(()=>import("./1.只出现一次的数字.html-e7994be6.js"),[]).then(({data:n})=>n),"v-46748d9e":()=>l(()=>import("./1.二维区域和检索.html-f66e836f.js"),[]).then(({data:n})=>n),"v-33d42f60":()=>l(()=>import("./1.爬楼梯.html-3bb81973.js"),[]).then(({data:n})=>n),"v-7dc3d3f0":()=>l(()=>import("./10.最后一块石头重量.html-7e8e5a1c.js"),[]).then(({data:n})=>n),"v-fc7add4c":()=>l(()=>import("./11.目标和.html-a1b3c0e1.js"),[]).then(({data:n})=>n),"v-489511d9":()=>l(()=>import("./12.一和零.html-7b8822ce.js"),[]).then(({data:n})=>n),"v-424b3d0c":()=>l(()=>import("./13.多重背包.html-75380188.js"),[]).then(({data:n})=>n),"v-5a00a0ba":()=>l(()=>import("./14.零钱duihuan.html-902de342.js"),[]).then(({data:n})=>n),"v-52958ce9":()=>l(()=>import("./15.组合总和4.html-b5b223a6.js"),[]).then(({data:n})=>n),"v-378ce1f4":()=>l(()=>import("./16.完全平方数.html-1aca79b3.js"),[]).then(({data:n})=>n),"v-56b058f0":()=>l(()=>import("./17.单词拆分.html-b5c29065.js"),[]).then(({data:n})=>n),"v-0eddbe7e":()=>l(()=>import("./18.打家劫舍2.html-2cf5bfc0.js"),[]).then(({data:n})=>n),"v-859b3a82":()=>l(()=>import("./19.打家劫舍3.html-9817dab3.js"),[]).then(({data:n})=>n),"v-d3a08f6c":()=>l(()=>import("./2.使用最小花费爬台阶.html-4a95aa35.js"),[]).then(({data:n})=>n),"v-ec9ac944":()=>l(()=>import("./20.买卖股票最佳时机.html-a0caf6d1.js"),[]).then(({data:n})=>n),"v-5d10c97c":()=>l(()=>import("./21.最长递增序列.html-2f153d78.js"),[]).then(({data:n})=>n),"v-08f6c07e":()=>l(()=>import("./22.最长重复子数组.html-836a4056.js"),[]).then(({data:n})=>n),"v-206085fe":()=>l(()=>import("./23.最长公共子序列.html-660f90fb.js"),[]).then(({data:n})=>n),"v-b9ff64c0":()=>l(()=>import("./24.最大子数组和.html-4f27504d.js"),[]).then(({data:n})=>n),"v-4caf0226":()=>l(()=>import("./25.判断子序列.html-5c9c5933.js"),[]).then(({data:n})=>n),"v-233112dd":()=>l(()=>import("./26.不同的子序列.html-94dfcb89.js"),[]).then(({data:n})=>n),"v-fc80572c":()=>l(()=>import("./27.两个字符串的删除操作.html-d8ca1414.js"),[]).then(({data:n})=>n),"v-fac0c946":()=>l(()=>import("./28.编辑距离.html-52be771f.js"),[]).then(({data:n})=>n),"v-02d61b3f":()=>l(()=>import("./3.不同路径.html-c542a3d1.js"),[]).then(({data:n})=>n),"v-1e766ba0":()=>l(()=>import("./4.不同路径2.html-34bccbd2.js"),[]).then(({data:n})=>n),"v-22254b81":()=>l(()=>import("./5.整数拆分.html-15a22da9.js"),[]).then(({data:n})=>n),"v-9d5ecbc8":()=>l(()=>import("./6.不同的二叉树.html-eefdf722.js"),[]).then(({data:n})=>n),"v-4e8c5dc9":()=>l(()=>import("./7.01背包-二维数组.html-74410f68.js"),[]).then(({data:n})=>n),"v-5fb1723e":()=>l(()=>import("./8.01背包-一维数组.html-efb87a63.js"),[]).then(({data:n})=>n),"v-bdcbf37c":()=>l(()=>import("./9.分割等和子集.html-f3d71731.js"),[]).then(({data:n})=>n),"v-932477d0":()=>l(()=>import("./背包问题.html-8cc8981e.js"),[]).then(({data:n})=>n),"v-0f45c563":()=>l(()=>import("./1.每日温度.html-bb036435.js"),[]).then(({data:n})=>n),"v-1dab3ea5":()=>l(()=>import("./2.下一个更大元素I.html-9473cf4d.js"),[]).then(({data:n})=>n),"v-44e376c3":()=>l(()=>import("./3.下一个更大元素II.html-e2d5bc01.js"),[]).then(({data:n})=>n),"v-6ef24e90":()=>l(()=>import("./1.html-371f652d.js"),[]).then(({data:n})=>n),"v-6b889d52":()=>l(()=>import("./2.html-b9a87bdd.js"),[]).then(({data:n})=>n),"v-681eec14":()=>l(()=>import("./3.html-48e1aa25.js"),[]).then(({data:n})=>n),"v-64b53ad6":()=>l(()=>import("./4.html-8c5b9e14.js"),[]).then(({data:n})=>n),"v-614b8998":()=>l(()=>import("./5.html-be037908.js"),[]).then(({data:n})=>n),"v-5de1d85a":()=>l(()=>import("./6.html-fea62a72.js"),[]).then(({data:n})=>n),"v-712bf818":()=>l(()=>import("./1.html-06c88f12.js"),[]).then(({data:n})=>n),"v-6dc246da":()=>l(()=>import("./2.html-09604c18.js"),[]).then(({data:n})=>n),"v-6a58959c":()=>l(()=>import("./3.html-188070f8.js"),[]).then(({data:n})=>n),"v-66eee45e":()=>l(()=>import("./4.html-cc3a7911.js"),[]).then(({data:n})=>n),"v-56c8aa60":()=>l(()=>import("./1.课程表.html-1990278d.js"),[]).then(({data:n})=>n),"v-50f12e0f":()=>l(()=>import("./堆排序.html-56478223.js"),[]).then(({data:n})=>n),"v-fa74dda6":()=>l(()=>import("./快排.html-5186c495.js"),[]).then(({data:n})=>n),"v-f2e0b34a":()=>l(()=>import("./1.html-5732b2b0.js"),[]).then(({data:n})=>n),"v-ef77020c":()=>l(()=>import("./2.html-d6aa403f.js"),[]).then(({data:n})=>n),"v-e8a39f90":()=>l(()=>import("./4.html-95cff58f.js"),[]).then(({data:n})=>n),"v-e539ee52":()=>l(()=>import("./5.html-832755e0.js"),[]).then(({data:n})=>n),"v-7e0a98e5":()=>l(()=>import("./6.三数之和.html-5468922b.js"),[]).then(({data:n})=>n),"v-c75feb94":()=>l(()=>import("./1.html-e5e64480.js"),[]).then(({data:n})=>n),"v-c3f63a56":()=>l(()=>import("./2.html-b6d6cb58.js"),[]).then(({data:n})=>n),"v-c08c8918":()=>l(()=>import("./3.html-e42d9005.js"),[]).then(({data:n})=>n),"v-bd22d7da":()=>l(()=>import("./4.html-d3a6bf8b.js"),[]).then(({data:n})=>n),"v-b9b9269c":()=>l(()=>import("./5.html-f92671a8.js"),[]).then(({data:n})=>n),"v-b64f755e":()=>l(()=>import("./6.html-d1c30a30.js"),[]).then(({data:n})=>n),"v-b65ee6b0":()=>l(()=>import("./7.最小栈.html-ca924bc5.js"),[]).then(({data:n})=>n),"v-288877bb":()=>l(()=>import("./1.岛屿数量.html-d551cee2.js"),[]).then(({data:n})=>n),"v-0c868226":()=>l(()=>import("./1.贪心算法基础.html-9d7e9246.js"),[]).then(({data:n})=>n),"v-3d8de10b":()=>l(()=>import("./10.根据身高重建队列.html-9d8b4516.js"),[]).then(({data:n})=>n),"v-d635ed6e":()=>l(()=>import("./11.用最少数量的箭引爆气球.html-a90afe64.js"),[]).then(({data:n})=>n),"v-23025503":()=>l(()=>import("./12.无重叠区间.html-e6df0a6f.js"),[]).then(({data:n})=>n),"v-4d5da57f":()=>l(()=>import("./13.划分字母区间.html-7a56cdc6.js"),[]).then(({data:n})=>n),"v-fd1b3d04":()=>l(()=>import("./14.合并区间.html-a19b4e13.js"),[]).then(({data:n})=>n),"v-0bec1b39":()=>l(()=>import("./15.单调递增数字.html-32d194db.js"),[]).then(({data:n})=>n),"v-4d898dff":()=>l(()=>import("./2.摆动序列.html-a2ead558.js"),[]).then(({data:n})=>n),"v-669ec558":()=>l(()=>import("./3.最大子序列.html-e820a8f3.js"),[]).then(({data:n})=>n),"v-716a55b2":()=>l(()=>import("./4.买卖股票的最佳时机2.html-cc01096a.js"),[]).then(({data:n})=>n),"v-74421e60":()=>l(()=>import("./5.跳跃游戏.html-5867941a.js"),[]).then(({data:n})=>n),"v-4aea66c2":()=>l(()=>import("./6.跳跃游戏2.html-10685de7.js"),[]).then(({data:n})=>n),"v-29058be8":()=>l(()=>import("./7.k次取反后最大化数组和.html-ff7ec3f3.js"),[]).then(({data:n})=>n),"v-48d24a5e":()=>l(()=>import("./8.柠檬水找零.html-d184363c.js"),[]).then(({data:n})=>n),"v-75f222a2":()=>l(()=>import("./9.加油站.html-33eafbfe.js"),[]).then(({data:n})=>n),"v-21abeb46":()=>l(()=>import("./1.m的n次方.html-08ffe6cb.js"),[]).then(({data:n})=>n),"v-00b8db69":()=>l(()=>import("./1.html-b3d8d597.js"),[]).then(({data:n})=>n),"v-04228ca7":()=>l(()=>import("./3.html-5909a455.js"),[]).then(({data:n})=>n),"v-078c3de5":()=>l(()=>import("./5.html-d507a9f1.js"),[]).then(({data:n})=>n),"v-09411684":()=>l(()=>import("./6.html-873e6fcf.js"),[]).then(({data:n})=>n),"v-4638a3e0":()=>l(()=>import("./8.LRU缓存(双向链表).html-f36f740d.js"),[]).then(({data:n})=>n),"v-37027a41":()=>l(()=>import("./1.概述.html-1bd9ddae.js"),[]).then(({data:n})=>n),"v-7b68941e":()=>l(()=>import("./1.html-c468a8d0.js"),[]).then(({data:n})=>n),"v-77fee2e0":()=>l(()=>import("./2.html-63ce626a.js"),[]).then(({data:n})=>n),"v-749531a2":()=>l(()=>import("./3.html-60ab7648.js"),[]).then(({data:n})=>n),"v-f16353a6":()=>l(()=>import("./4.html-ca05207d.js"),[]).then(({data:n})=>n),"v-edf9a268":()=>l(()=>import("./5.html-e6053a75.js"),[]).then(({data:n})=>n),"v-ea8ff12a":()=>l(()=>import("./6.html-bba9b4b3.js"),[]).then(({data:n})=>n),"v-5406f64e":()=>l(()=>import("./1.手写filter.html-d7d30066.js"),[]).then(({data:n})=>n),"v-2ab43128":()=>l(()=>import("./2.手写redeuce.html-f447cc22.js"),[]).then(({data:n})=>n),"v-2ecfd7dd":()=>l(()=>import("./二叉搜索树的最近公共祖先.html-df3b2a84.js"),[]).then(({data:n})=>n),"v-73677efc":()=>l(()=>import("./1.二叉树的层序遍历.html-79923926.js"),[]).then(({data:n})=>n),"v-719f1a9a":()=>l(()=>import("./1.二叉树的最大深度.html-640decf0.js"),[]).then(({data:n})=>n),"v-dfe87174":()=>l(()=>import("./2.平衡二叉树.html-905e5260.js"),[]).then(({data:n})=>n),"v-5f32be14":()=>l(()=>import("./1_相同的树.html-bbb5300e.js"),[]).then(({data:n})=>n),"v-0379f704":()=>l(()=>import("./2.对称二叉树.html-22cf248b.js"),[]).then(({data:n})=>n),"v-80b1f816":()=>l(()=>import("./1.html-8c420d53.js"),[]).then(({data:n})=>n),"v-7d4846d8":()=>l(()=>import("./2.html-e86de361.js"),[]).then(({data:n})=>n),"v-79de959a":()=>l(()=>import("./3.html-7794e9bb.js"),[]).then(({data:n})=>n),"v-7674e45c":()=>l(()=>import("./4.html-f0575423.js"),[]).then(({data:n})=>n),"v-730b331e":()=>l(()=>import("./5.html-c62bc091.js"),[]).then(({data:n})=>n),"v-6fa181e0":()=>l(()=>import("./6.html-88b4454c.js"),[]).then(({data:n})=>n),"v-6c37d0a2":()=>l(()=>import("./7.html-02b3c260.js"),[]).then(({data:n})=>n),"v-52707f20":()=>l(()=>import("./1.html-724e0bda.js"),[]).then(({data:n})=>n),"v-4f06cde2":()=>l(()=>import("./2.html-78d16ecc.js"),[]).then(({data:n})=>n),"v-48336b66":()=>l(()=>import("./4.html-c17e5ae9.js"),[]).then(({data:n})=>n),"v-e2d0832c":()=>l(()=>import("./1.所有可能的路径.html-622e3f8c.js"),[]).then(({data:n})=>n),"v-34e8f89f":()=>l(()=>import("./1.最大回文子串.html-22000344.js"),[]).then(({data:n})=>n),"v-00160158":()=>l(()=>import("./回文串.html-9c594021.js"),[]).then(({data:n})=>n),"v-8397c7ba":()=>l(()=>import("./1.字母异位词分组.html-110f738f.js"),[]).then(({data:n})=>n),"v-5b191d69":()=>l(()=>import("./1.字符串解码.html-dfc0c580.js"),[]).then(({data:n})=>n),"v-fff2f994":()=>l(()=>import("./1.无重复最长字串.html-b9f10cba.js"),[]).then(({data:n})=>n),"v-03b4e419":()=>l(()=>import("./1.括号生成.html-ae42b317.js"),[]).then(({data:n})=>n),"v-68dcdd74":()=>l(()=>import("./1.旋转数组1.html-1ad8df1a.js"),[]).then(({data:n})=>n),"v-2d7e1f72":()=>l(()=>import("./2.旋转数组2.html-2aaafb3d.js"),[]).then(({data:n})=>n),"v-584dbbd6":()=>l(()=>import("./3.排序数组中第一个和最后一个元素.html-02e91805.js"),[]).then(({data:n})=>n),"v-2cc8ee1c":()=>l(()=>import("./4.寻找重复数(值域二分).html-f50d5154.js"),[]).then(({data:n})=>n),"v-7ed1c45a":()=>l(()=>import("./5.寻找两个正序数组的中位数.html-57f149df.js"),[]).then(({data:n})=>n),"v-69864716":()=>l(()=>import("./滑动窗口三题.html-c185fa0b.js"),[]).then(({data:n})=>n),"v-96a60dc4":()=>l(()=>import("./1.两数相加.html-e33ea707.js"),[]).then(({data:n})=>n),"v-6e12230b":()=>l(()=>import("./1.移除链表元素.html-cc247b7d.js"),[]).then(({data:n})=>n),"v-cf2c548a":()=>l(()=>import("./2.删除链表中的节点.html-ab86b97a.js"),[]).then(({data:n})=>n),"v-8ca3767e":()=>l(()=>import("./3.删除链表倒数第n个节点.html-fdd1899e.js"),[]).then(({data:n})=>n),"v-403116f1":()=>l(()=>import("./4.html-70443d5e.js"),[]).then(({data:n})=>n),"v-16501f32":()=>l(()=>import("./1.链表排序 .html-269bb72a.js"),[]).then(({data:n})=>n),"v-5045411e":()=>l(()=>import("./1.链表的中间节点.html-0f6bc0ec.js"),[]).then(({data:n})=>n),"v-aa06dbaa":()=>l(()=>import("./2.环形链表.html-884688f1.js"),[]).then(({data:n})=>n),"v-7b1ed234":()=>l(()=>import("./3.环形链表2.html-0aafbc29.js"),[]).then(({data:n})=>n),"v-574a5511":()=>l(()=>import("./10.html-3ee1de33.js"),[]).then(({data:n})=>n),"v-58ff2db0":()=>l(()=>import("./11.html-d9dec14e.js"),[]).then(({data:n})=>n),"v-bc9d1daa":()=>l(()=>import("./7.html-69cac184.js"),[]).then(({data:n})=>n),"v-b9336c6c":()=>l(()=>import("./8.html-2293af66.js"),[]).then(({data:n})=>n),"v-b5c9bb2e":()=>l(()=>import("./9.html-23ef2e09.js"),[]).then(({data:n})=>n),"v-106a3a50":()=>l(()=>import("./12.html-4b33cbe9.js"),[]).then(({data:n})=>n),"v-0d008912":()=>l(()=>import("./13.html-920a7141.js"),[]).then(({data:n})=>n),"v-3706649a":()=>l(()=>import("./404.html-e7af2a55.js"),[]).then(({data:n})=>n),"v-1557149e":()=>l(()=>import("./index.html-851923e2.js"),[]).then(({data:n})=>n),"v-6a7967d2":()=>l(()=>import("./index.html-297ac718.js"),[]).then(({data:n})=>n),"v-692c291e":()=>l(()=>import("./index.html-e9f6abd2.js"),[]).then(({data:n})=>n),"v-08f42f4a":()=>l(()=>import("./index.html-70f619bb.js"),[]).then(({data:n})=>n),"v-30be3cd5":()=>l(()=>import("./index.html-7a3f2818.js"),[]).then(({data:n})=>n),"v-6368f7de":()=>l(()=>import("./index.html-44098c5e.js"),[]).then(({data:n})=>n),"v-27e029a2":()=>l(()=>import("./index.html-d5f9e29b.js"),[]).then(({data:n})=>n),"v-338ec84b":()=>l(()=>import("./index.html-dc3e2b60.js"),[]).then(({data:n})=>n),"v-3f5a4526":()=>l(()=>import("./index.html-51486548.js"),[]).then(({data:n})=>n),"v-3a1acc86":()=>l(()=>import("./index.html-da78ce40.js"),[]).then(({data:n})=>n),"v-d67894ae":()=>l(()=>import("./index.html-6690bff3.js"),[]).then(({data:n})=>n),"v-7b662092":()=>l(()=>import("./index.html-4daeac39.js"),[]).then(({data:n})=>n),"v-28f9bf55":()=>l(()=>import("./index.html-5b3db7e8.js"),[]).then(({data:n})=>n),"v-6f309449":()=>l(()=>import("./index.html-1560df12.js"),[]).then(({data:n})=>n),"v-28317131":()=>l(()=>import("./index.html-02d56979.js"),[]).then(({data:n})=>n),"v-42b12288":()=>l(()=>import("./index.html-5c037b88.js"),[]).then(({data:n})=>n),"v-083450f2":()=>l(()=>import("./index.html-3b0f4036.js"),[]).then(({data:n})=>n),"v-604c82fa":()=>l(()=>import("./index.html-a4519e0b.js"),[]).then(({data:n})=>n),"v-67729439":()=>l(()=>import("./index.html-1edf0d4d.js"),[]).then(({data:n})=>n),"v-5b81f570":()=>l(()=>import("./index.html-f9aabea1.js"),[]).then(({data:n})=>n),"v-62053dac":()=>l(()=>import("./index.html-f8b1edd9.js"),[]).then(({data:n})=>n),"v-b973c2d6":()=>l(()=>import("./index.html-75dc42f8.js"),[]).then(({data:n})=>n),"v-b46461c8":()=>l(()=>import("./index.html-0a60ead3.js"),[]).then(({data:n})=>n),"v-65db0d5a":()=>l(()=>import("./index.html-909d1c42.js"),[]).then(({data:n})=>n),"v-44759d6e":()=>l(()=>import("./index.html-806b9730.js"),[]).then(({data:n})=>n),"v-53a1e0b6":()=>l(()=>import("./index.html-94b3c92d.js"),[]).then(({data:n})=>n),"v-56df12a8":()=>l(()=>import("./index.html-da977903.js"),[]).then(({data:n})=>n),"v-10c426ec":()=>l(()=>import("./index.html-6a937b6f.js"),[]).then(({data:n})=>n),"v-d157de3e":()=>l(()=>import("./index.html-ae840489.js"),[]).then(({data:n})=>n),"v-7e435b34":()=>l(()=>import("./index.html-14a8f2cb.js"),[]).then(({data:n})=>n),"v-02f3c156":()=>l(()=>import("./index.html-2e7e89a0.js"),[]).then(({data:n})=>n),"v-4c9f7169":()=>l(()=>import("./index.html-63952c25.js"),[]).then(({data:n})=>n),"v-152109f0":()=>l(()=>import("./index.html-5cf2f0b1.js"),[]).then(({data:n})=>n),"v-ef4ca084":()=>l(()=>import("./index.html-83e09f93.js"),[]).then(({data:n})=>n),"v-43d7ffa4":()=>l(()=>import("./index.html-cc3d3433.js"),[]).then(({data:n})=>n),"v-be4ea730":()=>l(()=>import("./index.html-19d6a45e.js"),[]).then(({data:n})=>n),"v-383f1282":()=>l(()=>import("./index.html-53e390b1.js"),[]).then(({data:n})=>n),"v-464ab984":()=>l(()=>import("./index.html-bdcf21a6.js"),[]).then(({data:n})=>n),"v-0bfe926d":()=>l(()=>import("./index.html-c574397a.js"),[]).then(({data:n})=>n),"v-7e40917a":()=>l(()=>import("./index.html-e1b148b9.js"),[]).then(({data:n})=>n),"v-70cdf1b0":()=>l(()=>import("./index.html-694c390d.js"),[]).then(({data:n})=>n),"v-0fc73c12":()=>l(()=>import("./index.html-32812651.js"),[]).then(({data:n})=>n),"v-7a209ea4":()=>l(()=>import("./index.html-c83215c2.js"),[]).then(({data:n})=>n),"v-39cd4ea6":()=>l(()=>import("./index.html-fe8faa88.js"),[]).then(({data:n})=>n),"v-54c2deef":()=>l(()=>import("./index.html-8c36ce33.js"),[]).then(({data:n})=>n),"v-2d7b7654":()=>l(()=>import("./index.html-6e196546.js"),[]).then(({data:n})=>n),"v-241fb1ea":()=>l(()=>import("./index.html-de383a45.js"),[]).then(({data:n})=>n),"v-29a6da91":()=>l(()=>import("./index.html-388ecfb4.js"),[]).then(({data:n})=>n),"v-e4cc0424":()=>l(()=>import("./index.html-9d1aa7a5.js"),[]).then(({data:n})=>n),"v-142f82a3":()=>l(()=>import("./index.html-8ff39432.js"),[]).then(({data:n})=>n),"v-3c1069b0":()=>l(()=>import("./index.html-1468c3c4.js"),[]).then(({data:n})=>n),"v-49746908":()=>l(()=>import("./index.html-061e3507.js"),[]).then(({data:n})=>n),"v-86d9c268":()=>l(()=>import("./index.html-50c38dfb.js"),[]).then(({data:n})=>n),"v-3a37ead6":()=>l(()=>import("./index.html-2c0a0c64.js"),[]).then(({data:n})=>n),"v-7ee2fb60":()=>l(()=>import("./index.html-18a60c81.js"),[]).then(({data:n})=>n),"v-8d888e2e":()=>l(()=>import("./index.html-fe3a00e9.js"),[]).then(({data:n})=>n),"v-6f054c29":()=>l(()=>import("./index.html-b27c9864.js"),[]).then(({data:n})=>n),"v-770df480":()=>l(()=>import("./index.html-7cad9056.js"),[]).then(({data:n})=>n),"v-5bc93818":()=>l(()=>import("./index.html-f4efa284.js"),[]).then(({data:n})=>n),"v-744d024e":()=>l(()=>import("./index.html-31c2f894.js"),[]).then(({data:n})=>n),"v-e52c881c":()=>l(()=>import("./index.html-a44fd32d.js"),[]).then(({data:n})=>n),"v-154dc4c4":()=>l(()=>import("./index.html-a3d7cd9c.js"),[]).then(({data:n})=>n),"v-01560935":()=>l(()=>import("./index.html-73b4994d.js"),[]).then(({data:n})=>n),"v-0c75a0f8":()=>l(()=>import("./index.html-8fb50c03.js"),[]).then(({data:n})=>n),"v-0f1d0e94":()=>l(()=>import("./index.html-b7819dfb.js"),[]).then(({data:n})=>n),"v-226a68ec":()=>l(()=>import("./index.html-463c63b7.js"),[]).then(({data:n})=>n),"v-3e6b05e8":()=>l(()=>import("./index.html-b5e9832f.js"),[]).then(({data:n})=>n),"v-12590846":()=>l(()=>import("./index.html-6dcf21a1.js"),[]).then(({data:n})=>n),"v-301b24f4":()=>l(()=>import("./index.html-c12800ed.js"),[]).then(({data:n})=>n),"v-03d57386":()=>l(()=>import("./index.html-85b99a43.js"),[]).then(({data:n})=>n),"v-3ceeab45":()=>l(()=>import("./index.html-07987554.js"),[]).then(({data:n})=>n),"v-247d58ff":()=>l(()=>import("./index.html-3b516a1b.js"),[]).then(({data:n})=>n),"v-42254370":()=>l(()=>import("./index.html-d9f59260.js"),[]).then(({data:n})=>n),"v-76b80ea2":()=>l(()=>import("./index.html-25b84ff1.js"),[]).then(({data:n})=>n),"v-3aafda76":()=>l(()=>import("./index.html-f70d08fc.js"),[]).then(({data:n})=>n),"v-20dfa189":()=>l(()=>import("./index.html-9d72aef1.js"),[]).then(({data:n})=>n),"v-624a9248":()=>l(()=>import("./index.html-7d0e522d.js"),[]).then(({data:n})=>n),"v-4eb18eb1":()=>l(()=>import("./index.html-f5903a5a.js"),[]).then(({data:n})=>n),"v-40b68770":()=>l(()=>import("./index.html-10d46b71.js"),[]).then(({data:n})=>n),"v-4c41ef7e":()=>l(()=>import("./index.html-a9fa77a3.js"),[]).then(({data:n})=>n),"v-65f6d381":()=>l(()=>import("./index.html-7d464656.js"),[]).then(({data:n})=>n),"v-116a43a7":()=>l(()=>import("./index.html-fd74f23a.js"),[]).then(({data:n})=>n),"v-3d184cee":()=>l(()=>import("./index.html-4eb842d4.js"),[]).then(({data:n})=>n),"v-65ef0bff":()=>l(()=>import("./index.html-4cd941aa.js"),[]).then(({data:n})=>n),"v-5b12e1d0":()=>l(()=>import("./index.html-c82d7f45.js"),[]).then(({data:n})=>n),"v-07caeaa0":()=>l(()=>import("./index.html-b3283dfc.js"),[]).then(({data:n})=>n),"v-44cc51bd":()=>l(()=>import("./index.html-3c6bfd83.js"),[]).then(({data:n})=>n),"v-6b916523":()=>l(()=>import("./index.html-232dc43d.js"),[]).then(({data:n})=>n),"v-ee606424":()=>l(()=>import("./index.html-03ae755d.js"),[]).then(({data:n})=>n),"v-25c3d073":()=>l(()=>import("./index.html-e7cfbd78.js"),[]).then(({data:n})=>n),"v-1f2cc090":()=>l(()=>import("./index.html-cb0af931.js"),[]).then(({data:n})=>n),"v-1746eac0":()=>l(()=>import("./index.html-084fa68f.js"),[]).then(({data:n})=>n),"v-2532fa9a":()=>l(()=>import("./index.html-c15d9c10.js"),[]).then(({data:n})=>n),"v-222197da":()=>l(()=>import("./index.html-be65c728.js"),[]).then(({data:n})=>n),"v-68bd6c0e":()=>l(()=>import("./index.html-d6a8ec79.js"),[]).then(({data:n})=>n),"v-33acb8d5":()=>l(()=>import("./index.html-bb07d93b.js"),[]).then(({data:n})=>n),"v-5af1630c":()=>l(()=>import("./index.html-38d8f1cb.js"),[]).then(({data:n})=>n),"v-09eceae7":()=>l(()=>import("./index.html-d69623e6.js"),[]).then(({data:n})=>n),"v-368a59c0":()=>l(()=>import("./index.html-049d7b3f.js"),[]).then(({data:n})=>n),"v-65ee6e36":()=>l(()=>import("./index.html-b4fa6955.js"),[]).then(({data:n})=>n),"v-1c566021":()=>l(()=>import("./index.html-3f65dcf8.js"),[]).then(({data:n})=>n),"v-c2b9deb6":()=>l(()=>import("./index.html-7b4da83c.js"),[]).then(({data:n})=>n),"v-06e76276":()=>l(()=>import("./index.html-9afcf719.js"),[]).then(({data:n})=>n),"v-fa9f5eca":()=>l(()=>import("./index.html-f892b766.js"),[]).then(({data:n})=>n),"v-731bf1cc":()=>l(()=>import("./index.html-91148892.js"),[]).then(({data:n})=>n),"v-0c1f7b33":()=>l(()=>import("./index.html-aa1dfa6a.js"),[]).then(({data:n})=>n),"v-221d7106":()=>l(()=>import("./index.html-e03da071.js"),[]).then(({data:n})=>n),"v-a0f187e0":()=>l(()=>import("./index.html-534ada73.js"),[]).then(({data:n})=>n),"v-57ebea04":()=>l(()=>import("./index.html-a457a3a7.js"),[]).then(({data:n})=>n),"v-5762eaa4":()=>l(()=>import("./index.html-b8a7ffd7.js"),[]).then(({data:n})=>n),"v-4d748649":()=>l(()=>import("./index.html-ad89b6ad.js"),[]).then(({data:n})=>n),"v-f972c15e":()=>l(()=>import("./index.html-e56bc314.js"),[]).then(({data:n})=>n),"v-1b942ee2":()=>l(()=>import("./index.html-5a8f588f.js"),[]).then(({data:n})=>n)},tk=JSON.parse('{"base":"/","lang":"zh-CN","title":"博客演示","description":"vuepress-theme-hope 的博客演示","head":[],"locales":{}}');var ok=([n,s,a])=>n==="meta"&&s.name?`${n}.${s.name}`:["title","base"].includes(n)?n:n==="template"&&s.id?`${n}.${s.id}`:JSON.stringify([n,s,a]),pk=n=>{const s=new Set,a=[];return n.forEach(e=>{const t=ok(e);s.has(t)||(s.add(t),a.push(e))}),a},ck=n=>n[n.length-1]==="/"||n.endsWith(".html")?n:`${n}/`,lk=n=>n.startsWith("ftp://"),da=n=>/^(https?:)?\/\//.test(n),ik=/.md((\?|#).*)?$/,ve=(n,s="/")=>!!(da(n)||lk(n)||n.startsWith("/")&&!n.startsWith(s)&&!ik.test(n)),ai=n=>/^mailto:/.test(n),rk=n=>/^tel:/.test(n),we=n=>Object.prototype.toString.call(n)==="[object Object]",Zo=n=>n[n.length-1]==="/"?n.slice(0,-1):n,ei=n=>n[0]==="/"?n.slice(1):n,uk=(n,s)=>{const a=Object.keys(n).sort((e,t)=>{const o=t.split("/").length-e.split("/").length;return o!==0?o:t.length-e.length});for(const e of a)if(s.startsWith(e))return e;return"/"};const ti={"v-8daa1a0e":m(()=>l(()=>import("./index.html-34c4e3dd.js"),["assets/index.html-34c4e3dd.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-184f4da6":m(()=>l(()=>import("./intro.html-d3c90d9f.js"),["assets/intro.html-d3c90d9f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-2e3eac9e":m(()=>l(()=>import("./slides.html-03e4af80.js"),["assets/slides.html-03e4af80.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-e02a086e":m(()=>l(()=>import("./index.html-ca00a725.js"),["assets/index.html-ca00a725.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-64bbdf77":m(()=>l(()=>import("./cherry.html-ec657d87.js"),["assets/cherry.html-ec657d87.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-a91ef53e":m(()=>l(()=>import("./dragonfruit.html-3bdbc2cd.js"),["assets/dragonfruit.html-3bdbc2cd.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-49f030b2":m(()=>l(()=>import("./first.html-2a4b2698.js"),["assets/first.html-2a4b2698.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7e8fa17c":m(()=>l(()=>import("./second.html-31ba222b.js"),["assets/second.html-31ba222b.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-310bb201":m(()=>l(()=>import("./strawberry.html-7dd48c88.js"),["assets/strawberry.html-7dd48c88.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0ad953a6":m(()=>l(()=>import("./tomato.html-5efd169e.js"),["assets/tomato.html-5efd169e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-e1e3da16":m(()=>l(()=>import("./index.html-91d2eec4.js"),["assets/index.html-91d2eec4.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-2bc6566a":m(()=>l(()=>import("./cherry.html-0c185012.js"),["assets/cherry.html-0c185012.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-24b7c48d":m(()=>l(()=>import("./dragonfruit.html-0c42ff91.js"),["assets/dragonfruit.html-0c42ff91.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-f0ec4556":m(()=>l(()=>import("./strawberry.html-3ab717d2.js"),["assets/strawberry.html-3ab717d2.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-df8b6e0c":m(()=>l(()=>import("./tomato.html-59457cad.js"),["assets/tomato.html-59457cad.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-71275d66":m(()=>l(()=>import("./1.html-d84b4360.js"),["assets/1.html-d84b4360.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-39d0d2b8":m(()=>l(()=>import("./前段模块化的演进.html-6dddeec0.js"),["assets/前段模块化的演进.html-6dddeec0.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-40fb11e6":m(()=>l(()=>import("./1.html-ae1f2182.js"),["assets/1.html-ae1f2182.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-42afea85":m(()=>l(()=>import("./2.html-70ff6318.js"),["assets/2.html-70ff6318.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4464c324":m(()=>l(()=>import("./3.html-8554e8e0.js"),["assets/3.html-8554e8e0.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-46199bc3":m(()=>l(()=>import("./4.html-0c01a5a4.js"),["assets/4.html-0c01a5a4.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-67b8c712":m(()=>l(()=>import("./1.html-91b90c33.js"),["assets/1.html-91b90c33.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-696d9fb1":m(()=>l(()=>import("./2.html-9ed3b70b.js"),["assets/2.html-9ed3b70b.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6b227850":m(()=>l(()=>import("./3.html-4c072106.js"),["assets/3.html-4c072106.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6cd750ef":m(()=>l(()=>import("./4.html-f40f2b01.js"),["assets/4.html-f40f2b01.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7a07405d":m(()=>l(()=>import("./1.html-efde35dd.js"),["assets/1.html-efde35dd.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7bbc18fc":m(()=>l(()=>import("./2.html-4d4dc566.js"),["assets/2.html-4d4dc566.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7d70f19b":m(()=>l(()=>import("./3.html-a6e32e14.js"),["assets/3.html-a6e32e14.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7f25ca3a":m(()=>l(()=>import("./4.html-0987fc90.js"),["assets/4.html-0987fc90.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4526f0a1":m(()=>l(()=>import("./一.html-a6694043.js"),["assets/一.html-a6694043.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-c80a2912":m(()=>l(()=>import("./二.html-5732be86.js"),["assets/二.html-5732be86.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6f659f6a":m(()=>l(()=>import("./1.html-9302fd7f.js"),["assets/1.html-9302fd7f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7d815238":m(()=>l(()=>import("./10.html-81c1e0ef.js"),["assets/10.html-81c1e0ef.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-711a7809":m(()=>l(()=>import("./2.html-ddbbfbbf.js"),["assets/2.html-ddbbfbbf.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-72cf50a8":m(()=>l(()=>import("./3.html-e8ce4eb9.js"),["assets/3.html-e8ce4eb9.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-74842947":m(()=>l(()=>import("./4.html-f14b53c8.js"),["assets/4.html-f14b53c8.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-763901e6":m(()=>l(()=>import("./5.html-c75a821b.js"),["assets/5.html-c75a821b.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-77edda85":m(()=>l(()=>import("./6.html-4369af4e.js"),["assets/6.html-4369af4e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-79a2b324":m(()=>l(()=>import("./7.html-0ce1a0f6.js"),["assets/7.html-0ce1a0f6.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7b578bc3":m(()=>l(()=>import("./8.html-7907cce0.js"),["assets/8.html-7907cce0.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7d0c6462":m(()=>l(()=>import("./9.html-72ac1aca.js"),["assets/9.html-72ac1aca.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-125607ee":m(()=>l(()=>import("./1.html-0e3475e3.js"),["assets/1.html-0e3475e3.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-632c4f45":m(()=>l(()=>import("./1.html-4f00124d.js"),["assets/1.html-4f00124d.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-02909dbd":m(()=>l(()=>import("./10.html-24d0b440.js"),["assets/10.html-24d0b440.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0445765c":m(()=>l(()=>import("./11.html-4993ca58.js"),["assets/11.html-4993ca58.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-99db8cbe":m(()=>l(()=>import("./12.手写深拷贝.html-5d08ca0e.js"),["assets/12.手写深拷贝.html-5d08ca0e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-58cd5109":m(()=>l(()=>import("./14.防抖与节流.html-44008b3c.js"),["assets/14.防抖与节流.html-44008b3c.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0966a248":m(()=>l(()=>import("./15.Symbol的作用.html-ec92bbf9.js"),["assets/15.Symbol的作用.html-ec92bbf9.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0a3c8135":m(()=>l(()=>import("./16.遍历对象的方法.html-8c35c4ed.js"),["assets/16.遍历对象的方法.html-8c35c4ed.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-dc280cae":m(()=>l(()=>import("./17.数组去重的几种方法.html-b8a6bdce.js"),["assets/17.数组去重的几种方法.html-b8a6bdce.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-ad785c40":m(()=>l(()=>import("./18.手写Promise.html-0da33eaf.js"),["assets/18.手写Promise.html-0da33eaf.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-64e127e4":m(()=>l(()=>import("./2.html-c13fc119.js"),["assets/2.html-c13fc119.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-66960083":m(()=>l(()=>import("./3.html-3bec79bb.js"),["assets/3.html-3bec79bb.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-684ad922":m(()=>l(()=>import("./4.html-625dee7f.js"),["assets/4.html-625dee7f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-69ffb1c1":m(()=>l(()=>import("./5.html-236b9436.js"),["assets/5.html-236b9436.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6bb48a60":m(()=>l(()=>import("./6.html-d5582ba3.js"),["assets/6.html-d5582ba3.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6d6962ff":m(()=>l(()=>import("./7.html-4e4611d5.js"),["assets/7.html-4e4611d5.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6f1e3b9e":m(()=>l(()=>import("./8.html-7479e87d.js"),["assets/8.html-7479e87d.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-70d3143d":m(()=>l(()=>import("./9.html-0c1bed05.js"),["assets/9.html-0c1bed05.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-9fc14a42":m(()=>l(()=>import("./杂记.html-6ee213b4.js"),["assets/杂记.html-6ee213b4.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-1ff2a25a":m(()=>l(()=>import("./1.html-60d102f7.js"),["assets/1.html-60d102f7.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-1d38721f":m(()=>l(()=>import("./虚拟列表.html-4a30c45a.js"),["assets/虚拟列表.html-4a30c45a.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5d219e5e":m(()=>l(()=>import("./1.html-b3f42013.js"),["assets/1.html-b3f42013.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5ca9edb1":m(()=>l(()=>import("./10.html-a9ac5308.js"),["assets/10.html-a9ac5308.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5e5ec650":m(()=>l(()=>import("./11.html-8242937c.js"),["assets/11.html-8242937c.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-60139eef":m(()=>l(()=>import("./12.html-4c536d82.js"),["assets/12.html-4c536d82.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-637d502d":m(()=>l(()=>import("./14.html-9c559ef2.js"),["assets/14.html-9c559ef2.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-653228cc":m(()=>l(()=>import("./15.html-ead67ddd.js"),["assets/15.html-ead67ddd.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-66e7016b":m(()=>l(()=>import("./16.html-2ffd7fc6.js"),["assets/16.html-2ffd7fc6.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-689bda0a":m(()=>l(()=>import("./17.html-a2c1ce96.js"),["assets/17.html-a2c1ce96.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6a50b2a9":m(()=>l(()=>import("./18.html-a53eb85b.js"),["assets/18.html-a53eb85b.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6c058b48":m(()=>l(()=>import("./19.html-1a3ac9c5.js"),["assets/19.html-1a3ac9c5.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-59b7ed20":m(()=>l(()=>import("./2.html-d76cf5e5.js"),["assets/2.html-d76cf5e5.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-dcdfae1c":m(()=>l(()=>import("./20.html-ac281ed5.js"),["assets/20.html-ac281ed5.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-df10df86":m(()=>l(()=>import("./21.验证二叉搜索树.html-2552a94f.js"),["assets/21.验证二叉搜索树.html-2552a94f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-52e48aa4":m(()=>l(()=>import("./4.html-219175a5.js"),["assets/4.html-219175a5.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4c112828":m(()=>l(()=>import("./6.html-740d6a4e.js"),["assets/6.html-740d6a4e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-48a776ea":m(()=>l(()=>import("./7.html-e995d3ba.js"),["assets/7.html-e995d3ba.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-453dc5ac":m(()=>l(()=>import("./8.html-491fbe7f.js"),["assets/8.html-491fbe7f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-41d4146e":m(()=>l(()=>import("./9.html-ca6acd5b.js"),["assets/9.html-ca6acd5b.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0628f8e5":m(()=>l(()=>import("./1.只出现一次的数字.html-a9fcc456.js"),["assets/1.只出现一次的数字.html-a9fcc456.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-46748d9e":m(()=>l(()=>import("./1.二维区域和检索.html-f0b5ab14.js"),["assets/1.二维区域和检索.html-f0b5ab14.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-33d42f60":m(()=>l(()=>import("./1.爬楼梯.html-3788410e.js"),["assets/1.爬楼梯.html-3788410e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7dc3d3f0":m(()=>l(()=>import("./10.最后一块石头重量.html-3d0f4a84.js"),["assets/10.最后一块石头重量.html-3d0f4a84.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-fc7add4c":m(()=>l(()=>import("./11.目标和.html-c21a7be5.js"),["assets/11.目标和.html-c21a7be5.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-489511d9":m(()=>l(()=>import("./12.一和零.html-64c8c846.js"),["assets/12.一和零.html-64c8c846.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-424b3d0c":m(()=>l(()=>import("./13.多重背包.html-6977c4be.js"),["assets/13.多重背包.html-6977c4be.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5a00a0ba":m(()=>l(()=>import("./14.零钱duihuan.html-3c5fe521.js"),["assets/14.零钱duihuan.html-3c5fe521.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-52958ce9":m(()=>l(()=>import("./15.组合总和4.html-0d870579.js"),["assets/15.组合总和4.html-0d870579.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-378ce1f4":m(()=>l(()=>import("./16.完全平方数.html-e122fd72.js"),["assets/16.完全平方数.html-e122fd72.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-56b058f0":m(()=>l(()=>import("./17.单词拆分.html-d1c5eeb5.js"),["assets/17.单词拆分.html-d1c5eeb5.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0eddbe7e":m(()=>l(()=>import("./18.打家劫舍2.html-d6e89ef5.js"),["assets/18.打家劫舍2.html-d6e89ef5.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-859b3a82":m(()=>l(()=>import("./19.打家劫舍3.html-72e99997.js"),["assets/19.打家劫舍3.html-72e99997.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-d3a08f6c":m(()=>l(()=>import("./2.使用最小花费爬台阶.html-90e75288.js"),["assets/2.使用最小花费爬台阶.html-90e75288.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-ec9ac944":m(()=>l(()=>import("./20.买卖股票最佳时机.html-163a0628.js"),["assets/20.买卖股票最佳时机.html-163a0628.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5d10c97c":m(()=>l(()=>import("./21.最长递增序列.html-83449a45.js"),["assets/21.最长递增序列.html-83449a45.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-08f6c07e":m(()=>l(()=>import("./22.最长重复子数组.html-9a827c32.js"),["assets/22.最长重复子数组.html-9a827c32.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-206085fe":m(()=>l(()=>import("./23.最长公共子序列.html-bcec39d2.js"),["assets/23.最长公共子序列.html-bcec39d2.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-b9ff64c0":m(()=>l(()=>import("./24.最大子数组和.html-733a3b64.js"),["assets/24.最大子数组和.html-733a3b64.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4caf0226":m(()=>l(()=>import("./25.判断子序列.html-aa1c1642.js"),["assets/25.判断子序列.html-aa1c1642.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-233112dd":m(()=>l(()=>import("./26.不同的子序列.html-3f040845.js"),["assets/26.不同的子序列.html-3f040845.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-fc80572c":m(()=>l(()=>import("./27.两个字符串的删除操作.html-6534a5c8.js"),["assets/27.两个字符串的删除操作.html-6534a5c8.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-fac0c946":m(()=>l(()=>import("./28.编辑距离.html-fc020939.js"),["assets/28.编辑距离.html-fc020939.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-02d61b3f":m(()=>l(()=>import("./3.不同路径.html-750a3eac.js"),["assets/3.不同路径.html-750a3eac.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-1e766ba0":m(()=>l(()=>import("./4.不同路径2.html-c141b65a.js"),["assets/4.不同路径2.html-c141b65a.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-22254b81":m(()=>l(()=>import("./5.整数拆分.html-427d02f8.js"),["assets/5.整数拆分.html-427d02f8.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-9d5ecbc8":m(()=>l(()=>import("./6.不同的二叉树.html-a5ef2d5d.js"),["assets/6.不同的二叉树.html-a5ef2d5d.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4e8c5dc9":m(()=>l(()=>import("./7.01背包-二维数组.html-d390a687.js"),["assets/7.01背包-二维数组.html-d390a687.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5fb1723e":m(()=>l(()=>import("./8.01背包-一维数组.html-c7b15063.js"),["assets/8.01背包-一维数组.html-c7b15063.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-bdcbf37c":m(()=>l(()=>import("./9.分割等和子集.html-317dabeb.js"),["assets/9.分割等和子集.html-317dabeb.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-932477d0":m(()=>l(()=>import("./背包问题.html-4d42f6ba.js"),["assets/背包问题.html-4d42f6ba.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0f45c563":m(()=>l(()=>import("./1.每日温度.html-5cfbfbf8.js"),["assets/1.每日温度.html-5cfbfbf8.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-1dab3ea5":m(()=>l(()=>import("./2.下一个更大元素I.html-58626434.js"),["assets/2.下一个更大元素I.html-58626434.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-44e376c3":m(()=>l(()=>import("./3.下一个更大元素II.html-68918baa.js"),["assets/3.下一个更大元素II.html-68918baa.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6ef24e90":m(()=>l(()=>import("./1.html-7f09513f.js"),["assets/1.html-7f09513f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6b889d52":m(()=>l(()=>import("./2.html-d5d65816.js"),["assets/2.html-d5d65816.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-681eec14":m(()=>l(()=>import("./3.html-b8b1d7de.js"),["assets/3.html-b8b1d7de.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-64b53ad6":m(()=>l(()=>import("./4.html-61a1ca6d.js"),["assets/4.html-61a1ca6d.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-614b8998":m(()=>l(()=>import("./5.html-1a4d0598.js"),["assets/5.html-1a4d0598.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5de1d85a":m(()=>l(()=>import("./6.html-61e9dcd8.js"),["assets/6.html-61e9dcd8.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-712bf818":m(()=>l(()=>import("./1.html-9ecefa09.js"),["assets/1.html-9ecefa09.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6dc246da":m(()=>l(()=>import("./2.html-9143aa0f.js"),["assets/2.html-9143aa0f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6a58959c":m(()=>l(()=>import("./3.html-01fde2b3.js"),["assets/3.html-01fde2b3.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-66eee45e":m(()=>l(()=>import("./4.html-d57f062a.js"),["assets/4.html-d57f062a.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-56c8aa60":m(()=>l(()=>import("./1.课程表.html-d07c8f7e.js"),["assets/1.课程表.html-d07c8f7e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-50f12e0f":m(()=>l(()=>import("./堆排序.html-64426f7e.js"),["assets/堆排序.html-64426f7e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-fa74dda6":m(()=>l(()=>import("./快排.html-80285128.js"),["assets/快排.html-80285128.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-f2e0b34a":m(()=>l(()=>import("./1.html-15bf49ac.js"),["assets/1.html-15bf49ac.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-ef77020c":m(()=>l(()=>import("./2.html-063374b9.js"),["assets/2.html-063374b9.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-e8a39f90":m(()=>l(()=>import("./4.html-93c34ebf.js"),["assets/4.html-93c34ebf.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-e539ee52":m(()=>l(()=>import("./5.html-7dc631cd.js"),["assets/5.html-7dc631cd.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7e0a98e5":m(()=>l(()=>import("./6.三数之和.html-fbf6e262.js"),["assets/6.三数之和.html-fbf6e262.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-c75feb94":m(()=>l(()=>import("./1.html-36ac67f0.js"),["assets/1.html-36ac67f0.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-c3f63a56":m(()=>l(()=>import("./2.html-38212f25.js"),["assets/2.html-38212f25.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-c08c8918":m(()=>l(()=>import("./3.html-01c93080.js"),["assets/3.html-01c93080.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-bd22d7da":m(()=>l(()=>import("./4.html-8ab9db2c.js"),["assets/4.html-8ab9db2c.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-b9b9269c":m(()=>l(()=>import("./5.html-82226e3d.js"),["assets/5.html-82226e3d.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-b64f755e":m(()=>l(()=>import("./6.html-8cf0a665.js"),["assets/6.html-8cf0a665.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-b65ee6b0":m(()=>l(()=>import("./7.最小栈.html-cc008014.js"),["assets/7.最小栈.html-cc008014.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-288877bb":m(()=>l(()=>import("./1.岛屿数量.html-4e68ac38.js"),["assets/1.岛屿数量.html-4e68ac38.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0c868226":m(()=>l(()=>import("./1.贪心算法基础.html-197b4034.js"),["assets/1.贪心算法基础.html-197b4034.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-3d8de10b":m(()=>l(()=>import("./10.根据身高重建队列.html-58aea460.js"),["assets/10.根据身高重建队列.html-58aea460.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-d635ed6e":m(()=>l(()=>import("./11.用最少数量的箭引爆气球.html-7c43647d.js"),["assets/11.用最少数量的箭引爆气球.html-7c43647d.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-23025503":m(()=>l(()=>import("./12.无重叠区间.html-d747def7.js"),["assets/12.无重叠区间.html-d747def7.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4d5da57f":m(()=>l(()=>import("./13.划分字母区间.html-84694677.js"),["assets/13.划分字母区间.html-84694677.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-fd1b3d04":m(()=>l(()=>import("./14.合并区间.html-636cec83.js"),["assets/14.合并区间.html-636cec83.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0bec1b39":m(()=>l(()=>import("./15.单调递增数字.html-cc6b57ed.js"),["assets/15.单调递增数字.html-cc6b57ed.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4d898dff":m(()=>l(()=>import("./2.摆动序列.html-2b937169.js"),["assets/2.摆动序列.html-2b937169.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-669ec558":m(()=>l(()=>import("./3.最大子序列.html-2bf3e26e.js"),["assets/3.最大子序列.html-2bf3e26e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-716a55b2":m(()=>l(()=>import("./4.买卖股票的最佳时机2.html-51d2fc0c.js"),["assets/4.买卖股票的最佳时机2.html-51d2fc0c.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-74421e60":m(()=>l(()=>import("./5.跳跃游戏.html-7b160aae.js"),["assets/5.跳跃游戏.html-7b160aae.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4aea66c2":m(()=>l(()=>import("./6.跳跃游戏2.html-20142e55.js"),["assets/6.跳跃游戏2.html-20142e55.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-29058be8":m(()=>l(()=>import("./7.k次取反后最大化数组和.html-2fcbcb64.js"),["assets/7.k次取反后最大化数组和.html-2fcbcb64.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-48d24a5e":m(()=>l(()=>import("./8.柠檬水找零.html-20f4e864.js"),["assets/8.柠檬水找零.html-20f4e864.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-75f222a2":m(()=>l(()=>import("./9.加油站.html-93cc2e33.js"),["assets/9.加油站.html-93cc2e33.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-21abeb46":m(()=>l(()=>import("./1.m的n次方.html-d420463c.js"),["assets/1.m的n次方.html-d420463c.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-00b8db69":m(()=>l(()=>import("./1.html-8690eff1.js"),["assets/1.html-8690eff1.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-04228ca7":m(()=>l(()=>import("./3.html-036187a3.js"),["assets/3.html-036187a3.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-078c3de5":m(()=>l(()=>import("./5.html-d8518c54.js"),["assets/5.html-d8518c54.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-09411684":m(()=>l(()=>import("./6.html-275e54ba.js"),["assets/6.html-275e54ba.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4638a3e0":m(()=>l(()=>import("./8.LRU缓存(双向链表).html-113d2d7a.js"),["assets/8.LRU缓存(双向链表).html-113d2d7a.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-37027a41":m(()=>l(()=>import("./1.概述.html-25066543.js"),["assets/1.概述.html-25066543.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7b68941e":m(()=>l(()=>import("./1.html-81b6c435.js"),["assets/1.html-81b6c435.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-77fee2e0":m(()=>l(()=>import("./2.html-cc543423.js"),["assets/2.html-cc543423.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-749531a2":m(()=>l(()=>import("./3.html-bf3d106f.js"),["assets/3.html-bf3d106f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-f16353a6":m(()=>l(()=>import("./4.html-e53236be.js"),["assets/4.html-e53236be.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-edf9a268":m(()=>l(()=>import("./5.html-3b431e27.js"),["assets/5.html-3b431e27.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-ea8ff12a":m(()=>l(()=>import("./6.html-89cd84da.js"),["assets/6.html-89cd84da.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5406f64e":m(()=>l(()=>import("./1.手写filter.html-9c41d6e6.js"),["assets/1.手写filter.html-9c41d6e6.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-2ab43128":m(()=>l(()=>import("./2.手写redeuce.html-59f295a1.js"),["assets/2.手写redeuce.html-59f295a1.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-2ecfd7dd":m(()=>l(()=>import("./二叉搜索树的最近公共祖先.html-62096d7d.js"),["assets/二叉搜索树的最近公共祖先.html-62096d7d.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-73677efc":m(()=>l(()=>import("./1.二叉树的层序遍历.html-14bea2f1.js"),["assets/1.二叉树的层序遍历.html-14bea2f1.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-719f1a9a":m(()=>l(()=>import("./1.二叉树的最大深度.html-5d59b45c.js"),["assets/1.二叉树的最大深度.html-5d59b45c.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-dfe87174":m(()=>l(()=>import("./2.平衡二叉树.html-e1b987e7.js"),["assets/2.平衡二叉树.html-e1b987e7.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5f32be14":m(()=>l(()=>import("./1_相同的树.html-bbc1328f.js"),["assets/1_相同的树.html-bbc1328f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0379f704":m(()=>l(()=>import("./2.对称二叉树.html-e07e8156.js"),["assets/2.对称二叉树.html-e07e8156.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-80b1f816":m(()=>l(()=>import("./1.html-aef67b4b.js"),["assets/1.html-aef67b4b.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7d4846d8":m(()=>l(()=>import("./2.html-37480606.js"),["assets/2.html-37480606.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-79de959a":m(()=>l(()=>import("./3.html-7bbb8a1f.js"),["assets/3.html-7bbb8a1f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7674e45c":m(()=>l(()=>import("./4.html-26b535aa.js"),["assets/4.html-26b535aa.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-730b331e":m(()=>l(()=>import("./5.html-ff1351c4.js"),["assets/5.html-ff1351c4.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6fa181e0":m(()=>l(()=>import("./6.html-11a3e6bb.js"),["assets/6.html-11a3e6bb.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6c37d0a2":m(()=>l(()=>import("./7.html-19355717.js"),["assets/7.html-19355717.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-52707f20":m(()=>l(()=>import("./1.html-2c348b73.js"),["assets/1.html-2c348b73.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4f06cde2":m(()=>l(()=>import("./2.html-4fbaa390.js"),["assets/2.html-4fbaa390.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-48336b66":m(()=>l(()=>import("./4.html-f1fc32dc.js"),["assets/4.html-f1fc32dc.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-e2d0832c":m(()=>l(()=>import("./1.所有可能的路径.html-7546cf80.js"),["assets/1.所有可能的路径.html-7546cf80.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-34e8f89f":m(()=>l(()=>import("./1.最大回文子串.html-ce71f33f.js"),["assets/1.最大回文子串.html-ce71f33f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-00160158":m(()=>l(()=>import("./回文串.html-3c09d63f.js"),["assets/回文串.html-3c09d63f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-8397c7ba":m(()=>l(()=>import("./1.字母异位词分组.html-667bc542.js"),["assets/1.字母异位词分组.html-667bc542.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5b191d69":m(()=>l(()=>import("./1.字符串解码.html-50ca7639.js"),["assets/1.字符串解码.html-50ca7639.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-fff2f994":m(()=>l(()=>import("./1.无重复最长字串.html-30c28262.js"),["assets/1.无重复最长字串.html-30c28262.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-03b4e419":m(()=>l(()=>import("./1.括号生成.html-89684c61.js"),["assets/1.括号生成.html-89684c61.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-68dcdd74":m(()=>l(()=>import("./1.旋转数组1.html-160aff4e.js"),["assets/1.旋转数组1.html-160aff4e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-2d7e1f72":m(()=>l(()=>import("./2.旋转数组2.html-4cd29afa.js"),["assets/2.旋转数组2.html-4cd29afa.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-584dbbd6":m(()=>l(()=>import("./3.排序数组中第一个和最后一个元素.html-1e32d245.js"),["assets/3.排序数组中第一个和最后一个元素.html-1e32d245.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-2cc8ee1c":m(()=>l(()=>import("./4.寻找重复数(值域二分).html-96f0926c.js"),["assets/4.寻找重复数(值域二分).html-96f0926c.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7ed1c45a":m(()=>l(()=>import("./5.寻找两个正序数组的中位数.html-04f84d69.js"),["assets/5.寻找两个正序数组的中位数.html-04f84d69.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-69864716":m(()=>l(()=>import("./滑动窗口三题.html-b08cb1c8.js"),["assets/滑动窗口三题.html-b08cb1c8.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-96a60dc4":m(()=>l(()=>import("./1.两数相加.html-0ed323b0.js"),["assets/1.两数相加.html-0ed323b0.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6e12230b":m(()=>l(()=>import("./1.移除链表元素.html-1eb7520a.js"),["assets/1.移除链表元素.html-1eb7520a.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-cf2c548a":m(()=>l(()=>import("./2.删除链表中的节点.html-933a1292.js"),["assets/2.删除链表中的节点.html-933a1292.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-8ca3767e":m(()=>l(()=>import("./3.删除链表倒数第n个节点.html-7c2146f7.js"),["assets/3.删除链表倒数第n个节点.html-7c2146f7.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-403116f1":m(()=>l(()=>import("./4.html-60c839c5.js"),["assets/4.html-60c839c5.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-16501f32":m(()=>l(()=>import("./1.链表排序 .html-5e932a69.js"),["assets/1.链表排序 .html-5e932a69.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5045411e":m(()=>l(()=>import("./1.链表的中间节点.html-8964e695.js"),["assets/1.链表的中间节点.html-8964e695.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-aa06dbaa":m(()=>l(()=>import("./2.环形链表.html-276fe43b.js"),["assets/2.环形链表.html-276fe43b.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7b1ed234":m(()=>l(()=>import("./3.环形链表2.html-e0e44387.js"),["assets/3.环形链表2.html-e0e44387.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-574a5511":m(()=>l(()=>import("./10.html-3b570de7.js"),["assets/10.html-3b570de7.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-58ff2db0":m(()=>l(()=>import("./11.html-7b62dc2b.js"),["assets/11.html-7b62dc2b.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-bc9d1daa":m(()=>l(()=>import("./7.html-4356e156.js"),["assets/7.html-4356e156.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-b9336c6c":m(()=>l(()=>import("./8.html-c8da50ad.js"),["assets/8.html-c8da50ad.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-b5c9bb2e":m(()=>l(()=>import("./9.html-e046f040.js"),["assets/9.html-e046f040.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-106a3a50":m(()=>l(()=>import("./12.html-ec34ee35.js"),["assets/12.html-ec34ee35.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0d008912":m(()=>l(()=>import("./13.html-babe2b2c.js"),["assets/13.html-babe2b2c.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-3706649a":m(()=>l(()=>import("./404.html-dba84d85.js"),["assets/404.html-dba84d85.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-1557149e":m(()=>l(()=>import("./index.html-6423c4b1.js"),["assets/index.html-6423c4b1.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6a7967d2":m(()=>l(()=>import("./index.html-c0eb2cc2.js"),["assets/index.html-c0eb2cc2.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-692c291e":m(()=>l(()=>import("./index.html-2cf2de2f.js"),["assets/index.html-2cf2de2f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-08f42f4a":m(()=>l(()=>import("./index.html-236fdbe6.js"),["assets/index.html-236fdbe6.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-30be3cd5":m(()=>l(()=>import("./index.html-4cacb2e3.js"),["assets/index.html-4cacb2e3.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6368f7de":m(()=>l(()=>import("./index.html-acf2950e.js"),["assets/index.html-acf2950e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-27e029a2":m(()=>l(()=>import("./index.html-f9313fa0.js"),["assets/index.html-f9313fa0.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-338ec84b":m(()=>l(()=>import("./index.html-8b3ff8ff.js"),["assets/index.html-8b3ff8ff.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-3f5a4526":m(()=>l(()=>import("./index.html-ac9c0e25.js"),["assets/index.html-ac9c0e25.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-3a1acc86":m(()=>l(()=>import("./index.html-ccc3935b.js"),["assets/index.html-ccc3935b.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-d67894ae":m(()=>l(()=>import("./index.html-366c5dda.js"),["assets/index.html-366c5dda.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7b662092":m(()=>l(()=>import("./index.html-ebd27873.js"),["assets/index.html-ebd27873.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-28f9bf55":m(()=>l(()=>import("./index.html-5b565b15.js"),["assets/index.html-5b565b15.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6f309449":m(()=>l(()=>import("./index.html-d07d6170.js"),["assets/index.html-d07d6170.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-28317131":m(()=>l(()=>import("./index.html-0afe12c8.js"),["assets/index.html-0afe12c8.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-42b12288":m(()=>l(()=>import("./index.html-9f7b6119.js"),["assets/index.html-9f7b6119.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-083450f2":m(()=>l(()=>import("./index.html-ebe58148.js"),["assets/index.html-ebe58148.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-604c82fa":m(()=>l(()=>import("./index.html-ddd859d4.js"),["assets/index.html-ddd859d4.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-67729439":m(()=>l(()=>import("./index.html-a6c5d6ed.js"),["assets/index.html-a6c5d6ed.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5b81f570":m(()=>l(()=>import("./index.html-da02d6c7.js"),["assets/index.html-da02d6c7.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-62053dac":m(()=>l(()=>import("./index.html-fc44e0bb.js"),["assets/index.html-fc44e0bb.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-b973c2d6":m(()=>l(()=>import("./index.html-a6edbd2f.js"),["assets/index.html-a6edbd2f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-b46461c8":m(()=>l(()=>import("./index.html-e4117f95.js"),["assets/index.html-e4117f95.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-65db0d5a":m(()=>l(()=>import("./index.html-9f1ab47a.js"),["assets/index.html-9f1ab47a.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-44759d6e":m(()=>l(()=>import("./index.html-d1ed8d71.js"),["assets/index.html-d1ed8d71.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-53a1e0b6":m(()=>l(()=>import("./index.html-4e5c12c0.js"),["assets/index.html-4e5c12c0.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-56df12a8":m(()=>l(()=>import("./index.html-8a1e6718.js"),["assets/index.html-8a1e6718.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-10c426ec":m(()=>l(()=>import("./index.html-c7aaba6e.js"),["assets/index.html-c7aaba6e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-d157de3e":m(()=>l(()=>import("./index.html-6a157c86.js"),["assets/index.html-6a157c86.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7e435b34":m(()=>l(()=>import("./index.html-26ff5277.js"),["assets/index.html-26ff5277.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-02f3c156":m(()=>l(()=>import("./index.html-db3188b6.js"),["assets/index.html-db3188b6.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4c9f7169":m(()=>l(()=>import("./index.html-c8a59378.js"),["assets/index.html-c8a59378.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-152109f0":m(()=>l(()=>import("./index.html-4a5bc2e8.js"),["assets/index.html-4a5bc2e8.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-ef4ca084":m(()=>l(()=>import("./index.html-e16839bf.js"),["assets/index.html-e16839bf.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-43d7ffa4":m(()=>l(()=>import("./index.html-75e3e0d0.js"),["assets/index.html-75e3e0d0.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-be4ea730":m(()=>l(()=>import("./index.html-de40755c.js"),["assets/index.html-de40755c.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-383f1282":m(()=>l(()=>import("./index.html-3c57ab68.js"),["assets/index.html-3c57ab68.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-464ab984":m(()=>l(()=>import("./index.html-e58ab178.js"),["assets/index.html-e58ab178.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0bfe926d":m(()=>l(()=>import("./index.html-b37b3871.js"),["assets/index.html-b37b3871.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7e40917a":m(()=>l(()=>import("./index.html-9eaca8a1.js"),["assets/index.html-9eaca8a1.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-70cdf1b0":m(()=>l(()=>import("./index.html-4a0cae20.js"),["assets/index.html-4a0cae20.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0fc73c12":m(()=>l(()=>import("./index.html-4a578e62.js"),["assets/index.html-4a578e62.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7a209ea4":m(()=>l(()=>import("./index.html-72aeb6e8.js"),["assets/index.html-72aeb6e8.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-39cd4ea6":m(()=>l(()=>import("./index.html-4f89a94d.js"),["assets/index.html-4f89a94d.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-54c2deef":m(()=>l(()=>import("./index.html-7fc8577f.js"),["assets/index.html-7fc8577f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-2d7b7654":m(()=>l(()=>import("./index.html-9b31069b.js"),["assets/index.html-9b31069b.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-241fb1ea":m(()=>l(()=>import("./index.html-6603c4f6.js"),["assets/index.html-6603c4f6.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-29a6da91":m(()=>l(()=>import("./index.html-f539e285.js"),["assets/index.html-f539e285.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-e4cc0424":m(()=>l(()=>import("./index.html-3def1940.js"),["assets/index.html-3def1940.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-142f82a3":m(()=>l(()=>import("./index.html-cd498273.js"),["assets/index.html-cd498273.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-3c1069b0":m(()=>l(()=>import("./index.html-80260bea.js"),["assets/index.html-80260bea.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-49746908":m(()=>l(()=>import("./index.html-dabda5ee.js"),["assets/index.html-dabda5ee.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-86d9c268":m(()=>l(()=>import("./index.html-3b8d1e5c.js"),["assets/index.html-3b8d1e5c.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-3a37ead6":m(()=>l(()=>import("./index.html-cb94a18c.js"),["assets/index.html-cb94a18c.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-7ee2fb60":m(()=>l(()=>import("./index.html-b1299101.js"),["assets/index.html-b1299101.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-8d888e2e":m(()=>l(()=>import("./index.html-5273f3ab.js"),["assets/index.html-5273f3ab.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6f054c29":m(()=>l(()=>import("./index.html-63b71c51.js"),["assets/index.html-63b71c51.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-770df480":m(()=>l(()=>import("./index.html-53b18820.js"),["assets/index.html-53b18820.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5bc93818":m(()=>l(()=>import("./index.html-93a2d412.js"),["assets/index.html-93a2d412.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-744d024e":m(()=>l(()=>import("./index.html-6b90b372.js"),["assets/index.html-6b90b372.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-e52c881c":m(()=>l(()=>import("./index.html-f3701bc4.js"),["assets/index.html-f3701bc4.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-154dc4c4":m(()=>l(()=>import("./index.html-0735d586.js"),["assets/index.html-0735d586.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-01560935":m(()=>l(()=>import("./index.html-841121db.js"),["assets/index.html-841121db.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0c75a0f8":m(()=>l(()=>import("./index.html-c808d51e.js"),["assets/index.html-c808d51e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0f1d0e94":m(()=>l(()=>import("./index.html-04fa088f.js"),["assets/index.html-04fa088f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-226a68ec":m(()=>l(()=>import("./index.html-512112e3.js"),["assets/index.html-512112e3.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-3e6b05e8":m(()=>l(()=>import("./index.html-8f3f1d5f.js"),["assets/index.html-8f3f1d5f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-12590846":m(()=>l(()=>import("./index.html-7fdd27e0.js"),["assets/index.html-7fdd27e0.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-301b24f4":m(()=>l(()=>import("./index.html-427c0709.js"),["assets/index.html-427c0709.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-03d57386":m(()=>l(()=>import("./index.html-a87ed3a7.js"),["assets/index.html-a87ed3a7.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-3ceeab45":m(()=>l(()=>import("./index.html-ba5b3623.js"),["assets/index.html-ba5b3623.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-247d58ff":m(()=>l(()=>import("./index.html-2bc53bd6.js"),["assets/index.html-2bc53bd6.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-42254370":m(()=>l(()=>import("./index.html-0ffa5e6d.js"),["assets/index.html-0ffa5e6d.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-76b80ea2":m(()=>l(()=>import("./index.html-0c96b7b7.js"),["assets/index.html-0c96b7b7.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-3aafda76":m(()=>l(()=>import("./index.html-58179c02.js"),["assets/index.html-58179c02.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-20dfa189":m(()=>l(()=>import("./index.html-9923e8eb.js"),["assets/index.html-9923e8eb.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-624a9248":m(()=>l(()=>import("./index.html-642781b7.js"),["assets/index.html-642781b7.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4eb18eb1":m(()=>l(()=>import("./index.html-76b8abe0.js"),["assets/index.html-76b8abe0.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-40b68770":m(()=>l(()=>import("./index.html-4220023e.js"),["assets/index.html-4220023e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4c41ef7e":m(()=>l(()=>import("./index.html-bcc4a69a.js"),["assets/index.html-bcc4a69a.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-65f6d381":m(()=>l(()=>import("./index.html-1450a5d5.js"),["assets/index.html-1450a5d5.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-116a43a7":m(()=>l(()=>import("./index.html-f96aa1a0.js"),["assets/index.html-f96aa1a0.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-3d184cee":m(()=>l(()=>import("./index.html-aefc3a90.js"),["assets/index.html-aefc3a90.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-65ef0bff":m(()=>l(()=>import("./index.html-99b97f2f.js"),["assets/index.html-99b97f2f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5b12e1d0":m(()=>l(()=>import("./index.html-dea46dee.js"),["assets/index.html-dea46dee.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-07caeaa0":m(()=>l(()=>import("./index.html-eea1ac22.js"),["assets/index.html-eea1ac22.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-44cc51bd":m(()=>l(()=>import("./index.html-db316ce3.js"),["assets/index.html-db316ce3.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-6b916523":m(()=>l(()=>import("./index.html-f39c742a.js"),["assets/index.html-f39c742a.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-ee606424":m(()=>l(()=>import("./index.html-d001490c.js"),["assets/index.html-d001490c.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-25c3d073":m(()=>l(()=>import("./index.html-077909ca.js"),["assets/index.html-077909ca.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-1f2cc090":m(()=>l(()=>import("./index.html-d74e7f28.js"),["assets/index.html-d74e7f28.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-1746eac0":m(()=>l(()=>import("./index.html-d7d1fcab.js"),["assets/index.html-d7d1fcab.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-2532fa9a":m(()=>l(()=>import("./index.html-807f74af.js"),["assets/index.html-807f74af.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-222197da":m(()=>l(()=>import("./index.html-9982ca37.js"),["assets/index.html-9982ca37.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-68bd6c0e":m(()=>l(()=>import("./index.html-56866503.js"),["assets/index.html-56866503.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-33acb8d5":m(()=>l(()=>import("./index.html-73be6ba6.js"),["assets/index.html-73be6ba6.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5af1630c":m(()=>l(()=>import("./index.html-efc79bcf.js"),["assets/index.html-efc79bcf.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-09eceae7":m(()=>l(()=>import("./index.html-20503262.js"),["assets/index.html-20503262.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-368a59c0":m(()=>l(()=>import("./index.html-bfd30980.js"),["assets/index.html-bfd30980.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-65ee6e36":m(()=>l(()=>import("./index.html-bcb9b0ed.js"),["assets/index.html-bcb9b0ed.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-1c566021":m(()=>l(()=>import("./index.html-fb1ad3f5.js"),["assets/index.html-fb1ad3f5.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-c2b9deb6":m(()=>l(()=>import("./index.html-822b59de.js"),["assets/index.html-822b59de.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-06e76276":m(()=>l(()=>import("./index.html-7d6a3e2f.js"),["assets/index.html-7d6a3e2f.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-fa9f5eca":m(()=>l(()=>import("./index.html-3fbde5c3.js"),["assets/index.html-3fbde5c3.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-731bf1cc":m(()=>l(()=>import("./index.html-5c7d115e.js"),["assets/index.html-5c7d115e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-0c1f7b33":m(()=>l(()=>import("./index.html-4bb473a4.js"),["assets/index.html-4bb473a4.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-221d7106":m(()=>l(()=>import("./index.html-df8a203e.js"),["assets/index.html-df8a203e.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-a0f187e0":m(()=>l(()=>import("./index.html-757a5e1c.js"),["assets/index.html-757a5e1c.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-57ebea04":m(()=>l(()=>import("./index.html-46c41aa5.js"),["assets/index.html-46c41aa5.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-5762eaa4":m(()=>l(()=>import("./index.html-4dbc8d22.js"),["assets/index.html-4dbc8d22.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-4d748649":m(()=>l(()=>import("./index.html-2f65cc13.js"),["assets/index.html-2f65cc13.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-f972c15e":m(()=>l(()=>import("./index.html-fdbbf2e0.js"),["assets/index.html-fdbbf2e0.js","assets/plugin-vue_export-helper-c27b6911.js"])),"v-1b942ee2":m(()=>l(()=>import("./index.html-6f2e5df8.js"),["assets/index.html-6f2e5df8.js","assets/plugin-vue_export-helper-c27b6911.js"]))};var dk=Symbol(""),oi=Symbol(""),vk=ia({key:"",path:"",title:"",lang:"",frontmatter:{},headers:[]}),cn=()=>{const n=hn(oi);if(!n)throw new Error("pageData() is called without provider.");return n},pi=Symbol(""),yn=()=>{const n=hn(pi);if(!n)throw new Error("usePageFrontmatter() is called without provider.");return n},ci=Symbol(""),kk=()=>{const n=hn(ci);if(!n)throw new Error("usePageHead() is called without provider.");return n},mk=Symbol(""),li=Symbol(""),ii=()=>{const n=hn(li);if(!n)throw new Error("usePageLang() is called without provider.");return n},ri=Symbol(""),fk=()=>{const n=hn(ri);if(!n)throw new Error("usePageLayout() is called without provider.");return n},hk=Y(ek),np=Symbol(""),js=()=>{const n=hn(np);if(!n)throw new Error("useRouteLocale() is called without provider.");return n},_a=Y(tk),ui=()=>_a,di=Symbol(""),Be=()=>{const n=hn(di);if(!n)throw new Error("useSiteLocaleData() is called without provider.");return n},Ek=Symbol(""),bk="Layout",_k="NotFound",Is=_e({resolveLayouts:n=>n.reduce((s,a)=>({...s,...a.layouts}),{}),resolvePageData:async n=>{const s=hk.value[n];return await(s==null?void 0:s())??vk},resolvePageFrontmatter:n=>n.frontmatter,resolvePageHead:(n,s,a)=>{const e=mn(s.description)?s.description:a.description,t=[...Z(s.head)?s.head:[],...a.head,["title",{},n],["meta",{name:"description",content:e}]];return pk(t)},resolvePageHeadTitle:(n,s)=>[n.title,s.title].filter(a=>!!a).join(" | "),resolvePageLang:(n,s)=>n.lang||s.lang||"en-US",resolvePageLayout:(n,s)=>{let a;if(n.path){const e=n.frontmatter.layout;mn(e)?a=e:a=bk}else a=_k;return s[a]},resolveRouteLocale:(n,s)=>uk(n,s),resolveSiteLocaleData:(n,s)=>({...n,...n.locales[s]})}),Et=F({name:"ClientOnly",setup(n,s){const a=Y(!1);return gn(()=>{a.value=!0}),()=>{var e,t;return a.value?(t=(e=s.slots).default)==null?void 0:t.call(e):null}}}),vi=F({name:"Content",props:{pageKey:{type:String,required:!1,default:""}},setup(n){const s=cn(),a=w(()=>ti[n.pageKey||s.value.key]);return()=>a.value?c(a.value):c("div","404 Not Found")}}),ws=(n={})=>n,Tn=n=>da(n)?n:`/${ei(n)}`;const gk={};/*!
  * vue-router v4.2.5
  * (c) 2023 Eduardo San Martin Morote
  * @license MIT
  */const ha=typeof window<"u";function yk(n){return n.__esModule||n[Symbol.toStringTag]==="Module"}const En=Object.assign;function St(n,s){const a={};for(const e in s){const t=s[e];a[e]=Es(t)?t.map(n):n(t)}return a}const te=()=>{},Es=Array.isArray,Ak=/\/$/,wk=n=>n.replace(Ak,"");function Ft(n,s,a="/"){let e,t={},o="",p="";const i=s.indexOf("#");let r=s.indexOf("?");return i<r&&i>=0&&(r=-1),r>-1&&(e=s.slice(0,r),o=s.slice(r+1,i>-1?i:s.length),t=n(o)),i>-1&&(e=e||s.slice(0,i),p=s.slice(i,s.length)),e=Dk(e??s,a),{fullPath:e+(o&&"?")+o+p,path:e,query:t,hash:p}}function Bk(n,s){const a=s.query?n(s.query):"";return s.path+(a&&"?")+a+(s.hash||"")}function vc(n,s){return!s||!n.toLowerCase().startsWith(s.toLowerCase())?n:n.slice(s.length)||"/"}function Ok(n,s,a){const e=s.matched.length-1,t=a.matched.length-1;return e>-1&&e===t&&Ca(s.matched[e],a.matched[t])&&ki(s.params,a.params)&&n(s.query)===n(a.query)&&s.hash===a.hash}function Ca(n,s){return(n.aliasOf||n)===(s.aliasOf||s)}function ki(n,s){if(Object.keys(n).length!==Object.keys(s).length)return!1;for(const a in n)if(!Tk(n[a],s[a]))return!1;return!0}function Tk(n,s){return Es(n)?kc(n,s):Es(s)?kc(s,n):n===s}function kc(n,s){return Es(s)?n.length===s.length&&n.every((a,e)=>a===s[e]):n.length===1&&n[0]===s}function Dk(n,s){if(n.startsWith("/"))return n;if(!n)return s;const a=s.split("/"),e=n.split("/"),t=e[e.length-1];(t===".."||t===".")&&e.push("");let o=a.length-1,p,i;for(p=0;p<e.length;p++)if(i=e[p],i!==".")if(i==="..")o>1&&o--;else break;return a.slice(0,o).join("/")+"/"+e.slice(p-(p===e.length?1:0)).join("/")}var ke;(function(n){n.pop="pop",n.push="push"})(ke||(ke={}));var oe;(function(n){n.back="back",n.forward="forward",n.unknown=""})(oe||(oe={}));function Ik(n){if(!n)if(ha){const s=document.querySelector("base");n=s&&s.getAttribute("href")||"/",n=n.replace(/^\w+:\/\/[^\/]+/,"")}else n="/";return n[0]!=="/"&&n[0]!=="#"&&(n="/"+n),wk(n)}const Lk=/^[^#]+#/;function Pk(n,s){return n.replace(Lk,"#")+s}function Rk(n,s){const a=document.documentElement.getBoundingClientRect(),e=n.getBoundingClientRect();return{behavior:s.behavior,left:e.left-a.left-(s.left||0),top:e.top-a.top-(s.top||0)}}const bt=()=>({left:window.pageXOffset,top:window.pageYOffset});function xk(n){let s;if("el"in n){const a=n.el,e=typeof a=="string"&&a.startsWith("#"),t=typeof a=="string"?e?document.getElementById(a.slice(1)):document.querySelector(a):a;if(!t)return;s=Rk(t,n)}else s=n;"scrollBehavior"in document.documentElement.style?window.scrollTo(s):window.scrollTo(s.left!=null?s.left:window.pageXOffset,s.top!=null?s.top:window.pageYOffset)}function mc(n,s){return(history.state?history.state.position-s:-1)+n}const uo=new Map;function Ck(n,s){uo.set(n,s)}function Vk(n){const s=uo.get(n);return uo.delete(n),s}let jk=()=>location.protocol+"//"+location.host;function mi(n,s){const{pathname:a,search:e,hash:t}=s,o=n.indexOf("#");if(o>-1){let i=t.includes(n.slice(o))?n.slice(o).length:1,r=t.slice(i);return r[0]!=="/"&&(r="/"+r),vc(r,"")}return vc(a,n)+e+t}function Sk(n,s,a,e){let t=[],o=[],p=null;const i=({state:k})=>{const f=mi(n,location),b=a.value,_=s.value;let B=0;if(k){if(a.value=f,s.value=k,p&&p===b){p=null;return}B=_?k.position-_.position:0}else e(f);t.forEach(y=>{y(a.value,b,{delta:B,type:ke.pop,direction:B?B>0?oe.forward:oe.back:oe.unknown})})};function r(){p=a.value}function u(k){t.push(k);const f=()=>{const b=t.indexOf(k);b>-1&&t.splice(b,1)};return o.push(f),f}function d(){const{history:k}=window;k.state&&k.replaceState(En({},k.state,{scroll:bt()}),"")}function v(){for(const k of o)k();o=[],window.removeEventListener("popstate",i),window.removeEventListener("beforeunload",d)}return window.addEventListener("popstate",i),window.addEventListener("beforeunload",d,{passive:!0}),{pauseListeners:r,listen:u,destroy:v}}function fc(n,s,a,e=!1,t=!1){return{back:n,current:s,forward:a,replaced:e,position:window.history.length,scroll:t?bt():null}}function Fk(n){const{history:s,location:a}=window,e={value:mi(n,a)},t={value:s.state};t.value||o(e.value,{back:null,current:e.value,forward:null,position:s.length-1,replaced:!0,scroll:null},!0);function o(r,u,d){const v=n.indexOf("#"),k=v>-1?(a.host&&document.querySelector("base")?n:n.slice(v))+r:jk()+n+r;try{s[d?"replaceState":"pushState"](u,"",k),t.value=u}catch(f){console.error(f),a[d?"replace":"assign"](k)}}function p(r,u){const d=En({},s.state,fc(t.value.back,r,t.value.forward,!0),u,{position:t.value.position});o(r,d,!0),e.value=r}function i(r,u){const d=En({},t.value,s.state,{forward:r,scroll:bt()});o(d.current,d,!0);const v=En({},fc(e.value,r,null),{position:d.position+1},u);o(r,v,!1),e.value=r}return{location:e,state:t,push:i,replace:p}}function Mk(n){n=Ik(n);const s=Fk(n),a=Sk(n,s.state,s.location,s.replace);function e(o,p=!0){p||a.pauseListeners(),history.go(o)}const t=En({location:"",base:n,go:e,createHref:Pk.bind(null,n)},s,a);return Object.defineProperty(t,"location",{enumerable:!0,get:()=>s.location.value}),Object.defineProperty(t,"state",{enumerable:!0,get:()=>s.state.value}),t}function $k(n){return typeof n=="string"||n&&typeof n=="object"}function fi(n){return typeof n=="string"||typeof n=="symbol"}const Ls={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},hi=Symbol("");var hc;(function(n){n[n.aborted=4]="aborted",n[n.cancelled=8]="cancelled",n[n.duplicated=16]="duplicated"})(hc||(hc={}));function Va(n,s){return En(new Error,{type:n,[hi]:!0},s)}function Ts(n,s){return n instanceof Error&&hi in n&&(s==null||!!(n.type&s))}const Ec="[^/]+?",Nk={sensitive:!1,strict:!1,start:!0,end:!0},zk=/[.+*?^${}()[\]/\\]/g;function Hk(n,s){const a=En({},Nk,s),e=[];let t=a.start?"^":"";const o=[];for(const u of n){const d=u.length?[]:[90];a.strict&&!u.length&&(t+="/");for(let v=0;v<u.length;v++){const k=u[v];let f=40+(a.sensitive?.25:0);if(k.type===0)v||(t+="/"),t+=k.value.replace(zk,"\\$&"),f+=40;else if(k.type===1){const{value:b,repeatable:_,optional:B,regexp:y}=k;o.push({name:b,repeatable:_,optional:B});const T=y||Ec;if(T!==Ec){f+=10;try{new RegExp(`(${T})`)}catch(O){throw new Error(`Invalid custom RegExp for param "${b}" (${T}): `+O.message)}}let g=_?`((?:${T})(?:/(?:${T}))*)`:`(${T})`;v||(g=B&&u.length<2?`(?:/${g})`:"/"+g),B&&(g+="?"),t+=g,f+=20,B&&(f+=-8),_&&(f+=-20),T===".*"&&(f+=-50)}d.push(f)}e.push(d)}if(a.strict&&a.end){const u=e.length-1;e[u][e[u].length-1]+=.7000000000000001}a.strict||(t+="/?"),a.end?t+="$":a.strict&&(t+="(?:/|$)");const p=new RegExp(t,a.sensitive?"":"i");function i(u){const d=u.match(p),v={};if(!d)return null;for(let k=1;k<d.length;k++){const f=d[k]||"",b=o[k-1];v[b.name]=f&&b.repeatable?f.split("/"):f}return v}function r(u){let d="",v=!1;for(const k of n){(!v||!d.endsWith("/"))&&(d+="/"),v=!1;for(const f of k)if(f.type===0)d+=f.value;else if(f.type===1){const{value:b,repeatable:_,optional:B}=f,y=b in u?u[b]:"";if(Es(y)&&!_)throw new Error(`Provided param "${b}" is an array but it is not repeatable (* or + modifiers)`);const T=Es(y)?y.join("/"):y;if(!T)if(B)k.length<2&&(d.endsWith("/")?d=d.slice(0,-1):v=!0);else throw new Error(`Missing required param "${b}"`);d+=T}}return d||"/"}return{re:p,score:e,keys:o,parse:i,stringify:r}}function qk(n,s){let a=0;for(;a<n.length&&a<s.length;){const e=s[a]-n[a];if(e)return e;a++}return n.length<s.length?n.length===1&&n[0]===40+40?-1:1:n.length>s.length?s.length===1&&s[0]===40+40?1:-1:0}function Uk(n,s){let a=0;const e=n.score,t=s.score;for(;a<e.length&&a<t.length;){const o=qk(e[a],t[a]);if(o)return o;a++}if(Math.abs(t.length-e.length)===1){if(bc(e))return 1;if(bc(t))return-1}return t.length-e.length}function bc(n){const s=n[n.length-1];return n.length>0&&s[s.length-1]<0}const Wk={type:0,value:""},Gk=/[a-zA-Z0-9_]/;function Kk(n){if(!n)return[[]];if(n==="/")return[[Wk]];if(!n.startsWith("/"))throw new Error(`Invalid path "${n}"`);function s(f){throw new Error(`ERR (${a})/"${u}": ${f}`)}let a=0,e=a;const t=[];let o;function p(){o&&t.push(o),o=[]}let i=0,r,u="",d="";function v(){u&&(a===0?o.push({type:0,value:u}):a===1||a===2||a===3?(o.length>1&&(r==="*"||r==="+")&&s(`A repeatable param (${u}) must be alone in its segment. eg: '/:ids+.`),o.push({type:1,value:u,regexp:d,repeatable:r==="*"||r==="+",optional:r==="*"||r==="?"})):s("Invalid state to consume buffer"),u="")}function k(){u+=r}for(;i<n.length;){if(r=n[i++],r==="\\"&&a!==2){e=a,a=4;continue}switch(a){case 0:r==="/"?(u&&v(),p()):r===":"?(v(),a=1):k();break;case 4:k(),a=e;break;case 1:r==="("?a=2:Gk.test(r)?k():(v(),a=0,r!=="*"&&r!=="?"&&r!=="+"&&i--);break;case 2:r===")"?d[d.length-1]=="\\"?d=d.slice(0,-1)+r:a=3:d+=r;break;case 3:v(),a=0,r!=="*"&&r!=="?"&&r!=="+"&&i--,d="";break;default:s("Unknown state");break}}return a===2&&s(`Unfinished custom RegExp for param "${u}"`),v(),p(),t}function Jk(n,s,a){const e=Hk(Kk(n.path),a),t=En(e,{record:n,parent:s,children:[],alias:[]});return s&&!t.record.aliasOf==!s.record.aliasOf&&s.children.push(t),t}function Yk(n,s){const a=[],e=new Map;s=yc({strict:!1,end:!0,sensitive:!1},s);function t(d){return e.get(d)}function o(d,v,k){const f=!k,b=Qk(d);b.aliasOf=k&&k.record;const _=yc(s,d),B=[b];if("alias"in d){const g=typeof d.alias=="string"?[d.alias]:d.alias;for(const O of g)B.push(En({},b,{components:k?k.record.components:b.components,path:O,aliasOf:k?k.record:b}))}let y,T;for(const g of B){const{path:O}=g;if(v&&O[0]!=="/"){const V=v.record.path,P=V[V.length-1]==="/"?"":"/";g.path=v.record.path+(O&&P+O)}if(y=Jk(g,v,_),k?k.alias.push(y):(T=T||y,T!==y&&T.alias.push(y),f&&d.name&&!gc(y)&&p(d.name)),b.children){const V=b.children;for(let P=0;P<V.length;P++)o(V[P],y,k&&k.children[P])}k=k||y,(y.record.components&&Object.keys(y.record.components).length||y.record.name||y.record.redirect)&&r(y)}return T?()=>{p(T)}:te}function p(d){if(fi(d)){const v=e.get(d);v&&(e.delete(d),a.splice(a.indexOf(v),1),v.children.forEach(p),v.alias.forEach(p))}else{const v=a.indexOf(d);v>-1&&(a.splice(v,1),d.record.name&&e.delete(d.record.name),d.children.forEach(p),d.alias.forEach(p))}}function i(){return a}function r(d){let v=0;for(;v<a.length&&Uk(d,a[v])>=0&&(d.record.path!==a[v].record.path||!Ei(d,a[v]));)v++;a.splice(v,0,d),d.record.name&&!gc(d)&&e.set(d.record.name,d)}function u(d,v){let k,f={},b,_;if("name"in d&&d.name){if(k=e.get(d.name),!k)throw Va(1,{location:d});_=k.record.name,f=En(_c(v.params,k.keys.filter(T=>!T.optional).map(T=>T.name)),d.params&&_c(d.params,k.keys.map(T=>T.name))),b=k.stringify(f)}else if("path"in d)b=d.path,k=a.find(T=>T.re.test(b)),k&&(f=k.parse(b),_=k.record.name);else{if(k=v.name?e.get(v.name):a.find(T=>T.re.test(v.path)),!k)throw Va(1,{location:d,currentLocation:v});_=k.record.name,f=En({},v.params,d.params),b=k.stringify(f)}const B=[];let y=k;for(;y;)B.unshift(y.record),y=y.parent;return{name:_,path:b,params:f,matched:B,meta:Zk(B)}}return n.forEach(d=>o(d)),{addRoute:o,resolve:u,removeRoute:p,getRoutes:i,getRecordMatcher:t}}function _c(n,s){const a={};for(const e of s)e in n&&(a[e]=n[e]);return a}function Qk(n){return{path:n.path,redirect:n.redirect,name:n.name,meta:n.meta||{},aliasOf:void 0,beforeEnter:n.beforeEnter,props:Xk(n),children:n.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in n?n.components||null:n.component&&{default:n.component}}}function Xk(n){const s={},a=n.props||!1;if("component"in n)s.default=a;else for(const e in n.components)s[e]=typeof a=="object"?a[e]:a;return s}function gc(n){for(;n;){if(n.record.aliasOf)return!0;n=n.parent}return!1}function Zk(n){return n.reduce((s,a)=>En(s,a.meta),{})}function yc(n,s){const a={};for(const e in n)a[e]=e in s?s[e]:n[e];return a}function Ei(n,s){return s.children.some(a=>a===n||Ei(n,a))}const bi=/#/g,nm=/&/g,sm=/\//g,am=/=/g,em=/\?/g,_i=/\+/g,tm=/%5B/g,om=/%5D/g,gi=/%5E/g,pm=/%60/g,yi=/%7B/g,cm=/%7C/g,Ai=/%7D/g,lm=/%20/g;function sp(n){return encodeURI(""+n).replace(cm,"|").replace(tm,"[").replace(om,"]")}function im(n){return sp(n).replace(yi,"{").replace(Ai,"}").replace(gi,"^")}function vo(n){return sp(n).replace(_i,"%2B").replace(lm,"+").replace(bi,"%23").replace(nm,"%26").replace(pm,"`").replace(yi,"{").replace(Ai,"}").replace(gi,"^")}function rm(n){return vo(n).replace(am,"%3D")}function um(n){return sp(n).replace(bi,"%23").replace(em,"%3F")}function dm(n){return n==null?"":um(n).replace(sm,"%2F")}function lt(n){try{return decodeURIComponent(""+n)}catch{}return""+n}function vm(n){const s={};if(n===""||n==="?")return s;const e=(n[0]==="?"?n.slice(1):n).split("&");for(let t=0;t<e.length;++t){const o=e[t].replace(_i," "),p=o.indexOf("="),i=lt(p<0?o:o.slice(0,p)),r=p<0?null:lt(o.slice(p+1));if(i in s){let u=s[i];Es(u)||(u=s[i]=[u]),u.push(r)}else s[i]=r}return s}function Ac(n){let s="";for(let a in n){const e=n[a];if(a=rm(a),e==null){e!==void 0&&(s+=(s.length?"&":"")+a);continue}(Es(e)?e.map(o=>o&&vo(o)):[e&&vo(e)]).forEach(o=>{o!==void 0&&(s+=(s.length?"&":"")+a,o!=null&&(s+="="+o))})}return s}function km(n){const s={};for(const a in n){const e=n[a];e!==void 0&&(s[a]=Es(e)?e.map(t=>t==null?null:""+t):e==null?e:""+e)}return s}const mm=Symbol(""),wc=Symbol(""),_t=Symbol(""),ap=Symbol(""),ko=Symbol("");function Ka(){let n=[];function s(e){return n.push(e),()=>{const t=n.indexOf(e);t>-1&&n.splice(t,1)}}function a(){n=[]}return{add:s,list:()=>n.slice(),reset:a}}function Us(n,s,a,e,t){const o=e&&(e.enterCallbacks[t]=e.enterCallbacks[t]||[]);return()=>new Promise((p,i)=>{const r=v=>{v===!1?i(Va(4,{from:a,to:s})):v instanceof Error?i(v):$k(v)?i(Va(2,{from:s,to:v})):(o&&e.enterCallbacks[t]===o&&typeof v=="function"&&o.push(v),p())},u=n.call(e&&e.instances[t],s,a,r);let d=Promise.resolve(u);n.length<3&&(d=d.then(r)),d.catch(v=>i(v))})}function Mt(n,s,a,e){const t=[];for(const o of n)for(const p in o.components){let i=o.components[p];if(!(s!=="beforeRouteEnter"&&!o.instances[p]))if(fm(i)){const u=(i.__vccOpts||i)[s];u&&t.push(Us(u,a,e,o,p))}else{let r=i();t.push(()=>r.then(u=>{if(!u)return Promise.reject(new Error(`Couldn't resolve component "${p}" at "${o.path}"`));const d=yk(u)?u.default:u;o.components[p]=d;const k=(d.__vccOpts||d)[s];return k&&Us(k,a,e,o,p)()}))}}return t}function fm(n){return typeof n=="object"||"displayName"in n||"props"in n||"__vccOpts"in n}function mo(n){const s=hn(_t),a=hn(ap),e=w(()=>s.resolve(pa(n.to))),t=w(()=>{const{matched:r}=e.value,{length:u}=r,d=r[u-1],v=a.matched;if(!d||!v.length)return-1;const k=v.findIndex(Ca.bind(null,d));if(k>-1)return k;const f=Bc(r[u-2]);return u>1&&Bc(d)===f&&v[v.length-1].path!==f?v.findIndex(Ca.bind(null,r[u-2])):k}),o=w(()=>t.value>-1&&_m(a.params,e.value.params)),p=w(()=>t.value>-1&&t.value===a.matched.length-1&&ki(a.params,e.value.params));function i(r={}){return bm(r)?s[pa(n.replace)?"replace":"push"](pa(n.to)).catch(te):Promise.resolve()}return{route:e,href:w(()=>e.value.href),isActive:o,isExactActive:p,navigate:i}}const hm=F({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:mo,setup(n,{slots:s}){const a=_e(mo(n)),{options:e}=hn(_t),t=w(()=>({[Oc(n.activeClass,e.linkActiveClass,"router-link-active")]:a.isActive,[Oc(n.exactActiveClass,e.linkExactActiveClass,"router-link-exact-active")]:a.isExactActive}));return()=>{const o=s.default&&s.default(a);return n.custom?o:c("a",{"aria-current":a.isExactActive?n.ariaCurrentValue:null,href:a.href,onClick:a.navigate,class:t.value},o)}}}),Em=hm;function bm(n){if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey)&&!n.defaultPrevented&&!(n.button!==void 0&&n.button!==0)){if(n.currentTarget&&n.currentTarget.getAttribute){const s=n.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(s))return}return n.preventDefault&&n.preventDefault(),!0}}function _m(n,s){for(const a in s){const e=s[a],t=n[a];if(typeof e=="string"){if(e!==t)return!1}else if(!Es(t)||t.length!==e.length||e.some((o,p)=>o!==t[p]))return!1}return!0}function Bc(n){return n?n.aliasOf?n.aliasOf.path:n.path:""}const Oc=(n,s,a)=>n??s??a,gm=F({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(n,{attrs:s,slots:a}){const e=hn(ko),t=w(()=>n.route||e.value),o=hn(wc,0),p=w(()=>{let u=pa(o);const{matched:d}=t.value;let v;for(;(v=d[u])&&!v.components;)u++;return u}),i=w(()=>t.value.matched[p.value]);fs(wc,w(()=>p.value+1)),fs(mm,i),fs(ko,t);const r=Y();return fn(()=>[r.value,i.value,n.name],([u,d,v],[k,f,b])=>{d&&(d.instances[v]=u,f&&f!==d&&u&&u===k&&(d.leaveGuards.size||(d.leaveGuards=f.leaveGuards),d.updateGuards.size||(d.updateGuards=f.updateGuards))),u&&d&&(!f||!Ca(d,f)||!k)&&(d.enterCallbacks[v]||[]).forEach(_=>_(u))},{flush:"post"}),()=>{const u=t.value,d=n.name,v=i.value,k=v&&v.components[d];if(!k)return Tc(a.default,{Component:k,route:u});const f=v.props[d],b=f?f===!0?u.params:typeof f=="function"?f(u):f:null,B=c(k,En({},b,s,{onVnodeUnmounted:y=>{y.component.isUnmounted&&(v.instances[d]=null)},ref:r}));return Tc(a.default,{Component:B,route:u})||B}}});function Tc(n,s){if(!n)return null;const a=n(s);return a.length===1?a[0]:a}const wi=gm;function ym(n){const s=Yk(n.routes,n),a=n.parseQuery||vm,e=n.stringifyQuery||Ac,t=n.history,o=Ka(),p=Ka(),i=Ka(),r=Hn(Ls);let u=Ls;ha&&n.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const d=St.bind(null,I=>""+I),v=St.bind(null,dm),k=St.bind(null,lt);function f(I,U){let M,J;return fi(I)?(M=s.getRecordMatcher(I),J=U):J=I,s.addRoute(J,M)}function b(I){const U=s.getRecordMatcher(I);U&&s.removeRoute(U)}function _(){return s.getRoutes().map(I=>I.record)}function B(I){return!!s.getRecordMatcher(I)}function y(I,U){if(U=En({},U||r.value),typeof I=="string"){const A=Ft(a,I,U.path),D=s.resolve({path:A.path},U),R=t.createHref(A.fullPath);return En(A,D,{params:k(D.params),hash:lt(A.hash),redirectedFrom:void 0,href:R})}let M;if("path"in I)M=En({},I,{path:Ft(a,I.path,U.path).path});else{const A=En({},I.params);for(const D in A)A[D]==null&&delete A[D];M=En({},I,{params:v(A)}),U.params=v(U.params)}const J=s.resolve(M,U),un=I.hash||"";J.params=d(k(J.params));const h=Bk(e,En({},I,{hash:im(un),path:J.path})),E=t.createHref(h);return En({fullPath:h,hash:un,query:e===Ac?km(I.query):I.query||{}},J,{redirectedFrom:void 0,href:E})}function T(I){return typeof I=="string"?Ft(a,I,r.value.path):En({},I)}function g(I,U){if(u!==I)return Va(8,{from:U,to:I})}function O(I){return j(I)}function V(I){return O(En(T(I),{replace:!0}))}function P(I){const U=I.matched[I.matched.length-1];if(U&&U.redirect){const{redirect:M}=U;let J=typeof M=="function"?M(I):M;return typeof J=="string"&&(J=J.includes("?")||J.includes("#")?J=T(J):{path:J},J.params={}),En({query:I.query,hash:I.hash,params:"path"in J?{}:I.params},J)}}function j(I,U){const M=u=y(I),J=r.value,un=I.state,h=I.force,E=I.replace===!0,A=P(M);if(A)return j(En(T(A),{state:typeof A=="object"?En({},un,A.state):un,force:h,replace:E}),U||M);const D=M;D.redirectedFrom=U;let R;return!h&&Ok(e,J,M)&&(R=Va(16,{to:D,from:J}),as(J,J,!0,!1)),(R?Promise.resolve(R):H(D,J)).catch(x=>Ts(x)?Ts(x,2)?x:bs(x):K(x,D,J)).then(x=>{if(x){if(Ts(x,2))return j(En({replace:E},T(x.to),{state:typeof x.to=="object"?En({},un,x.to.state):un,force:h}),U||D)}else x=z(D,J,!0,E,un);return nn(D,J,x),x})}function L(I,U){const M=g(I,U);return M?Promise.reject(M):Promise.resolve()}function N(I){const U=Os.values().next().value;return U&&typeof U.runWithContext=="function"?U.runWithContext(I):I()}function H(I,U){let M;const[J,un,h]=Am(I,U);M=Mt(J.reverse(),"beforeRouteLeave",I,U);for(const A of J)A.leaveGuards.forEach(D=>{M.push(Us(D,I,U))});const E=L.bind(null,I,U);return M.push(E),Rn(M).then(()=>{M=[];for(const A of o.list())M.push(Us(A,I,U));return M.push(E),Rn(M)}).then(()=>{M=Mt(un,"beforeRouteUpdate",I,U);for(const A of un)A.updateGuards.forEach(D=>{M.push(Us(D,I,U))});return M.push(E),Rn(M)}).then(()=>{M=[];for(const A of h)if(A.beforeEnter)if(Es(A.beforeEnter))for(const D of A.beforeEnter)M.push(Us(D,I,U));else M.push(Us(A.beforeEnter,I,U));return M.push(E),Rn(M)}).then(()=>(I.matched.forEach(A=>A.enterCallbacks={}),M=Mt(h,"beforeRouteEnter",I,U),M.push(E),Rn(M))).then(()=>{M=[];for(const A of p.list())M.push(Us(A,I,U));return M.push(E),Rn(M)}).catch(A=>Ts(A,8)?A:Promise.reject(A))}function nn(I,U,M){i.list().forEach(J=>N(()=>J(I,U,M)))}function z(I,U,M,J,un){const h=g(I,U);if(h)return h;const E=U===Ls,A=ha?history.state:{};M&&(J||E?t.replace(I.fullPath,En({scroll:E&&A&&A.scroll},un)):t.push(I.fullPath,un)),r.value=I,as(I,U,M,E),bs()}let sn;function Dn(){sn||(sn=t.listen((I,U,M)=>{if(!_s.listening)return;const J=y(I),un=P(J);if(un){j(En(un,{replace:!0}),J).catch(te);return}u=J;const h=r.value;ha&&Ck(mc(h.fullPath,M.delta),bt()),H(J,h).catch(E=>Ts(E,12)?E:Ts(E,2)?(j(E.to,J).then(A=>{Ts(A,20)&&!M.delta&&M.type===ke.pop&&t.go(-1,!1)}).catch(te),Promise.reject()):(M.delta&&t.go(-M.delta,!1),K(E,J,h))).then(E=>{E=E||z(J,h,!1),E&&(M.delta&&!Ts(E,8)?t.go(-M.delta,!1):M.type===ke.pop&&Ts(E,20)&&t.go(-1,!1)),nn(J,h,E)}).catch(te)}))}let Bn=Ka(),W=Ka(),an;function K(I,U,M){bs(I);const J=W.list();return J.length?J.forEach(un=>un(I,U,M)):console.error(I),Promise.reject(I)}function Pn(){return an&&r.value!==Ls?Promise.resolve():new Promise((I,U)=>{Bn.add([I,U])})}function bs(I){return an||(an=!I,Dn(),Bn.list().forEach(([U,M])=>I?M(I):U()),Bn.reset()),I}function as(I,U,M,J){const{scrollBehavior:un}=n;if(!ha||!un)return Promise.resolve();const h=!M&&Vk(mc(I.fullPath,0))||(J||!M)&&history.state&&history.state.scroll||null;return ra().then(()=>un(I,U,h)).then(E=>E&&xk(E)).catch(E=>K(E,I,U))}const Sn=I=>t.go(I);let Yn;const Os=new Set,_s={currentRoute:r,listening:!0,addRoute:f,removeRoute:b,hasRoute:B,getRoutes:_,resolve:y,options:n,push:O,replace:V,go:Sn,back:()=>Sn(-1),forward:()=>Sn(1),beforeEach:o.add,beforeResolve:p.add,afterEach:i.add,onError:W.add,isReady:Pn,install(I){const U=this;I.component("RouterLink",Em),I.component("RouterView",wi),I.config.globalProperties.$router=U,Object.defineProperty(I.config.globalProperties,"$route",{enumerable:!0,get:()=>pa(r)}),ha&&!Yn&&r.value===Ls&&(Yn=!0,O(t.location).catch(un=>{}));const M={};for(const un in Ls)Object.defineProperty(M,un,{get:()=>r.value[un],enumerable:!0});I.provide(_t,U),I.provide(ap,kl(M)),I.provide(ko,r);const J=I.unmount;Os.add(I),I.unmount=function(){Os.delete(I),Os.size<1&&(u=Ls,sn&&sn(),sn=null,r.value=Ls,Yn=!1,an=!1),J()}}};function Rn(I){return I.reduce((U,M)=>U.then(()=>N(M)),Promise.resolve())}return _s}function Am(n,s){const a=[],e=[],t=[],o=Math.max(s.matched.length,n.matched.length);for(let p=0;p<o;p++){const i=s.matched[p];i&&(n.matched.find(u=>Ca(u,i))?e.push(i):a.push(i));const r=n.matched[p];r&&(s.matched.find(u=>Ca(u,r))||t.push(r))}return[a,e,t]}function Un(){return hn(_t)}function Bs(){return hn(ap)}var Nn=Uint8Array,ga=Uint16Array,wm=Int32Array,Bi=new Nn([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Oi=new Nn([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Bm=new Nn([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Ti=function(n,s){for(var a=new ga(31),e=0;e<31;++e)a[e]=s+=1<<n[e-1];for(var t=new wm(a[30]),e=1;e<30;++e)for(var o=a[e];o<a[e+1];++o)t[o]=o-a[e]<<5|e;return{b:a,r:t}},Di=Ti(Bi,2),Ii=Di.b,Om=Di.r;Ii[28]=258,Om[258]=28;var Tm=Ti(Oi,0),Dm=Tm.b,fo=new ga(32768);for(var wn=0;wn<32768;++wn){var $s=(wn&43690)>>1|(wn&21845)<<1;$s=($s&52428)>>2|($s&13107)<<2,$s=($s&61680)>>4|($s&3855)<<4,fo[wn]=(($s&65280)>>8|($s&255)<<8)>>1}var pe=function(n,s,a){for(var e=n.length,t=0,o=new ga(s);t<e;++t)n[t]&&++o[n[t]-1];var p=new ga(s);for(t=1;t<s;++t)p[t]=p[t-1]+o[t-1]<<1;var i;if(a){i=new ga(1<<s);var r=15-s;for(t=0;t<e;++t)if(n[t])for(var u=t<<4|n[t],d=s-n[t],v=p[n[t]-1]++<<d,k=v|(1<<d)-1;v<=k;++v)i[fo[v]>>r]=u}else for(i=new ga(e),t=0;t<e;++t)n[t]&&(i[t]=fo[p[n[t]-1]++]>>15-n[t]);return i},Oe=new Nn(288);for(var wn=0;wn<144;++wn)Oe[wn]=8;for(var wn=144;wn<256;++wn)Oe[wn]=9;for(var wn=256;wn<280;++wn)Oe[wn]=7;for(var wn=280;wn<288;++wn)Oe[wn]=8;var Li=new Nn(32);for(var wn=0;wn<32;++wn)Li[wn]=5;var Im=pe(Oe,9,1),Lm=pe(Li,5,1),$t=function(n){for(var s=n[0],a=1;a<n.length;++a)n[a]>s&&(s=n[a]);return s},us=function(n,s,a){var e=s/8|0;return(n[e]|n[e+1]<<8)>>(s&7)&a},Nt=function(n,s){var a=s/8|0;return(n[a]|n[a+1]<<8|n[a+2]<<16)>>(s&7)},Pm=function(n){return(n+7)/8|0},ep=function(n,s,a){return(s==null||s<0)&&(s=0),(a==null||a>n.length)&&(a=n.length),new Nn(n.subarray(s,a))},Rm=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],os=function(n,s,a){var e=new Error(s||Rm[n]);if(e.code=n,Error.captureStackTrace&&Error.captureStackTrace(e,os),!a)throw e;return e},xm=function(n,s,a,e){var t=n.length,o=e?e.length:0;if(!t||s.f&&!s.l)return a||new Nn(0);var p=!a,i=p||s.i!=2,r=s.i;p&&(a=new Nn(t*3));var u=function(un){var h=a.length;if(un>h){var E=new Nn(Math.max(h*2,un));E.set(a),a=E}},d=s.f||0,v=s.p||0,k=s.b||0,f=s.l,b=s.d,_=s.m,B=s.n,y=t*8;do{if(!f){d=us(n,v,1);var T=us(n,v+1,3);if(v+=3,T)if(T==1)f=Im,b=Lm,_=9,B=5;else if(T==2){var P=us(n,v,31)+257,j=us(n,v+10,15)+4,L=P+us(n,v+5,31)+1;v+=14;for(var N=new Nn(L),H=new Nn(19),nn=0;nn<j;++nn)H[Bm[nn]]=us(n,v+nn*3,7);v+=j*3;for(var z=$t(H),sn=(1<<z)-1,Dn=pe(H,z,1),nn=0;nn<L;){var Bn=Dn[us(n,v,sn)];v+=Bn&15;var g=Bn>>4;if(g<16)N[nn++]=g;else{var W=0,an=0;for(g==16?(an=3+us(n,v,3),v+=2,W=N[nn-1]):g==17?(an=3+us(n,v,7),v+=3):g==18&&(an=11+us(n,v,127),v+=7);an--;)N[nn++]=W}}var K=N.subarray(0,P),Pn=N.subarray(P);_=$t(K),B=$t(Pn),f=pe(K,_,1),b=pe(Pn,B,1)}else os(1);else{var g=Pm(v)+4,O=n[g-4]|n[g-3]<<8,V=g+O;if(V>t){r&&os(0);break}i&&u(k+O),a.set(n.subarray(g,V),k),s.b=k+=O,s.p=v=V*8,s.f=d;continue}if(v>y){r&&os(0);break}}i&&u(k+131072);for(var bs=(1<<_)-1,as=(1<<B)-1,Sn=v;;Sn=v){var W=f[Nt(n,v)&bs],Yn=W>>4;if(v+=W&15,v>y){r&&os(0);break}if(W||os(2),Yn<256)a[k++]=Yn;else if(Yn==256){Sn=v,f=null;break}else{var Os=Yn-254;if(Yn>264){var nn=Yn-257,_s=Bi[nn];Os=us(n,v,(1<<_s)-1)+Ii[nn],v+=_s}var Rn=b[Nt(n,v)&as],I=Rn>>4;Rn||os(3),v+=Rn&15;var Pn=Dm[I];if(I>3){var _s=Oi[I];Pn+=Nt(n,v)&(1<<_s)-1,v+=_s}if(v>y){r&&os(0);break}i&&u(k+131072);var U=k+Os;if(k<Pn){var M=o-Pn,J=Math.min(Pn,U);for(M+k<0&&os(3);k<J;++k)a[k]=e[M+k]}for(;k<U;++k)a[k]=a[k-Pn]}}s.l=f,s.p=Sn,s.b=k,s.f=d,f&&(d=1,s.m=_,s.d=b,s.n=B)}while(!d);return k!=a.length&&p?ep(a,0,k):a.subarray(0,k)},Cm=new Nn(0),Vm=function(n,s){return((n[0]&15)!=8||n[0]>>4>7||(n[0]<<8|n[1])%31)&&os(6,"invalid zlib data"),(n[1]>>5&1)==+!s&&os(6,"invalid zlib data: "+(n[1]&32?"need":"unexpected")+" dictionary"),(n[1]>>3&4)+2};function jm(n,s){return xm(n.subarray(Vm(n,s&&s.dictionary),-4),{i:2},s&&s.out,s&&s.dictionary)}var Dc=typeof TextEncoder<"u"&&new TextEncoder,ho=typeof TextDecoder<"u"&&new TextDecoder,Sm=0;try{ho.decode(Cm,{stream:!0}),Sm=1}catch{}var Fm=function(n){for(var s="",a=0;;){var e=n[a++],t=(e>127)+(e>223)+(e>239);if(a+t>n.length)return{s,r:ep(n,a-1)};t?t==3?(e=((e&15)<<18|(n[a++]&63)<<12|(n[a++]&63)<<6|n[a++]&63)-65536,s+=String.fromCharCode(55296|e>>10,56320|e&1023)):t&1?s+=String.fromCharCode((e&31)<<6|n[a++]&63):s+=String.fromCharCode((e&15)<<12|(n[a++]&63)<<6|n[a++]&63):s+=String.fromCharCode(e)}};function Mm(n,s){if(s){for(var a=new Nn(n.length),e=0;e<n.length;++e)a[e]=n.charCodeAt(e);return a}if(Dc)return Dc.encode(n);for(var t=n.length,o=new Nn(n.length+(n.length>>1)),p=0,i=function(d){o[p++]=d},e=0;e<t;++e){if(p+5>o.length){var r=new Nn(p+8+(t-e<<1));r.set(o),o=r}var u=n.charCodeAt(e);u<128||s?i(u):u<2048?(i(192|u>>6),i(128|u&63)):u>55295&&u<57344?(u=65536+(u&1047552)|n.charCodeAt(++e)&1023,i(240|u>>18),i(128|u>>12&63),i(128|u>>6&63),i(128|u&63)):(i(224|u>>12),i(128|u>>6&63),i(128|u&63))}return ep(o,0,p)}function $m(n,s){if(s){for(var a="",e=0;e<n.length;e+=16384)a+=String.fromCharCode.apply(null,n.subarray(e,e+16384));return a}else{if(ho)return ho.decode(n);var t=Fm(n),o=t.s,a=t.r;return a.length&&os(8),o}}const rn=({name:n="",color:s="currentColor"},{slots:a})=>{var e;return c("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${n}-icon`],viewBox:"0 0 1024 1024",fill:s,"aria-label":`${n} icon`},(e=a.default)==null?void 0:e.call(a))};rn.displayName="IconBase";const Pi=({size:n=48,stroke:s=4,wrapper:a=!0,height:e=2*n})=>{const t=c("svg",{xmlns:"http://www.w3.org/2000/svg",width:n,height:n,preserveAspectRatio:"xMidYMid",viewBox:"25 25 50 50"},[c("animateTransform",{attributeName:"transform",type:"rotate",dur:"2s",keyTimes:"0;1",repeatCount:"indefinite",values:"0;360"}),c("circle",{cx:"50",cy:"50",r:"20",fill:"none",stroke:"currentColor","stroke-width":s,"stroke-linecap":"round"},[c("animate",{attributeName:"stroke-dasharray",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"1,200;90,200;1,200"}),c("animate",{attributeName:"stroke-dashoffset",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"0;-35px;-125px"})])]);return a?c("div",{class:"loading-icon-wrapper",style:`display:flex;align-items:center;justify-content:center;height:${e}px`},t):t};Pi.displayName="LoadingIcon";const Ri=(n,{slots:s})=>{var a;return(a=s.default)==null?void 0:a.call(s)},tp=(n="")=>{if(n){if(typeof n=="number")return new Date(n);const s=Date.parse(n.toString());if(!Number.isNaN(s))return new Date(s)}return null},gt=(n,s)=>{let a=1;for(let e=0;e<n.length;e++)a+=n.charCodeAt(e),a+=a<<10,a^=a>>6;return a+=a<<3,a^=a>>11,a%s},xi=Array.isArray,Nm=n=>typeof n=="function",zm=n=>typeof n=="string";var Hm=n=>n.startsWith("ftp://"),op=n=>/^(https?:)?\/\//.test(n),qm=/.md((\?|#).*)?$/,Um=(n,s="/")=>!!(op(n)||Hm(n)||n.startsWith("/")&&!n.startsWith(s)&&!qm.test(n)),Ci=n=>Object.prototype.toString.call(n)==="[object Object]";function Wm(){const n=Y(!1);return ua()&&gn(()=>{n.value=!0}),n}function Gm(n){return Wm(),w(()=>!!n())}const xs=n=>typeof n=="string",ja=(n,s)=>xs(n)&&n.startsWith(s),ma=(n,s)=>xs(n)&&n.endsWith(s),Te=Object.entries,Km=Object.fromEntries,ss=Object.keys,Jm=n=>(n.endsWith(".md")&&(n=`${n.slice(0,-3)}.html`),!n.endsWith("/")&&!n.endsWith(".html")&&(n=`${n}.html`),n=n.replace(/(^|\/)(?:README|index).html$/i,"$1"),n),Vi=n=>{const[s,a=""]=n.split("#");return s?`${Jm(s)}${a?`#${a}`:""}`:n},Ic=n=>Ci(n)&&xs(n.name),me=(n,s=!1)=>n?xi(n)?n.map(a=>xs(a)?{name:a}:Ic(a)?a:null).filter(a=>a!==null):xs(n)?[{name:n}]:Ic(n)?[n]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${s?"":"| false"} | undefined\`, but got`,n),[]):[],ji=(n,s)=>{if(n){if(xi(n)&&n.every(xs))return n;if(xs(n))return[n];console.error(`Expect ${s||"value"} to be \`string[] | string | undefined\`, but got`,n)}return[]},Si=n=>ji(n,"category"),Fi=n=>ji(n,"tag"),yt=n=>ja(n,"/");let Ym=class{constructor(){this.messageElements={};const s="message-container",a=document.getElementById(s);a?this.containerElement=a:(this.containerElement=document.createElement("div"),this.containerElement.id=s,document.body.appendChild(this.containerElement))}pop(s,a=2e3){const e=document.createElement("div"),t=Date.now();return e.className="message move-in",e.innerHTML=s,this.containerElement.appendChild(e),this.messageElements[t]=e,a>0&&setTimeout(()=>{this.close(t)},a),t}close(s){if(s){const a=this.messageElements[s];a.classList.remove("move-in"),a.classList.add("move-out"),a.addEventListener("animationend",()=>{a.remove(),delete this.messageElements[s]})}else ss(this.messageElements).forEach(a=>this.close(Number(a)))}destroy(){document.body.removeChild(this.containerElement)}};const Mi=/#.*$/u,Qm=n=>{const s=Mi.exec(n);return s?s[0]:""},Lc=n=>decodeURI(n).replace(Mi,"").replace(/(index)?\.(md|html)$/,""),pp=(n,s)=>{if(s===void 0)return!1;const a=Lc(n.path),e=Lc(s),t=Qm(s);return t?t===n.hash&&(!e||a===e):a===e},Pc=n=>{const s=atob(n);return $m(jm(Mm(s,!0)))},Xm=n=>op(n)?n:`https://github.com/${n}`,$i=n=>!op(n)||/github\.com/.test(n)?"GitHub":/bitbucket\.org/.test(n)?"Bitbucket":/gitlab\.com/.test(n)?"GitLab":/gitee\.com/.test(n)?"Gitee":null,Sa=(n,...s)=>{const a=n.resolve(...s),e=a.matched[a.matched.length-1];if(!(e!=null&&e.redirect))return a;const{redirect:t}=e,o=Nm(t)?t(a):t,p=zm(o)?{path:o}:o;return Sa(n,{hash:a.hash,query:a.query,params:a.params,...p})},Zm=n=>{var s;if(!(n.metaKey||n.altKey||n.ctrlKey||n.shiftKey)&&!n.defaultPrevented&&!(n.button!==void 0&&n.button!==0)&&!(n.currentTarget&&((s=n.currentTarget.getAttribute("target"))!=null&&s.match(/\b_blank\b/i))))return n.preventDefault(),!0},Fn=({to:n="",class:s="",...a},{slots:e})=>{var p;const t=Un(),o=(i={})=>Zm(i)?t.push(n).catch():Promise.resolve();return c("a",{...a,class:["vp-link",s],href:Tn(Vi(n)),onClick:o},(p=e.default)==null?void 0:p.call(e))};Fn.displayName="VPLink";const Ni=()=>c(rn,{name:"github"},()=>c("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));Ni.displayName="GitHubIcon";const zi=()=>c(rn,{name:"gitlab"},()=>c("path",{d:"M229.333 78.688C223.52 62 199.895 62 193.895 78.688L87.958 406.438h247.5c-.188 0-106.125-327.75-106.125-327.75zM33.77 571.438c-4.875 15 .563 31.687 13.313 41.25l464.812 345L87.77 406.438zm301.5-165 176.813 551.25 176.812-551.25zm655.125 165-54-165-424.312 551.25 464.812-345c12.938-9.563 18.188-26.25 13.5-41.25zM830.27 78.688c-5.812-16.688-29.437-16.688-35.437 0l-106.125 327.75h247.5z"}));zi.displayName="GitLabIcon";const Hi=()=>c(rn,{name:"gitee"},()=>c("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));Hi.displayName="GiteeIcon";const qi=()=>c(rn,{name:"bitbucket"},()=>c("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));qi.displayName="BitbucketIcon";const Ui=()=>c(rn,{name:"source"},()=>c("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));Ui.displayName="SourceIcon";const hs=(n,s)=>{const a=s?s._instance:ua();return Ci(a==null?void 0:a.appContext.components)&&(n in a.appContext.components||is(n)in a.appContext.components||be(is(n))in a.appContext.components)},n0=()=>Gm(()=>typeof window<"u"&&window.navigator&&"userAgent"in window.navigator),s0=()=>{const n=n0();return w(()=>n.value&&/\b(?:Android|iPhone)/i.test(navigator.userAgent))},De=n=>{const s=js();return w(()=>n[s.value])};function Rc(n,s){var a;const e=Hn();return Ol(()=>{e.value=n()},{...s,flush:(a=s==null?void 0:s.flush)!=null?a:"sync"}),ia(e)}function cp(n,s){let a,e,t;const o=Y(!0),p=()=>{o.value=!0,t()};fn(n,p,{flush:"sync"});const i=typeof s=="function"?s:s.get,r=typeof s=="function"?void 0:s.set,u=bl((d,v)=>(e=d,t=v,{get(){return o.value&&(a=i(),o.value=!1),e(),a},set(k){r==null||r(k)}}));return Object.isExtensible(u)&&(u.trigger=p),u}function Ha(n){return el()?(zu(n),!0):!1}function zn(n){return typeof n=="function"?n():pa(n)}const Ie=typeof window<"u"&&typeof document<"u",a0=Object.prototype.toString,e0=n=>a0.call(n)==="[object Object]",fe=()=>{},xc=t0();function t0(){var n;return Ie&&((n=window==null?void 0:window.navigator)==null?void 0:n.userAgent)&&/iP(ad|hone|od)/.test(window.navigator.userAgent)}function Wi(n,s){function a(...e){return new Promise((t,o)=>{Promise.resolve(n(()=>s.apply(this,e),{fn:s,thisArg:this,args:e})).then(t).catch(o)})}return a}const Gi=n=>n();function o0(n,s=!0,a=!0,e=!1){let t=0,o,p=!0,i=fe,r;const u=()=>{o&&(clearTimeout(o),o=void 0,i(),i=fe)};return v=>{const k=zn(n),f=Date.now()-t,b=()=>r=v();return u(),k<=0?(t=Date.now(),b()):(f>k&&(a||!p)?(t=Date.now(),b()):s&&(r=new Promise((_,B)=>{i=e?B:_,o=setTimeout(()=>{t=Date.now(),p=!0,_(b()),u()},Math.max(0,k-f))})),!a&&!o&&(o=setTimeout(()=>p=!0,k)),p=!1,r)}}function p0(n=Gi){const s=Y(!0);function a(){s.value=!1}function e(){s.value=!0}const t=(...o)=>{s.value&&n(...o)};return{isActive:ia(s),pause:a,resume:e,eventFilter:t}}function c0(...n){if(n.length!==1)return za(...n);const s=n[0];return typeof s=="function"?ia(bl(()=>({get:s,set:fe}))):Y(s)}function l0(n,s=200,a=!1,e=!0,t=!1){return Wi(o0(s,a,e,t),n)}function i0(n,s,a={}){const{eventFilter:e=Gi,...t}=a;return fn(n,Wi(e,s),t)}function r0(n,s,a={}){const{eventFilter:e,...t}=a,{eventFilter:o,pause:p,resume:i,isActive:r}=p0(e);return{stop:i0(n,s,{...t,eventFilter:o}),pause:p,resume:i,isActive:r}}function Ki(n,s=!0){ua()?gn(n):s?n():ra(n)}function u0(n){ua()&&Ae(n)}function d0(n,s,a={}){const{immediate:e=!0}=a,t=Y(!1);let o=null;function p(){o&&(clearTimeout(o),o=null)}function i(){t.value=!1,p()}function r(...u){p(),t.value=!0,o=setTimeout(()=>{t.value=!1,o=null,n(...u)},zn(s))}return e&&(t.value=!0,Ie&&r()),Ha(i),{isPending:ia(t),start:r,stop:i}}function Eo(n=!1,s={}){const{truthyValue:a=!0,falsyValue:e=!1}=s,t=jn(n),o=Y(n);function p(i){if(arguments.length)return o.value=i,o.value;{const r=zn(a);return o.value=o.value===r?zn(e):r,o.value}}return t?p:[o,p]}function Ks(n){var s;const a=zn(n);return(s=a==null?void 0:a.$el)!=null?s:a}const Cs=Ie?window:void 0,Ji=Ie?window.document:void 0,v0=Ie?window.navigator:void 0;function Jn(...n){let s,a,e,t;if(typeof n[0]=="string"||Array.isArray(n[0])?([a,e,t]=n,s=Cs):[s,a,e,t]=n,!s)return fe;Array.isArray(a)||(a=[a]),Array.isArray(e)||(e=[e]);const o=[],p=()=>{o.forEach(d=>d()),o.length=0},i=(d,v,k,f)=>(d.addEventListener(v,k,f),()=>d.removeEventListener(v,k,f)),r=fn(()=>[Ks(s),zn(t)],([d,v])=>{if(p(),!d)return;const k=e0(v)?{...v}:v;o.push(...a.flatMap(f=>e.map(b=>i(d,f,b,k))))},{immediate:!0,flush:"post"}),u=()=>{r(),p()};return Ha(u),u}function k0(){const n=Y(!1);return ua()&&gn(()=>{n.value=!0}),n}function At(n){const s=k0();return w(()=>(s.value,!!n()))}function Yi(n,s={}){const{window:a=Cs}=s,e=At(()=>a&&"matchMedia"in a&&typeof a.matchMedia=="function");let t;const o=Y(!1),p=u=>{o.value=u.matches},i=()=>{t&&("removeEventListener"in t?t.removeEventListener("change",p):t.removeListener(p))},r=Ol(()=>{e.value&&(i(),t=a.matchMedia(zn(n)),"addEventListener"in t?t.addEventListener("change",p):t.addListener(p),o.value=t.matches)});return Ha(()=>{r(),i(),t=void 0}),o}function m0(n={}){const{navigator:s=v0,read:a=!1,source:e,copiedDuring:t=1500,legacy:o=!1}=n,p=At(()=>s&&"clipboard"in s),i=w(()=>p.value||o),r=Y(""),u=Y(!1),d=d0(()=>u.value=!1,t);function v(){p.value?s.clipboard.readText().then(_=>{r.value=_}):r.value=b()}i.value&&a&&Jn(["copy","cut"],v);async function k(_=zn(e)){i.value&&_!=null&&(p.value?await s.clipboard.writeText(_):f(_),r.value=_,u.value=!0,d.start())}function f(_){const B=document.createElement("textarea");B.value=_??"",B.style.position="absolute",B.style.opacity="0",document.body.appendChild(B),B.select(),document.execCommand("copy"),B.remove()}function b(){var _,B,y;return(y=(B=(_=document==null?void 0:document.getSelection)==null?void 0:_.call(document))==null?void 0:B.toString())!=null?y:""}return{isSupported:i,text:r,copied:u,copy:k}}const We=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Ge="__vueuse_ssr_handlers__",f0=h0();function h0(){return Ge in We||(We[Ge]=We[Ge]||{}),We[Ge]}function E0(n,s){return f0[n]||s}function b0(n){return n==null?"any":n instanceof Set?"set":n instanceof Map?"map":n instanceof Date?"date":typeof n=="boolean"?"boolean":typeof n=="string"?"string":typeof n=="object"?"object":Number.isNaN(n)?"any":"number"}const _0={boolean:{read:n=>n==="true",write:n=>String(n)},object:{read:n=>JSON.parse(n),write:n=>JSON.stringify(n)},number:{read:n=>Number.parseFloat(n),write:n=>String(n)},any:{read:n=>n,write:n=>String(n)},string:{read:n=>n,write:n=>String(n)},map:{read:n=>new Map(JSON.parse(n)),write:n=>JSON.stringify(Array.from(n.entries()))},set:{read:n=>new Set(JSON.parse(n)),write:n=>JSON.stringify(Array.from(n))},date:{read:n=>new Date(n),write:n=>n.toISOString()}},Cc="vueuse-storage";function qa(n,s,a,e={}){var t;const{flush:o="pre",deep:p=!0,listenToStorageChanges:i=!0,writeDefaults:r=!0,mergeDefaults:u=!1,shallow:d,window:v=Cs,eventFilter:k,onError:f=L=>{console.error(L)}}=e,b=(d?Hn:Y)(s);if(!a)try{a=E0("getDefaultStorage",()=>{var L;return(L=Cs)==null?void 0:L.localStorage})()}catch(L){f(L)}if(!a)return b;const _=zn(s),B=b0(_),y=(t=e.serializer)!=null?t:_0[B],{pause:T,resume:g}=r0(b,()=>O(b.value),{flush:o,deep:p,eventFilter:k});return v&&i&&(Jn(v,"storage",j),Jn(v,Cc,P)),j(),b;function O(L){try{if(L==null)a.removeItem(n);else{const N=y.write(L),H=a.getItem(n);H!==N&&(a.setItem(n,N),v&&v.dispatchEvent(new CustomEvent(Cc,{detail:{key:n,oldValue:H,newValue:N,storageArea:a}})))}}catch(N){f(N)}}function V(L){const N=L?L.newValue:a.getItem(n);if(N==null)return r&&_!==null&&a.setItem(n,y.write(_)),_;if(!L&&u){const H=y.read(N);return typeof u=="function"?u(H,_):B==="object"&&!Array.isArray(H)?{..._,...H}:H}else return typeof N!="string"?N:y.read(N)}function P(L){j(L.detail)}function j(L){if(!(L&&L.storageArea!==a)){if(L&&L.key==null){b.value=_;return}if(!(L&&L.key!==n)){T();try{(L==null?void 0:L.newValue)!==y.write(b.value)&&(b.value=V(L))}catch(N){f(N)}finally{L?ra(g):g()}}}}}function g0(n){return Yi("(prefers-color-scheme: dark)",n)}function y0(n,s,a={}){const{window:e=Cs,...t}=a;let o;const p=At(()=>e&&"ResizeObserver"in e),i=()=>{o&&(o.disconnect(),o=void 0)},r=w(()=>Array.isArray(n)?n.map(v=>Ks(v)):[Ks(n)]),u=fn(r,v=>{if(i(),p.value&&e){o=new ResizeObserver(s);for(const k of v)k&&o.observe(k,t)}},{immediate:!0,flush:"post",deep:!0}),d=()=>{i(),u()};return Ha(d),{isSupported:p,stop:d}}function A0(n,s={width:0,height:0},a={}){const{window:e=Cs,box:t="content-box"}=a,o=w(()=>{var r,u;return(u=(r=Ks(n))==null?void 0:r.namespaceURI)==null?void 0:u.includes("svg")}),p=Y(s.width),i=Y(s.height);return y0(n,([r])=>{const u=t==="border-box"?r.borderBoxSize:t==="content-box"?r.contentBoxSize:r.devicePixelContentBoxSize;if(e&&o.value){const d=Ks(n);if(d){const v=e.getComputedStyle(d);p.value=Number.parseFloat(v.width),i.value=Number.parseFloat(v.height)}}else if(u){const d=Array.isArray(u)?u:[u];p.value=d.reduce((v,{inlineSize:k})=>v+k,0),i.value=d.reduce((v,{blockSize:k})=>v+k,0)}else p.value=r.contentRect.width,i.value=r.contentRect.height},a),fn(()=>Ks(n),r=>{p.value=r?s.width:0,i.value=r?s.height:0}),{width:p,height:i}}const Vc=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function lp(n,s={}){const{document:a=Ji,autoExit:e=!1}=s,t=w(()=>{var y;return(y=Ks(n))!=null?y:a==null?void 0:a.querySelector("html")}),o=Y(!1),p=w(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(y=>a&&y in a||t.value&&y in t.value)),i=w(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(y=>a&&y in a||t.value&&y in t.value)),r=w(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(y=>a&&y in a||t.value&&y in t.value)),u=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(y=>a&&y in a),d=At(()=>t.value&&a&&p.value!==void 0&&i.value!==void 0&&r.value!==void 0),v=()=>u?(a==null?void 0:a[u])===t.value:!1,k=()=>{if(r.value){if(a&&a[r.value]!=null)return a[r.value];{const y=t.value;if((y==null?void 0:y[r.value])!=null)return!!y[r.value]}}return!1};async function f(){if(!(!d.value||!o.value)){if(i.value)if((a==null?void 0:a[i.value])!=null)await a[i.value]();else{const y=t.value;(y==null?void 0:y[i.value])!=null&&await y[i.value]()}o.value=!1}}async function b(){if(!d.value||o.value)return;k()&&await f();const y=t.value;p.value&&(y==null?void 0:y[p.value])!=null&&(await y[p.value](),o.value=!0)}async function _(){await(o.value?f():b())}const B=()=>{const y=k();(!y||y&&v())&&(o.value=y)};return Jn(a,Vc,B,!1),Jn(()=>Ks(t),Vc,B,!1),e&&Ha(f),{isSupported:d,isFullscreen:o,enter:b,exit:f,toggle:_}}function zt(n){return typeof Window<"u"&&n instanceof Window?n.document.documentElement:typeof Document<"u"&&n instanceof Document?n.documentElement:n}function Ht(n,s=fe,a={}){const{immediate:e=!0,manual:t=!1,type:o="text/javascript",async:p=!0,crossOrigin:i,referrerPolicy:r,noModule:u,defer:d,document:v=Ji,attrs:k={}}=a,f=Y(null);let b=null;const _=T=>new Promise((g,O)=>{const V=L=>(f.value=L,g(L),L);if(!v){g(!1);return}let P=!1,j=v.querySelector(`script[src="${zn(n)}"]`);j?j.hasAttribute("data-loaded")&&V(j):(j=v.createElement("script"),j.type=o,j.async=p,j.src=zn(n),d&&(j.defer=d),i&&(j.crossOrigin=i),u&&(j.noModule=u),r&&(j.referrerPolicy=r),Object.entries(k).forEach(([L,N])=>j==null?void 0:j.setAttribute(L,N)),P=!0),j.addEventListener("error",L=>O(L)),j.addEventListener("abort",L=>O(L)),j.addEventListener("load",()=>{j.setAttribute("data-loaded","true"),s(j),V(j)}),P&&(j=v.head.appendChild(j)),T||V(j)}),B=(T=!0)=>(b||(b=_(T)),b),y=()=>{if(!v)return;b=null,f.value&&(f.value=null);const T=v.querySelector(`script[src="${zn(n)}"]`);T&&v.head.removeChild(T)};return e&&!t&&Ki(B),t||u0(y),{scriptTag:f,load:B,unload:y}}function Qi(n){const s=window.getComputedStyle(n);if(s.overflowX==="scroll"||s.overflowY==="scroll"||s.overflowX==="auto"&&n.clientWidth<n.scrollWidth||s.overflowY==="auto"&&n.clientHeight<n.scrollHeight)return!0;{const a=n.parentNode;return!a||a.tagName==="BODY"?!1:Qi(a)}}function w0(n){const s=n||window.event,a=s.target;return Qi(a)?!1:s.touches.length>1?!0:(s.preventDefault&&s.preventDefault(),!1)}function Xi(n,s=!1){const a=Y(s);let e=null,t;fn(c0(n),i=>{const r=zt(zn(i));if(r){const u=r;t=u.style.overflow,a.value&&(u.style.overflow="hidden")}},{immediate:!0});const o=()=>{const i=zt(zn(n));!i||a.value||(xc&&(e=Jn(i,"touchmove",r=>{w0(r)},{passive:!1})),i.style.overflow="hidden",a.value=!0)},p=()=>{const i=zt(zn(n));!i||!a.value||(xc&&(e==null||e()),i.style.overflow=t,a.value=!1)};return Ha(p),w({get(){return a.value},set(i){i?o():p()}})}function Zi(n,s,a={}){const{window:e=Cs}=a;return qa(n,s,e==null?void 0:e.sessionStorage,a)}function B0(n={}){const{window:s=Cs}=n;if(!s)return{x:Y(0),y:Y(0)};const a=Y(s.scrollX),e=Y(s.scrollY);return Jn(s,"scroll",()=>{a.value=s.scrollX,e.value=s.scrollY},{capture:!1,passive:!0}),{x:a,y:e}}function O0(n={}){const{window:s=Cs,initialWidth:a=Number.POSITIVE_INFINITY,initialHeight:e=Number.POSITIVE_INFINITY,listenOrientation:t=!0,includeScrollbar:o=!0}=n,p=Y(a),i=Y(e),r=()=>{s&&(o?(p.value=s.innerWidth,i.value=s.innerHeight):(p.value=s.document.documentElement.clientWidth,i.value=s.document.documentElement.clientHeight))};if(r(),Ki(r),Jn("resize",r,{passive:!0}),t){const u=Yi("(orientation: portrait)");fn(u,()=>r())}return{width:p,height:i}}const nr=({type:n="info",text:s="",vertical:a,color:e},{slots:t})=>{var o;return c("span",{class:["vp-badge",n,{diy:e}],style:{verticalAlign:a??!1,backgroundColor:e??!1}},((o=t.default)==null?void 0:o.call(t))||s)};nr.displayName="Badge";var T0=F({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(n){const s=w(()=>{const e=["font-icon icon"],t=`fas fa-${n.icon}`;return e.push("fa-fw fa-sm"),e.push(n.icon.includes(" ")?n.icon:t),e}),a=w(()=>{const e={};return n.color&&(e.color=n.color),n.size&&(e["font-size"]=Number.isNaN(Number(n.size))?n.size:`${n.size}px`),ss(e).length?e:null});return()=>n.icon?c("span",{key:n.icon,class:s.value,style:a.value}):null}});const sr=()=>c(rn,{name:"back-to-top"},()=>[c("path",{d:"M512 843.2c-36.2 0-66.4-13.6-85.8-21.8-10.8-4.6-22.6 3.6-21.8 15.2l7 102c.4 6.2 7.6 9.4 12.6 5.6l29-22c3.6-2.8 9-1.8 11.4 2l41 64.2c3 4.8 10.2 4.8 13.2 0l41-64.2c2.4-3.8 7.8-4.8 11.4-2l29 22c5 3.8 12.2.6 12.6-5.6l7-102c.8-11.6-11-20-21.8-15.2-19.6 8.2-49.6 21.8-85.8 21.8z"}),c("path",{d:"m795.4 586.2-96-98.2C699.4 172 513 32 513 32S324.8 172 324.8 488l-96 98.2c-3.6 3.6-5.2 9-4.4 14.2L261.2 824c1.8 11.4 14.2 17 23.6 10.8L419 744s41.4 40 94.2 40c52.8 0 92.2-40 92.2-40l134.2 90.8c9.2 6.2 21.6.6 23.6-10.8l37-223.8c.4-5.2-1.2-10.4-4.8-14zM513 384c-34 0-61.4-28.6-61.4-64s27.6-64 61.4-64c34 0 61.4 28.6 61.4 64S547 384 513 384z"})]);sr.displayName="BackToTopIcon";var D0=F({name:"BackToTop",props:{threshold:{type:Number,default:100},noProgress:Boolean},setup(n){const s=yn(),a=De({"/":{backToTop:"返回顶部"}}),e=Hn(),{height:t}=A0(e),{height:o}=O0(),{y:p}=B0(),i=w(()=>s.value.backToTop!==!1&&p.value>n.threshold),r=w(()=>p.value/(t.value-o.value));return gn(()=>{e.value=document.body}),()=>c(Qs,{name:"fade"},()=>i.value?c("button",{type:"button",class:"vp-back-to-top-button","aria-label":a.value.backToTop,"data-balloon-pos":"left",onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[n.noProgress?null:c("svg",{class:"vp-scroll-progress"},c("circle",{cx:"50%",cy:"50%",style:{"stroke-dasharray":`calc(${Math.PI*r.value*100}% - ${4*Math.PI}px) calc(${Math.PI*100}% - ${4*Math.PI}px)`}})),c(sr)]):null)}});const I0=ws({enhance:({app:n})=>{hs("Badge")||n.component("Badge",nr),hs("FontIcon")||n.component("FontIcon",T0)},setup:()=>{Ht("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",()=>{},{attrs:{"data-auto-replace-svg":"nest"}}),Ht("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",()=>{},{attrs:{"data-auto-replace-svg":"nest"}}),Ht("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",()=>{},{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[()=>c(D0,{})]});function L0(n,s,a){var e,t,o;s===void 0&&(s=50),a===void 0&&(a={});var p=(e=a.isImmediate)!=null&&e,i=(t=a.callback)!=null&&t,r=a.maxWait,u=Date.now(),d=[];function v(){if(r!==void 0){var f=Date.now()-u;if(f+s>=r)return r-f}return s}var k=function(){var f=[].slice.call(arguments),b=this;return new Promise(function(_,B){var y=p&&o===void 0;if(o!==void 0&&clearTimeout(o),o=setTimeout(function(){if(o=void 0,u=Date.now(),!p){var g=n.apply(b,f);i&&i(g),d.forEach(function(O){return(0,O.resolve)(g)}),d=[]}},v()),y){var T=n.apply(b,f);return i&&i(T),_(T)}d.push({resolve:_,reject:B})})};return k.cancel=function(f){o!==void 0&&clearTimeout(o),d.forEach(function(b){return(0,b.reject)(f)}),d=[]},k}const P0=({headerLinkSelector:n,headerAnchorSelector:s,delay:a,offset:e=5})=>{const t=Un(),p=L0(()=>{var _,B;const i=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(i-0)<e){jc(t,"");return}const u=window.innerHeight+i,d=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),v=Math.abs(d-u)<e,k=Array.from(document.querySelectorAll(n)),b=Array.from(document.querySelectorAll(s)).filter(y=>k.some(T=>T.hash===y.hash));for(let y=0;y<b.length;y++){const T=b[y],g=b[y+1],O=i>=(((_=T.parentElement)==null?void 0:_.offsetTop)??0)-e,V=!g||i<(((B=g.parentElement)==null?void 0:B.offsetTop)??0)-e;if(!(O&&V))continue;const j=decodeURIComponent(t.currentRoute.value.hash),L=decodeURIComponent(T.hash);if(j===L)return;if(v){for(let N=y+1;N<b.length;N++)if(j===decodeURIComponent(b[N].hash))return}jc(t,L);return}},a);gn(()=>{window.addEventListener("scroll",p)}),Go(()=>{window.removeEventListener("scroll",p)})},jc=async(n,s)=>{const{scrollBehavior:a}=n.options;n.options.scrollBehavior=void 0,await n.replace({query:n.currentRoute.value.query,hash:s}).finally(()=>n.options.scrollBehavior=a)},R0=".vp-sidebar-link, .toc-link",x0=".header-anchor",C0=200,V0=5,j0=ws({setup(){P0({headerLinkSelector:R0,headerAnchorSelector:x0,delay:C0,offset:V0})}});let ar=()=>null;const er=Symbol(""),S0=n=>{ar=n},F0=()=>hn(er),M0=n=>{n.provide(er,ar)};var $0=F({name:"AutoCatalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean,hideHeading:Boolean},setup(n){const s=F0(),a=De({"/":{title:"目录",empty:"暂无目录"}}),e=cn(),t=Un(),o=ui(),p=v=>v?c(s,{icon:v}):null,i=({title:v,path:k,icon:f,class:b})=>c(Fn,{class:b,to:k},()=>[p(f),v||k]),r=v=>{const k=v.I;return typeof k>"u"||k},u=()=>{const v=n.base||e.value.path.replace(/\/[^/]+$/,"/"),k=t.getRoutes(),f=[];return k.filter(({meta:b,path:_})=>{if(!ja(_,v)||_===v)return!1;if(v==="/"){const B=ss(o.value.locales).filter(y=>y!=="/");if(_==="/404.html"||B.some(y=>ja(_,y)))return!1}return(ma(_,".html")&&!ma(_,"/index.html")||ma(_,"/"))&&r(b)}).map(({path:b,meta:_})=>{const B=b.substring(v.length).split("/").length;return{title:_.t||"",icon:_.i||null,base:b.replace(/\/[^/]+\/?$/,"/"),order:_.O||null,level:ma(b,"/")?B-1:B,path:b}}).filter(({title:b,level:_})=>b&&_<=n.level).sort(({title:b,level:_,path:B,order:y},{title:T,level:g,path:O,order:V})=>_-g||(ma(B,"/index.html")?-1:ma(O,"/index.html")?1:y===null?V===null?b.localeCompare(T):V:V===null?y:y>0?V>0?y-V:-1:V<0?y-V:1)).forEach(b=>{var y;const{base:_,level:B}=b;switch(B){case 1:f.push(b);break;case 2:{const T=f.find(g=>g.path===_);T&&(T.children??(T.children=[])).push(b);break}default:{const T=f.find(g=>g.path===_.replace(/\/[^/]+\/$/,"/"));if(T){const g=(y=T.children)==null?void 0:y.find(O=>O.path===_);g&&(g.children??(g.children=[])).push(b)}}}}),f},d=w(()=>u());return()=>{const v=d.value.some(f=>f.children),k=d.value.map(({children:f=[],icon:b,path:_,title:B})=>{const y=i({title:B,path:_,icon:b,class:"vp-catalog-title"});return v?[c("h3",{id:B,class:["vp-catalog-child-title",{"has-children":f.length}]},[c("a",{href:`#${B}`,class:"header-anchor","aria-hidden":!0},"#"),y]),f.length?c(n.index?"ol":"ul",{class:"vp-child-catalogs"},f.map(({children:T=[],icon:g,path:O,title:V})=>c("li",{class:"vp-child-catalog"},[c("div",{class:["vp-catalog-sub-title",{"has-children":T.length}]},[c("a",{href:`#${V}`,class:"header-anchor"},"#"),c(i,{title:V,path:O,icon:g,class:"vp-catalog-title"})]),T.length?c(n.index?"ol":"div",{class:n.index?"vp-sub-catalogs":"vp-sub-catalogs-wrapper"},T.map(({icon:P,path:j,title:L})=>{const N=c(i,{title:L,path:j,icon:P,class:""});return n.index?c("li",{class:"vp-sub-catalog"},N):c(i,{title:L,path:j,icon:P,class:"vp-sub-catalog-link"})})):null]))):null]:c("div",{class:"vp-catalog-child-title"},y)});return c("div",{class:["vp-catalog-wrapper",{index:n.index}]},[n.hideHeading?null:c("h2",{class:"vp-catalog-main-title"},a.value.title),d.value.length?n.index?c("ol",{class:"vp-catalogs"},k.map(f=>c("li",{class:"vp-catalog"},f))):k:c("p",{class:"vp-empty-catalog"},a.value.empty)])}}}),N0=ws({enhance:({app:n})=>{M0(n),hs("AutoCatalog",n)||n.component("AutoCatalog",$0)}});const z0=c("svg",{class:"external-link-icon",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},[c("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),c("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})]),tr=F({name:"ExternalLinkIcon",props:{locales:{type:Object,required:!1,default:()=>({})}},setup(n){const s=js(),a=w(()=>n.locales[s.value]??{openInNewWindow:"open in new window"});return()=>c("span",[z0,c("span",{class:"external-link-icon-sr-only"},a.value.openInNewWindow)])}}),H0={},q0=ws({enhance({app:n}){n.component("ExternalLinkIcon",c(tr,{locales:H0}))}});/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const dn={settings:{minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},status:null,set:n=>{const s=dn.isStarted();n=qt(n,dn.settings.minimum,1),dn.status=n===1?null:n;const a=dn.render(!s),e=a.querySelector(dn.settings.barSelector),t=dn.settings.speed,o=dn.settings.easing;return a.offsetWidth,U0(p=>{Ke(e,{transform:"translate3d("+Sc(n)+"%,0,0)",transition:"all "+t+"ms "+o}),n===1?(Ke(a,{transition:"none",opacity:"1"}),a.offsetWidth,setTimeout(function(){Ke(a,{transition:"all "+t+"ms linear",opacity:"0"}),setTimeout(function(){dn.remove(),p()},t)},t)):setTimeout(()=>p(),t)}),dn},isStarted:()=>typeof dn.status=="number",start:()=>{dn.status||dn.set(0);const n=()=>{setTimeout(()=>{dn.status&&(dn.trickle(),n())},dn.settings.trickleSpeed)};return dn.settings.trickle&&n(),dn},done:n=>!n&&!dn.status?dn:dn.inc(.3+.5*Math.random()).set(1),inc:n=>{let s=dn.status;return s?(typeof n!="number"&&(n=(1-s)*qt(Math.random()*s,.1,.95)),s=qt(s+n,0,.994),dn.set(s)):dn.start()},trickle:()=>dn.inc(Math.random()*dn.settings.trickleRate),render:n=>{if(dn.isRendered())return document.getElementById("nprogress");Fc(document.documentElement,"nprogress-busy");const s=document.createElement("div");s.id="nprogress",s.innerHTML=dn.settings.template;const a=s.querySelector(dn.settings.barSelector),e=n?"-100":Sc(dn.status||0),t=document.querySelector(dn.settings.parent);return Ke(a,{transition:"all 0 linear",transform:"translate3d("+e+"%,0,0)"}),t!==document.body&&Fc(t,"nprogress-custom-parent"),t==null||t.appendChild(s),s},remove:()=>{Mc(document.documentElement,"nprogress-busy"),Mc(document.querySelector(dn.settings.parent),"nprogress-custom-parent");const n=document.getElementById("nprogress");n&&W0(n)},isRendered:()=>!!document.getElementById("nprogress")},qt=(n,s,a)=>n<s?s:n>a?a:n,Sc=n=>(-1+n)*100,U0=function(){const n=[];function s(){const a=n.shift();a&&a(s)}return function(a){n.push(a),n.length===1&&s()}}(),Ke=function(){const n=["Webkit","O","Moz","ms"],s={};function a(p){return p.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(i,r){return r.toUpperCase()})}function e(p){const i=document.body.style;if(p in i)return p;let r=n.length;const u=p.charAt(0).toUpperCase()+p.slice(1);let d;for(;r--;)if(d=n[r]+u,d in i)return d;return p}function t(p){return p=a(p),s[p]??(s[p]=e(p))}function o(p,i,r){i=t(i),p.style[i]=r}return function(p,i){for(const r in i){const u=i[r];u!==void 0&&Object.prototype.hasOwnProperty.call(i,r)&&o(p,r,u)}}}(),or=(n,s)=>(typeof n=="string"?n:ip(n)).indexOf(" "+s+" ")>=0,Fc=(n,s)=>{const a=ip(n),e=a+s;or(a,s)||(n.className=e.substring(1))},Mc=(n,s)=>{const a=ip(n);if(!or(n,s))return;const e=a.replace(" "+s+" "," ");n.className=e.substring(1,e.length-1)},ip=n=>(" "+(n.className||"")+" ").replace(/\s+/gi," "),W0=n=>{n&&n.parentNode&&n.parentNode.removeChild(n)};const G0=()=>{gn(()=>{const n=Un(),s=new Set;s.add(n.currentRoute.value.path),n.beforeEach(a=>{s.has(a.path)||dn.start()}),n.afterEach(a=>{s.add(a.path),dn.done()})})},K0=ws({setup(){G0()}}),J0=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$NGh04XZx7Qxp/w5/NFMEz.tneO3hSMXe/.OtAEhniyhY2jaXAgbjS"]}},"author":{"name":"TX","url":"https://mister-hope.com"},"logo":"/logo.svg","repo":"vuepress-theme-hope/vuepress-theme-hope","docsDir":"src","footer":"默认页脚","displayFooter":true,"blog":{},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"收藏"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":["/",{"text":"前端笔记","children":[{"text":"vue源码学习","link":"/vue-learn/响应式/1.md"},{"text":"javascript笔记","link":"/前端笔记/js/1.md"}]},{"text":"post","link":"/posts/"},{"text":"算法题","link":"/算法题/数组/1.md"}],"sidebar":{"/vue-learn":"structure","/前端笔记/":"structure","/posts/":"structure","/算法题/":"structure"}}}}'),Y0=Y(J0),pr=()=>Y0,cr=Symbol(""),Q0=()=>{const n=hn(cr);if(!n)throw new Error("useThemeLocaleData() is called without provider.");return n},X0=(n,s)=>{const{locales:a,...e}=n;return{...e,...a==null?void 0:a[s]}},Z0=ws({enhance({app:n}){const s=pr(),a=n._context.provides[np],e=w(()=>X0(s.value,a.value));n.provide(cr,e),Object.defineProperties(n.config.globalProperties,{$theme:{get(){return s.value}},$themeLocale:{get(){return e.value}}})}});const n1=800,s1=2e3,a1={"/":{copy:"复制代码",copied:"已复制",hint:"复制成功"}},e1=!1,t1=['.theme-hope-content div[class*="language-"] pre'],$c=!1,Ut=new Map,o1=()=>{const{copy:n}=m0({legacy:!0}),s=De(a1),a=cn(),e=s0(),t=i=>{if(!i.hasAttribute("copy-code-registered")){const r=document.createElement("button");r.type="button",r.classList.add("copy-code-button"),r.innerHTML='<div class="copy-icon" />',r.setAttribute("aria-label",s.value.copy),r.setAttribute("data-copied",s.value.copied),i.parentElement&&i.parentElement.insertBefore(r,i),i.setAttribute("copy-code-registered","")}},o=()=>ra().then(()=>new Promise(i=>{setTimeout(()=>{t1.forEach(r=>{document.querySelectorAll(r).forEach(t)}),i()},n1)})),p=(i,r,u)=>{let{innerText:d=""}=r;/language-(shellscript|shell|bash|sh|zsh)/.test(i.classList.toString())&&(d=d.replace(/^ *(\$|>) /gm,"")),n(d).then(()=>{u.classList.add("copied"),clearTimeout(Ut.get(u));const v=setTimeout(()=>{u.classList.remove("copied"),u.blur(),Ut.delete(u)},s1);Ut.set(u,v)})};gn(()=>{(!e.value||$c)&&o(),Jn("click",i=>{const r=i.target;if(r.matches('div[class*="language-"] > button.copy')){const u=r.parentElement,d=r.nextElementSibling;d&&p(u,d,r)}else if(r.matches('div[class*="language-"] div.copy-icon')){const u=r.parentElement,d=u.parentElement,v=u.nextElementSibling;v&&p(d,v,u)}}),fn(()=>a.value.path,()=>{(!e.value||$c)&&o()})})};var p1=ws({setup:()=>{o1()}});const lr=({title:n,desc:s="",logo:a="",color:e="",link:t=""})=>{const o=[c("img",{class:"vp-card-logo",src:Tn(a)}),c("div",{class:"vp-card-content"},[c("div",{class:"vp-card-title",innerHTML:n}),c("hr"),c("div",{class:"vp-card-desc",innerHTML:s})])],p={class:"vp-card"};return e&&(p.style={background:e}),ve(t)?c("a",{href:t,target:"_blank",...p},o):c(Fn,{to:t,...p},()=>o)};lr.displayName="VPCard";const Je=qa("VUEPRESS_CODE_TAB_STORE",{});var c1=F({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(n,{slots:s}){const a=Y(n.active),e=Hn([]),t=()=>{n.tabId&&(Je.value[n.tabId]=n.data[a.value].id)},o=(u=a.value)=>{a.value=u<e.value.length-1?u+1:0,e.value[a.value].focus()},p=(u=a.value)=>{a.value=u>0?u-1:e.value.length-1,e.value[a.value].focus()},i=(u,d)=>{u.key===" "||u.key==="Enter"?(u.preventDefault(),a.value=d):u.key==="ArrowRight"?(u.preventDefault(),o()):u.key==="ArrowLeft"&&(u.preventDefault(),p()),n.tabId&&(Je.value[n.tabId]=n.data[a.value].id)},r=()=>{if(n.tabId){const u=n.data.findIndex(({id:d})=>Je.value[n.tabId]===d);if(u!==-1)return u}return n.active};return gn(()=>{a.value=r(),fn(()=>Je.value[n.tabId],(u,d)=>{if(n.tabId&&u!==d){const v=n.data.findIndex(({id:k})=>k===u);v!==-1&&(a.value=v)}})}),()=>n.data.length?c("div",{class:"vp-code-tabs"},[c("div",{class:"vp-code-tabs-nav",role:"tablist"},n.data.map(({id:u},d)=>{const v=d===a.value;return c("button",{type:"button",ref:k=>{k&&(e.value[d]=k)},class:["vp-code-tab-nav",{active:v}],role:"tab","aria-controls":`codetab-${n.id}-${d}`,"aria-selected":v,onClick:()=>{a.value=d,t()},onKeydown:k=>i(k,d)},s[`title${d}`]({value:u,isActive:v}))})),n.data.map(({id:u},d)=>{const v=d===a.value;return c("div",{class:["vp-code-tab",{active:v}],id:`codetab-${n.id}-${d}`,role:"tabpanel","aria-expanded":v},s[`tab${d}`]({value:u,isActive:v}))})]):null}});const ir=({active:n=!1},{slots:s})=>{var a;return c("div",{class:["code-group-item",{active:n}],"aria-selected":n},(a=s.default)==null?void 0:a.call(s))};ir.displayName="CodeGroupItem";const l1=F({name:"CodeGroup",slots:Object,setup(n,{slots:s}){const a=Y(-1),e=Hn([]),t=(i=a.value)=>{a.value=i<e.value.length-1?i+1:0,e.value[a.value].focus()},o=(i=a.value)=>{a.value=i>0?i-1:e.value.length-1,e.value[a.value].focus()},p=(i,r)=>{i.key===" "||i.key==="Enter"?(i.preventDefault(),a.value=r):i.key==="ArrowRight"?(i.preventDefault(),t(r)):i.key==="ArrowLeft"&&(i.preventDefault(),o(r))};return()=>{var r;const i=(((r=s.default)==null?void 0:r.call(s))||[]).filter(u=>u.type.name==="CodeGroupItem").map(u=>(u.props===null&&(u.props={}),u));return i.length===0?null:(a.value<0||a.value>i.length-1?(a.value=i.findIndex(u=>"active"in u.props),a.value===-1&&(a.value=0)):i.forEach((u,d)=>{u.props.active=d===a.value}),c("div",{class:"code-group"},[c("div",{class:"code-group-nav"},i.map((u,d)=>{const v=d===a.value;return c("button",{type:"button",ref:k=>{k&&(e.value[d]=k)},class:["code-group-nav-tab",{active:v}],"aria-pressed":v,"aria-expanded":v,onClick:()=>{a.value=d},onKeydown:k=>p(k,d)},u.props.title)})),i]))}}});const i1='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',r1='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>',u1='<svg class="icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M512 74.667C270.933 74.667 74.667 270.933 74.667 512S270.933 949.333 512 949.333 949.333 753.067 949.333 512 753.067 74.667 512 74.667zm0 810.666C307.2 885.333 138.667 716.8 138.667 512S307.2 138.667 512 138.667 885.333 307.2 885.333 512 716.8 885.333 512 885.333z"/><path d="M708.267 465.067 473.6 330.667c-8.533-4.267-17.067-6.4-25.6-6.4-29.867 0-53.333 23.466-53.333 53.333v268.8c0 8.533 2.133 19.2 6.4 25.6 10.666 17.067 27.733 27.733 46.933 27.733 8.533 0 17.067-2.133 25.6-6.4l234.667-134.4c8.533-4.266 14.933-10.666 19.2-19.2 6.4-12.8 8.533-27.733 4.266-40.533-2.133-14.933-10.666-25.6-23.466-34.133zM458.667 627.2V396.8L661.333 512 458.667 627.2z"/></svg>';const Wt={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"},Nc={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},d1=(n,s,a)=>{const e=document.createElement(n);return we(s)&&ss(s).forEach(t=>{if(t.indexOf("data"))e[t]=s[t];else{const o=t.replace("data","");e.dataset[o]=s[t]}}),a&&a.forEach(t=>{e.appendChild(t)}),e},rp=n=>({...Wt,...n,jsLib:Array.from(new Set([...Wt.jsLib||[],...n.jsLib||[]])),cssLib:Array.from(new Set([...Wt.cssLib||[],...n.cssLib||[]]))}),Ba=(n,s)=>{if(n[s]!==void 0)return n[s];const a=new Promise(e=>{var o;const t=document.createElement("script");t.src=s,(o=document.querySelector("body"))==null||o.appendChild(t),t.onload=()=>{e()}});return n[s]=a,a},v1=(n,s)=>{if(s.css&&Array.from(n.childNodes).every(a=>a.nodeName!=="STYLE")){const a=d1("style",{innerHTML:s.css});n.appendChild(a)}},k1=(n,s,a)=>{const e=a.getScript();if(e&&Array.from(s.childNodes).every(t=>t.nodeName!=="SCRIPT")){const t=document.createElement("script");t.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${n} .vp-code-demo-display').shadowRoot;
${e}}`)),s.appendChild(t)}},m1=n=>{const s=ss(n),a={html:[],js:[],css:[],isLegal:!1};return["html","js","css"].forEach(e=>{const t=s.filter(o=>Nc[e].types.includes(o));if(t.length){const o=t[0];a[e]=[n[o].replace(/^\n|\n$/g,""),Nc[e].map[o]||o]}}),a.isLegal=(!a.html.length||a.html[1]==="none")&&(!a.js.length||a.js[1]==="none")&&(!a.css.length||a.css[1]==="none"),a},rr=n=>n.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),ur=n=>`<div id="app">
${rr(n)}
</div>`,f1=n=>`${n.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,h1=n=>n.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),dr=n=>`(function(exports){var module={};module.exports=exports;${n};return module.exports.__esModule?module.exports.default:module.exports;})({})`,E1=(n,s)=>{const a=rp(s),e=n.js[0]||"";return{...a,html:rr(n.html[0]||""),js:e,css:n.css[0]||"",isLegal:n.isLegal,getScript:()=>{var t;return a.useBabel?((t=window.Babel.transform(e,{presets:["es2015"]}))==null?void 0:t.code)||"":e}}},b1=/<template>([\s\S]+)<\/template>/u,_1=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u,g1=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u,y1=(n,s)=>{const a=rp(s),e=n.html[0]||"",t=b1.exec(e),o=_1.exec(e),p=g1.exec(e),i=t?t[1].replace(/^\n|\n$/g,""):"",[r="",u=""]=o?[o[4].replace(/^\n|\n$/g,""),o[3]]:[],[d="",v=""]=p?[p[4].replace(/^\n|\n$/g,""),p[3]]:[],k=u===""&&(v===""||v==="css");return{...a,html:ur(i),js:h1(r),css:d,isLegal:k,jsLib:[a.vue,...a.jsLib],getScript:()=>{var b,_;const f=s.useBabel?((_=(b=window.Babel)==null?void 0:b.transform(r,{presets:["es2015"]}))==null?void 0:_.code)||"":r.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${dr(f)};appOptions.template=\`${i.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},A1=(n,s)=>{const a=rp(s);return{...a,html:ur(""),js:f1(n.js[0]||""),css:n.css[0]||(n.js[0]?n.js[0].replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim():""),isLegal:n.isLegal,jsLib:[a.react,a.reactDOM,...a.jsLib],jsx:!0,getScript:()=>{var t,o;const e=((o=(t=window.Babel)==null?void 0:t.transform(n.js[0]||"",{presets:["es2015","react"]}))==null?void 0:o.code)||"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${dr(e)}))`}}},Oa={},w1=n=>Promise.all([Ba(Oa,n.babel),Ba(Oa,n.react),Ba(Oa,n.reactDOM)]),B1=n=>{const s=[Ba(Oa,n.vue)];return n.useBabel&&s.push(Ba(Oa,n.babel)),Promise.all(s)},O1=n=>n.useBabel?Ba(Oa,n.babel):Promise.resolve();var T1=F({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:{type:String,default:""},config:{type:String,default:""},code:{type:String,required:!0}},slots:Object,setup(n,{slots:s}){const[a,e]=Eo(!1),t=Hn(),o=Hn(),p=Y("0"),i=Y(!1),r=w(()=>JSON.parse(n.config?Pc(n.config):"{}")),u=w(()=>{const b=JSON.parse(Pc(n.code));return m1(b)}),d=w(()=>n.type==="react"?A1(u.value,r.value):n.type==="vue"?y1(u.value,r.value):E1(u.value,r.value)),v=w(()=>d.value.isLegal),k=(b=!1)=>{const _=t.value.attachShadow({mode:"open"}),B=document.createElement("div");B.classList.add("code-demo-app"),_.appendChild(B),v.value?(b&&(B.innerHTML=d.value.html),v1(_,d.value),k1(n.id,_,d.value),p.value="0"):p.value="auto",i.value=!0},f=()=>{switch(n.type){case"react":return w1(d.value).then(()=>k());case"vue":return B1(d.value).then(()=>k());default:return O1(d.value).then(()=>k(!0))}};return gn(()=>{setTimeout(()=>{f()},800)}),()=>{var b;return c("div",{class:"vp-code-demo",id:n.id},[c("div",{class:"vp-code-demo-header"},[d.value.isLegal?c("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-code-demo-toggle-button",a.value?"down":"end"],onClick:()=>{p.value=a.value?"0":`${o.value.clientHeight+13.8}px`,e()}}):null,n.title?c("span",{class:"vp-code-demo-title"},decodeURIComponent(n.title)):null,d.value.isLegal&&d.value.jsfiddle!==!1?c("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[c("input",{type:"hidden",name:"html",value:d.value.html}),c("input",{type:"hidden",name:"js",value:d.value.js}),c("input",{type:"hidden",name:"css",value:d.value.css}),c("input",{type:"hidden",name:"wrap",value:"1"}),c("input",{type:"hidden",name:"panel_js",value:"3"}),c("input",{type:"hidden",name:"resources",value:[...d.value.cssLib,...d.value.jsLib].join(",")}),c("button",{type:"submit",class:"jsfiddle-button",innerHTML:r1,"aria-label":"JSFiddle","data-balloon-pos":"up"})]):null,!d.value.isLegal||d.value.codepen!==!1?c("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[c("input",{type:"hidden",name:"data",value:JSON.stringify({html:d.value.html,js:d.value.js,css:d.value.css,js_external:d.value.jsLib.join(";"),css_external:d.value.cssLib.join(";"),layout:d.value.codepenLayout,html_pre_processor:u.value?u.value.html[1]:"none",js_pre_processor:u.value?u.value.js[1]:d.value.jsx?"babel":"none",css_pre_processor:u.value?u.value.css[1]:"none",editors:d.value.codepenEditors})}),c("button",{type:"submit",innerHTML:i1,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"up"})]):null]),i.value?null:c(Pi,{class:"vp-code-demo-loading"}),c("div",{ref:t,class:"vp-code-demo-display",style:{display:v.value&&i.value?"block":"none"}}),c("div",{class:"vp-code-demo-code-wrapper",style:{height:p.value}},c("div",{ref:o,class:"vp-code-demo-codes"},(b=s.default)==null?void 0:b.call(s)))])}}});var D1=F({name:"Playground",props:{title:{type:String,default:""},link:{type:String,required:!0}},setup(n){return()=>[c("div",{class:"vp-playground"},[c("div",{class:"vp-playground-header"},[n.title?c("div",{class:"vp-playground-title"},decodeURIComponent(n.title)):null,c("div",{class:"vp-playground-actions"},[c("a",{class:"vp-playground-action",href:decodeURIComponent(n.link),target:"_blank",innerHTML:u1})])]),c("div",{class:"vp-playground-container"},c("iframe",{src:decodeURIComponent(n.link)}))])]}});const Gt=qa("VUEPRESS_TAB_STORE",{});var I1=F({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(n,{slots:s}){const a=Y(n.active),e=Hn([]),t=()=>{n.tabId&&(Gt.value[n.tabId]=n.data[a.value].id)},o=(u=a.value)=>{a.value=u<e.value.length-1?u+1:0,e.value[a.value].focus()},p=(u=a.value)=>{a.value=u>0?u-1:e.value.length-1,e.value[a.value].focus()},i=(u,d)=>{u.key===" "||u.key==="Enter"?(u.preventDefault(),a.value=d):u.key==="ArrowRight"?(u.preventDefault(),o()):u.key==="ArrowLeft"&&(u.preventDefault(),p()),t()},r=()=>{if(n.tabId){const u=n.data.findIndex(({id:d})=>Gt.value[n.tabId]===d);if(u!==-1)return u}return n.active};return gn(()=>{a.value=r(),fn(()=>Gt.value[n.tabId],(u,d)=>{if(n.tabId&&u!==d){const v=n.data.findIndex(({id:k})=>k===u);v!==-1&&(a.value=v)}})}),()=>n.data.length?c("div",{class:"vp-tabs"},[c("div",{class:"vp-tabs-nav",role:"tablist"},n.data.map(({id:u},d)=>{const v=d===a.value;return c("button",{type:"button",ref:k=>{k&&(e.value[d]=k)},class:["vp-tab-nav",{active:v}],role:"tab","aria-controls":`tab-${n.id}-${d}`,"aria-selected":v,onClick:()=>{a.value=d,t()},onKeydown:k=>i(k,d)},s[`title${d}`]({value:u,isActive:v}))})),n.data.map(({id:u},d)=>{const v=d===a.value;return c("div",{class:["vp-tab",{active:v}],id:`tab-${n.id}-${d}`,role:"tabpanel","aria-expanded":v},s[`tab${d}`]({value:u,isActive:v}))})]):null}});const L1=ws({enhance:({app:n})=>{n.component("VPCard",lr),n.component("CodeTabs",c1),hs("CodeGroup",n)||n.component("CodeGroup",l1),hs("CodeGroupItem",n)||n.component("CodeGroupItem",ir),n.component("CodeDemo",T1),n.component("Playground",D1),n.component("Tabs",I1)},setup:()=>{}});let P1={};const vr=Symbol(""),R1=()=>hn(vr),x1=n=>{n.provide(vr,P1)};const C1=".theme-hope-content :not(a) > img:not([no-view])",V1={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}},j1=800,S1='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',F1=n=>mn(n)?Array.from(document.querySelectorAll(n)):n.map(s=>Array.from(document.querySelectorAll(s))).flat(),kr=n=>new Promise((s,a)=>{n.complete?s({type:"image",element:n,src:n.src,width:n.naturalWidth,height:n.naturalHeight,alt:n.alt,msrc:n.src}):(n.onload=()=>s(kr(n)),n.onerror=e=>a(e))}),M1=()=>{const{isSupported:n,toggle:s}=lp(),a=R1(),e=De(V1),t=cn();let o;const p=r=>{r.on("uiRegister",()=>{n&&r.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{s()}}),r.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:(u,d)=>{u.setAttribute("download",""),u.setAttribute("target","_blank"),u.setAttribute("rel","noopener"),d.on("change",()=>{u.setAttribute("href",d.currSlide.data.src)})}}),r.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:(u,d)=>{const v=[];let k=-1;for(let f=0;f<d.getNumItems();f++){const b=document.createElement("div");b.className="photo-swipe-bullet",b.onclick=_=>{d.goTo(v.indexOf(_.target))},v.push(b),u.appendChild(b)}d.on("change",()=>{k>=0&&v[k].classList.remove("active"),v[d.currIndex].classList.add("active"),k=d.currIndex})}})})},i=()=>Promise.all([l(()=>import("./photoswipe.esm-1464cdb9.js"),[]),ra().then(()=>new Promise(r=>setTimeout(r,j1)).then(()=>F1(C1)))]).then(([{default:r},u])=>{const d=u.map(v=>({html:S1,element:v,msrc:v.src}));u.forEach((v,k)=>{const f=()=>{o=new r({preloaderDelay:0,showHideAnimationType:"zoom",...e.value,...a,dataSource:d,index:k,closeOnVerticalDrag:!0,wheelToZoom:!1}),p(o),o.addFilter("thumbEl",()=>v),o.addFilter("placeholderSrc",()=>v.src),o.init()};v.style.cursor="zoom-in",v.addEventListener("click",()=>{f()}),v.addEventListener("keypress",({key:b})=>{b==="Enter"&&f()})}),u.forEach((v,k)=>{kr(v).then(f=>{d.splice(k,1,f),o==null||o.refreshSlideContent(k)})})});gn(()=>{Jn("wheel",()=>{o==null||o.close()}),fn(()=>t.value.path,i,{immediate:!0})})};var $1=ws({enhance:({app:n})=>{x1(n)},setup:()=>{M1()}});const mr=()=>{const n=cn();return w(()=>n.value.readingTime??null)},bo=typeof{"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}}>"u"?null:{"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}},fr=(n,s)=>{const{minutes:a,words:e}=n,{less1Minute:t,word:o,time:p}=s;return{time:a<1?t:p.replace("$time",Math.round(a).toString()),words:o.replace("$word",e.toString())}},zc={words:"",time:""},hr=()=>bo?De(bo):w(()=>null),N1=()=>{if(typeof bo>"u")return w(()=>zc);const n=mr(),s=hr();return w(()=>n.value&&s.value?fr(n.value,s.value):zc)},Xs=()=>pr(),pn=()=>Q0(),Ua=()=>w(()=>!!Xs().value.pure);var Kt=F({name:"EmptyComponent",setup:()=>()=>null});const z1="719px",H1="1440px",q1="false",up={mobileBreakPoint:z1,pcBreakPoint:H1,enableThemeColor:q1},dp={"/vue-learn":[{text:"响应式",prefix:"响应式/",collapsible:!0,children:["1","2","3","4","5","6","7","9","8","10"]},{text:"编译器",prefix:"编译器/",collapsible:!0,children:["1"]},{text:"运行时",prefix:"运行时/",collapsible:!0,children:[{text:"0.概述",prefix:"0.概述/",collapsible:!0,children:["1.概述"]},{text:"1.渲染器",prefix:"1.渲染器/",collapsible:!0,children:["1","2","3"]},{text:"2.diff算法",prefix:"2.diff算法/",collapsible:!0,children:["4","5","6"]},{text:"3.组件",prefix:"3.组件/",collapsible:!0,children:[{text:"1.组件实现基本原理",prefix:"1.组件实现基本原理/",collapsible:!0,children:["7","8","9","10","11"]},{text:"2.异步组件与函数式组件",prefix:"2.异步组件与函数式组件/",collapsible:!0,children:["12","13"]}]}]}],"/前端笔记/":[{text:"Js",prefix:"js/",collapsible:!0,children:["1","2","3","4","5","6","10","7","8","9","11","12.手写深拷贝","14.防抖与节流","15.Symbol的作用","16.遍历对象的方法","17.数组去重的几种方法","18.手写Promise","杂记",{text:"手写数组方法",prefix:"手写数组方法/",collapsible:!0,children:["1.手写filter","2.手写redeuce"]}]},{text:"Vue",prefix:"vue/",collapsible:!0,children:["1"]},{text:"场景",prefix:"场景/",collapsible:!0,children:["虚拟列表"]}],"/posts/":["",{text:"Apple",prefix:"apple/",collapsible:!0,children:["1","2","3","4"]},{text:"Banana",prefix:"banana/",collapsible:!0,children:["1","2","3","4"]},{text:"Vue",prefix:"vue/",collapsible:!0,children:["一","二"]},"cherry","dragonfruit","tomato","strawberry"],"/算法题/":[{text:"二叉树",prefix:"二叉树/",collapsible:!0,children:["1","2","4","6","7","8","9","10","11","12","14","15","16","17","18","19","20","21.验证二叉搜索树",{text:"二叉搜索树",prefix:"二叉搜索树/",collapsible:!0,children:["二叉搜索树的最近公共祖先"]},{text:"层序遍历",prefix:"层序遍历/",collapsible:!0,children:["1.二叉树的层序遍历"]},{text:"树的深度",prefix:"树的深度/",collapsible:!0,children:["1.二叉树的最大深度","2.平衡二叉树"]},{text:"相同树",prefix:"相同树/",collapsible:!0,children:["/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/%E7%9B%B8%E5%90%8C%E6%A0%91/1_%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91.html","2.对称二叉树"]}]},{text:"位运算",prefix:"位运算/",collapsible:!0,children:["1.只出现一次的数字"]},{text:"前缀和",prefix:"前缀和/",collapsible:!0,children:["1.二维区域和检索"]},{text:"动态规划",prefix:"动态规划/",collapsible:!0,children:["1.爬楼梯","2.使用最小花费爬台阶","3.不同路径","4.不同路径2","5.整数拆分","6.不同的二叉树","7.01背包-二维数组","8.01背包-一维数组","9.分割等和子集","10.最后一块石头重量","12.一和零","11.目标和","13.多重背包","14.零钱duihuan","15.组合总和4","16.完全平方数","17.单词拆分","18.打家劫舍2","19.打家劫舍3","20.买卖股票最佳时机","21.最长递增序列","22.最长重复子数组","23.最长公共子序列","24.最大子数组和","25.判断子序列","26.不同的子序列","27.两个字符串的删除操作","28.编辑距离","背包问题"]},{text:"单调栈",prefix:"单调栈/",collapsible:!0,children:["2.下一个更大元素I","1.每日温度","3.下一个更大元素II"]},{text:"哈希表",prefix:"哈希表/",collapsible:!0,children:["1","2","3","4","5","6"]},{text:"回溯",prefix:"回溯/",collapsible:!0,children:[{text:"1.组合",prefix:"1.组合/",collapsible:!0,children:["1","2","3","4","5","6","7"]},{text:"2.排列",prefix:"2.排列/",collapsible:!0,children:["1","2","4"]},{text:"3.深度搜索",prefix:"3.深度搜索/",collapsible:!0,children:["1.所有可能的路径"]}]},{text:"字符串",prefix:"字符串/",collapsible:!0,children:["1","2","3","4",{text:"中心扩散法",prefix:"中心扩散法/",collapsible:!0,children:["1.最大回文子串"]},{text:"回文串",prefix:"回文串/",collapsible:!0,children:["回文串"]},{text:"字符串与数组的转换",prefix:"字符串与数组的转换/",collapsible:!0,children:["1.字母异位词分组"]},{text:"栈",prefix:"栈/",collapsible:!0,children:["1.字符串解码"]},{text:"滑动窗口",prefix:"滑动窗口/",collapsible:!0,children:["1.无重复最长字串"]},{text:"递归",prefix:"递归/",collapsible:!0,children:["1.括号生成"]}]},{text:"拓扑排序",prefix:"拓扑排序/",collapsible:!0,children:["1.课程表"]},{text:"排序",prefix:"排序/",collapsible:!0,children:["快排","堆排序"]},{text:"数组",prefix:"数组/",collapsible:!0,children:["1","2","4","5","6.三数之和",{text:"二分查找",prefix:"二分查找/",collapsible:!0,children:["1.旋转数组1","2.旋转数组2","3.排序数组中第一个和最后一个元素","4.寻找重复数(值域二分)","5.寻找两个正序数组的中位数"]},{text:"滑动窗口",prefix:"滑动窗口/",collapsible:!0,children:["滑动窗口三题"]}]},{text:"栈与队列",prefix:"栈与队列/",collapsible:!0,children:["1","2","3","4","5","6","7.最小栈"]},{text:"深搜",prefix:"深搜/",collapsible:!0,children:["1.岛屿数量"]},{text:"贪心算法",prefix:"贪心算法/",collapsible:!0,children:["1.贪心算法基础","2.摆动序列","3.最大子序列","4.买卖股票的最佳时机2","5.跳跃游戏","6.跳跃游戏2","7.k次取反后最大化数组和","8.柠檬水找零","9.加油站","10.根据身高重建队列","11.用最少数量的箭引爆气球","12.无重叠区间","13.划分字母区间","14.合并区间","15.单调递增数字"]},{text:"递归",prefix:"递归/",collapsible:!0,children:["1.m的n次方"]},{text:"链表",prefix:"链表/",collapsible:!0,children:["1","3","5","6","8.LRU缓存(双向链表)",{text:"创建新链表辅助",prefix:"创建新链表辅助/",collapsible:!0,children:["1.两数相加"]},{text:"删除链表元素",prefix:"删除链表元素/",collapsible:!0,children:["1.移除链表元素","2.删除链表中的节点","3.删除链表倒数第n个节点"]},{text:"反转链表",prefix:"反转链表/",collapsible:!0,children:["4"]},{text:"归并法",prefix:"归并法/",collapsible:!0,children:["1.链表排序 "]},{text:"快慢指针",prefix:"快慢指针/",collapsible:!0,children:["1.链表的中间节点","2.环形链表","3.环形链表2"]}]}]},Er=n=>{const{icon:s="",color:a,size:e}=n,t={};return a&&(t.color=a),e&&(t.height=Number.isNaN(Number(e))?e:`${e}px`),da(s)?c("img",{class:"icon",src:s,"no-view":"",style:t}):yt(s)?c("img",{class:"icon",src:Tn(s),"no-view":"",style:t}):c(ns("FontIcon"),n)};Er.displayName="HopeIcon";var qn=Er,_n=(n=>(n.type="y",n.title="t",n.shortTitle="s",n.icon="i",n.author="a",n.date="d",n.localizedDate="l",n.category="c",n.tag="g",n.isEncrypted="n",n.isOriginal="o",n.readingTime="r",n.excerpt="e",n.sticky="u",n.cover="v",n.index="I",n.order="O",n))(_n||{}),br=(n=>(n.article="a",n.home="h",n.slide="s",n.page="p",n))(br||{});const Ta=(n,s,a=!1)=>{let e=Sa(n,Vi(encodeURI(s)));e.name==="404"&&(e=Sa(n,s));const{fullPath:t,meta:o,name:p}=e;return{text:!a&&o[_n.shortTitle]?o[_n.shortTitle]:o[_n.title]||s,link:p==="404"?s:t,...o[_n.icon]?{icon:o[_n.icon]}:{}}},Le=()=>{const n=Un(),s=Bs();return a=>{if(a)if(yt(a))s.path!==a&&n.push(a);else if(da(a)||ai(a))window&&window.open(a);else{const e=s.path.slice(0,s.path.lastIndexOf("/"));n.push(`${e}/${encodeURI(a)}`)}}},_r=()=>{const n=pn(),s=yn();return w(()=>{const{author:a}=s.value;return a?me(a):a===!1?[]:me(n.value.author,!1)})},U1=()=>{const n=yn();return w(()=>Si(n.value.category).map(s=>{var a,e;return{name:s,path:((e=(a=hn(Symbol.for("categoryMap")))==null?void 0:a.value.map[s])==null?void 0:e.path)||""}}))},W1=()=>{const n=yn();return w(()=>Fi(n.value.tag).map(s=>{var a,e;return{name:s,path:((e=(a=hn(Symbol.for("tagMap")))==null?void 0:a.value.map[s])==null?void 0:e.path)||""}}))},G1=()=>{const n=yn(),s=cn();return w(()=>{const a=tp(n.value.date);if(a)return a;const{createdTime:e}=s.value.git||{};return e?new Date(e):null})},K1=()=>{const n=pn(),s=cn(),a=yn(),e=_r(),t=U1(),o=W1(),p=G1(),i=mr(),r=N1(),u=w(()=>({author:e.value,category:t.value,date:p.value,localizedDate:s.value.localizedDate,tag:o.value,isOriginal:a.value.isOriginal||!1,readingTime:i.value,readingTimeLocale:r.value,pageview:"pageview"in a.value?a.value.pageview:!0})),d=w(()=>"pageInfo"in a.value?a.value.pageInfo:"pageInfo"in n.value?n.value.pageInfo:null);return{info:u,items:d}},{mobileBreakPoint:J1,pcBreakPoint:Y1}=up,Hc=n=>n.endsWith("px")?Number(n.slice(0,-2)):null,Pe=()=>{const n=Y(!1),s=Y(!1),a=()=>{n.value=window.innerWidth<=(Hc(J1)??719),s.value=window.innerWidth>=(Hc(Y1)??1440)};return gn(()=>{a(),Jn("resize",a,!1),Jn("orientationchange",a,!1)}),{isMobile:n,isPC:s}},gr=Symbol(""),Re=()=>{const n=hn(gr);if(!n)throw new Error("useDarkmode() is called without provider.");return n},Q1=n=>{const s=Xs(),a=g0(),e=qa("vuepress-theme-hope-scheme","auto"),t=w(()=>s.value.darkmode||"switch"),o=w(()=>{const i=t.value;return i==="disable"?!1:i==="enable"?!0:i==="auto"?a.value:i==="toggle"?e.value==="dark":e.value==="dark"||e.value==="auto"&&a.value}),p=w(()=>{const i=t.value;return i==="switch"||i==="toggle"});n.provide(gr,{canToggle:p,config:t,isDarkmode:o,status:e}),Object.defineProperties(n.config.globalProperties,{$isDarkmode:{get:()=>o.value}})},X1=()=>{const{isDarkmode:n}=Re(),s=(a=n.value)=>document.documentElement.setAttribute("data-theme",a?"dark":"light");gn(()=>{fn(n,s,{immediate:!0})})};var Gn=F({name:"AutoLink",inheritAttrs:!1,props:{config:{type:Object,required:!0},exact:Boolean,noExternalLinkIcon:Boolean},emits:["focusout"],slots:Object,setup(n,{attrs:s,emit:a,slots:e}){const t=Bs(),o=ui(),p=za(n,"config"),i=w(()=>da(p.value.link)),r=w(()=>ai(p.value.link)||rk(p.value.link)),u=w(()=>r.value?void 0:p.value.target||(i.value?"_blank":void 0)),d=w(()=>u.value==="_blank"),v=w(()=>!i.value&&!r.value&&!d.value),k=w(()=>r.value?void 0:p.value.rel||(d.value?"noopener noreferrer":void 0)),f=w(()=>p.value.ariaLabel||p.value.text),b=w(()=>{if(n.exact)return!1;const B=ss(o.value.locales);return B.length?B.every(y=>y!==p.value.link):p.value.link!=="/"}),_=w(()=>v.value?p.value.activeMatch?new RegExp(p.value.activeMatch).test(t.path):b.value?ja(t.path,p.value.link):t.path===p.value.link:!1);return()=>{const{before:B,after:y,default:T}=e,{text:g,icon:O,link:V}=p.value;return v.value?c(Fn,{to:V,"aria-label":f.value,...s,class:["nav-link",{active:_.value},s.class],onFocusout:()=>a("focusout")},()=>T?T():[B?B():c(qn,{icon:O}),g,y==null?void 0:y()]):c("a",{href:V,rel:k.value,target:u.value,"aria-label":f.value,...s,class:["nav-link",s.class],onFocusout:()=>a("focusout")},T?T():[B?B():c(qn,{icon:O}),g,n.noExternalLinkIcon?null:c(tr),y==null?void 0:y()])}}});const Fa=(n,s,a=!1)=>"activeMatch"in s?new RegExp(s.activeMatch).test(n.path):pp(n,s.link)?!0:s.children&&!a?s.children.some(e=>Fa(n,e)):!1,yr=(n,s)=>s.type==="group"?s.children.some(a=>a.type==="group"?yr(n,a):a.type==="page"&&Fa(n,a,!0))||"prefix"in s&&pp(n,s.prefix):!1,Ar=(n,s)=>mn(n.link)?c(Gn,{...s,config:n}):c("p",s,[c(qn,{icon:n.icon}),n.text]),wr=n=>{const s=Bs();return n?c("ul",{class:"vp-sidebar-sub-headers"},n.map(a=>{const e=Fa(s,a,!0);return c("li",{class:"vp-sidebar-sub-header"},[Ar(a,{class:["vp-sidebar-link","vp-heading",{active:e}]}),wr(a.children)])})):null},Jt=(n="",s="")=>yt(s)?s:`${ck(n)}${s}`,Z1=(n,s)=>{const a=cn();return{type:"heading",text:n.title,link:`${a.value.path}#${n.slug}`,children:vp(n.children,s)}},vp=(n,s)=>s>0?n.map(a=>Z1(a,s-1)):[],Br=n=>{const s=cn();return vp(s.value.headers,n)},_o=(n,s,a="")=>{const e=Un(),t=cn(),o=(p,i=a)=>{var u;const r=mn(p)?Ta(e,Jt(i,p)):p.link?{...p,...ve(p.link)?{}:{link:Ta(e,Jt(i,p.link)).link}}:p;if("children"in r){const d=Jt(i,r.prefix),v=r.children==="structure"?dp[d]:r.children;return{type:"group",...r,prefix:d,children:v.map(k=>o(k,d))}}return{type:"page",...r,children:r.link===t.value.path?vp(((u=t.value.headers[0])==null?void 0:u.level)===1?t.value.headers[0].children:t.value.headers,s):[]}};return n.map(p=>o(p))},n2=(n,s)=>{const a=cn(),e=ss(n).sort((t,o)=>o.length-t.length);for(const t of e)if(ja(decodeURI(a.value.path),t)){const o=n[t];return o?_o(o==="structure"?dp[t]:o==="heading"?Br(s):o,s,t):[]}return console.warn(`${a.value.path} is missing sidebar config.`),[]},s2=(n,s)=>{const a=js();return n===!1?[]:n==="heading"?Br(s):n==="structure"?_o(dp[a.value],s,a.value):Z(n)?_o(n,s):we(n)?n2(n,s):[]},Or=Symbol(""),a2=()=>{const n=yn(),s=pn(),a=cn(),e=w(()=>n.value.home?!1:n.value.sidebar??s.value.sidebar??"structure"),t=w(()=>n.value.headerDepth??s.value.headerDepth??2),o=cp(()=>[e.value,t.value,a.value.path,null],()=>s2(e.value,t.value));fs(Or,o)},kp=()=>{const n=hn(Or);if(!n)throw new Error("useSidebarItems() is called without provider.");return n};var e2=F({name:"PageFooter",setup(){const n=yn(),s=pn(),a=_r(),e=w(()=>{const{copyright:p,footer:i}=n.value;return i!==!1&&!!(p||i||s.value.displayFooter)}),t=w(()=>{const{footer:p}=n.value;return p===!1?!1:mn(p)?p:s.value.footer||""}),o=w(()=>"copyright"in n.value?n.value.copyright:"copyright"in s.value?s.value.copyright:a.value.length?`Copyright © ${new Date().getFullYear()} ${a.value[0].name}`:!1);return()=>e.value?c("footer",{class:"vp-footer-wrapper"},[t.value?c("div",{class:"vp-footer",innerHTML:t.value}):null,o.value?c("div",{class:"vp-copyright",innerHTML:o.value}):null]):null}}),t2=F({name:"NavbarDropdownLink",props:{config:{type:Object,required:!0}},slots:Object,setup(n,{slots:s}){const a=cn(),e=za(n,"config"),t=w(()=>e.value.ariaLabel||e.value.text),o=Y(!1);fn(()=>a.value.path,()=>{o.value=!1});const p=i=>{i.detail===0&&(o.value=!o.value)};return()=>{var i;return c("div",{class:["dropdown-wrapper",{open:o.value}]},[c("button",{type:"button",class:"dropdown-title","aria-label":t.value,onClick:p},[((i=s.title)==null?void 0:i.call(s))||c("span",{class:"title"},[c(qn,{icon:e.value.icon}),n.config.text]),c("span",{class:"arrow"}),c("ul",{class:"nav-dropdown"},e.value.children.map((r,u)=>{const d=u===e.value.children.length-1;return c("li",{class:"dropdown-item"},"children"in r?[c("h4",{class:"dropdown-subtitle"},r.link?c(Gn,{config:r,onFocusout:()=>{r.children.length===0&&d&&(o.value=!1)}}):c("span",r.text)),c("ul",{class:"dropdown-subitem-wrapper"},r.children.map((v,k)=>c("li",{class:"dropdown-subitem"},c(Gn,{config:v,onFocusout:()=>{k===r.children.length-1&&d&&(o.value=!1)}}))))]:c(Gn,{config:r,onFocusout:()=>{d&&(o.value=!1)}}))}))])])}}});const Tr=(n,s,a="")=>mn(s)?Ta(n,`${a}${s}`):"children"in s?{...s,...s.link&&!ve(s.link)?Ta(n,`${a}${s.link}`):{},children:s.children.map(e=>Tr(n,e,`${a}${s.prefix||""}`))}:{...s,link:ve(s.link)?s.link:Ta(n,`${a}${s.link}`).link},Dr=()=>{const n=pn(),s=Un(),a=()=>(n.value.navbar||[]).map(e=>Tr(s,e));return cp(()=>n.value.navbar,()=>a())},o2=()=>{const n=pn(),s=w(()=>n.value.repo||null),a=w(()=>s.value?Xm(s.value):null),e=w(()=>s.value?$i(s.value):null),t=w(()=>a.value?n.value.repoLabel??(e.value===null?"Source":e.value):null);return w(()=>!a.value||!t.value||n.value.repoDisplay===!1?null:{type:e.value||"Source",label:t.value,link:a.value})};var p2=F({name:"NavScreenDropdown",props:{config:{type:Object,required:!0}},setup(n){const s=cn(),a=za(n,"config"),e=w(()=>a.value.ariaLabel||a.value.text),t=Y(!1);fn(()=>s.value.path,()=>{t.value=!1});const o=(p,i)=>i[i.length-1]===p;return()=>[c("button",{type:"button",class:["nav-screen-dropdown-title",{active:t.value}],"aria-label":e.value,onClick:()=>{t.value=!t.value}},[c("span",{class:"title"},[c(qn,{icon:a.value.icon}),n.config.text]),c("span",{class:["arrow",t.value?"down":"end"]})]),c("ul",{class:["nav-screen-dropdown",{hide:!t.value}]},a.value.children.map(p=>c("li",{class:"dropdown-item"},"children"in p?[c("h4",{class:"dropdown-subtitle"},p.link?c(Gn,{config:p,onFocusout:()=>{o(p,a.value.children)&&p.children.length===0&&(t.value=!1)}}):c("span",p.text)),c("ul",{class:"dropdown-subitem-wrapper"},p.children.map(i=>c("li",{class:"dropdown-subitem"},c(Gn,{config:i,onFocusout:()=>{o(i,p.children)&&o(p,a.value.children)&&(t.value=!1)}}))))]:c(Gn,{config:p,onFocusout:()=>{o(p,a.value.children)&&(t.value=!1)}}))))]}}),c2=F({name:"NavScreenLinks",setup(){const n=Dr();return()=>n.value.length?c("nav",{class:"nav-screen-links"},n.value.map(s=>c("div",{class:"navbar-links-item"},"children"in s?c(p2,{config:s}):c(Gn,{config:s})))):null}});const Ir=()=>c(rn,{name:"dark"},()=>c("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));Ir.displayName="DarkIcon";const Lr=()=>c(rn,{name:"light"},()=>c("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));Lr.displayName="LightIcon";const Pr=()=>c(rn,{name:"auto"},()=>c("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));Pr.displayName="AutoIcon";const Rr=()=>c(rn,{name:"enter-fullscreen"},()=>c("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));Rr.displayName="EnterFullScreenIcon";const xr=()=>c(rn,{name:"cancel-fullscreen"},()=>c("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));xr.displayName="CancelFullScreenIcon";const Cr=()=>c(rn,{name:"outlook"},()=>[c("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);Cr.displayName="OutlookIcon";var Vr=F({name:"AppearanceSwitch",setup(){const{config:n,status:s}=Re(),a=()=>{n.value==="switch"?s.value={light:"dark",dark:"auto",auto:"light"}[s.value]:s.value=s.value==="light"?"dark":"light"};return()=>c("button",{type:"button",id:"appearance-switch",onClick:()=>a()},[c(Pr,{style:{display:s.value==="auto"?"block":"none"}}),c(Ir,{style:{display:s.value==="dark"?"block":"none"}}),c(Lr,{style:{display:s.value==="light"?"block":"none"}})])}}),l2=F({name:"AppearanceMode",setup(){const n=pn(),{canToggle:s}=Re(),a=w(()=>n.value.outlookLocales.darkmode);return()=>s.value?c("div",{class:"appearance-wrapper"},[c("label",{class:"appearance-title",for:"appearance-switch"},a.value),c(Vr)]):null}});const Yt="VUEPRESS_THEME_COLOR";var i2=F({name:"ThemeColorPicker",props:{themeColor:{type:Object,required:!0}},setup(n){const s=(a="")=>{const e=document.documentElement.classList,t=ss(n.themeColor);if(!a){localStorage.removeItem(Yt),e.remove(...t);return}e.remove(...t.filter(o=>o!==a)),e.add(a),localStorage.setItem(Yt,a)};return gn(()=>{const a=localStorage.getItem(Yt);a&&s(a)}),()=>c("ul",{id:"theme-color-picker"},[c("li",c("span",{class:"theme-color",onClick:()=>s()})),Te(n.themeColor).map(([a,e])=>c("li",c("span",{style:{background:e},onClick:()=>s(a)})))])}});const Da=up.enableThemeColor==="true",r2=Da?Km(Te(up).filter(([n])=>n.startsWith("theme-"))):{};var u2=F({name:"ThemeColor",setup(){const n=pn(),s=w(()=>n.value.outlookLocales.themeColor);return()=>Da?c("div",{class:"theme-color-wrapper"},[c("label",{class:"theme-color-title",for:"theme-color-picker"},s.value),c(i2,{themeColor:r2})]):null}}),jr=F({name:"ToggleFullScreenButton",setup(){const n=pn(),{isSupported:s,isFullscreen:a,toggle:e}=lp(),t=w(()=>n.value.outlookLocales.fullscreen);return()=>s?c("div",{class:"full-screen-wrapper"},[c("label",{class:"full-screen-title",for:"full-screen-switch"},t.value),c("button",{type:"button",id:"full-screen-switch",class:"full-screen",ariaPressed:a.value,onClick:()=>e()},a.value?c(xr):c(Rr))]):null}}),Sr=F({name:"OutlookSettings",setup(){const n=Xs(),s=Ua(),a=w(()=>!s.value&&n.value.fullscreen);return()=>c(Et,()=>[Da?c(u2):null,c(l2),a.value?c(jr):null])}}),d2=F({name:"NavScreen",props:{show:Boolean},emits:["close"],slots:Object,setup(n,{emit:s,slots:a}){const e=cn(),{isMobile:t}=Pe(),o=Hn(),p=Xi(o);return gn(()=>{o.value=document.body,fn(t,i=>{!i&&n.show&&(p.value=!1,s("close"))}),fn(()=>e.value.path,()=>{p.value=!1,s("close")})}),Ae(()=>{p.value=!1}),()=>c(Qs,{name:"fade",onEnter:()=>{p.value=!0},onAfterLeave:()=>{p.value=!1}},()=>{var i,r;return n.show?c("div",{id:"nav-screen"},c("div",{class:"vp-nav-screen-container"},[(i=a.before)==null?void 0:i.call(a),c(c2),c("div",{class:"vp-outlook-wrapper"},c(Sr)),(r=a.after)==null?void 0:r.call(a)])):null})}}),v2=F({name:"NavbarBrand",setup(){const n=js(),s=Be(),a=pn(),e=w(()=>a.value.home||n.value),t=w(()=>s.value.title),o=w(()=>a.value.navTitle??t.value),p=w(()=>a.value.logo?Tn(a.value.logo):null),i=w(()=>a.value.logoDark?Tn(a.value.logoDark):null);return()=>c(Fn,{to:e.value,class:"vp-brand"},()=>[p.value?c("img",{class:["vp-nav-logo",{light:!!i.value}],src:p.value,alt:t.value}):null,i.value?c("img",{class:["vp-nav-logo dark"],src:i.value,alt:t.value}):null,o.value?c("span",{class:["vp-site-name",{"hide-in-pad":p.value&&a.value.hideSiteNameOnMobile!==!1}]},o.value):null])}}),k2=F({name:"NavbarLinks",setup(){const n=Dr();return()=>n.value.length?c("nav",{class:"vp-nav-links"},n.value.map(s=>c("div",{class:"nav-item hide-in-mobile"},"children"in s?c(t2,{config:s}):c(Gn,{config:s})))):null}}),m2=F({name:"RepoLink",components:{BitbucketIcon:qi,GiteeIcon:Hi,GitHubIcon:Ni,GitLabIcon:zi,SourceIcon:Ui},setup(){const n=o2();return()=>n.value?c("div",{class:"nav-item vp-repo"},c("a",{class:"vp-repo-link",href:n.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":n.value.label},c(ns(`${n.value.type}Icon`),{style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}});const Fr=({active:n=!1},{emit:s})=>c("button",{type:"button",class:["vp-toggle-navbar-button",{"is-active":n}],"aria-label":"Toggle Navbar","aria-expanded":n,"aria-controls":"nav-screen",onClick:()=>s("toggle")},c("span",[c("span",{class:"vp-top"}),c("span",{class:"vp-middle"}),c("span",{class:"vp-bottom"})]));Fr.displayName="ToggleNavbarButton";var f2=Fr;const go=(n,{emit:s})=>c("button",{type:"button",class:"vp-toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>s("toggle")},c("span",{class:"icon"}));go.displayName="ToggleSidebarButton",go.emits=["toggle"];var h2=go,E2=F({name:"OutlookButton",setup(){const{isSupported:n}=lp(),s=Xs(),a=Ua(),e=cn(),{canToggle:t}=Re(),o=Y(!1),p=w(()=>!a.value&&s.value.fullscreen&&n);return fn(()=>e.value.path,()=>{o.value=!1}),()=>t.value||p.value||Da?c("div",{class:"nav-item hide-in-mobile"},t.value&&!p.value&&!Da?c(Vr):p.value&&!t.value&&!Da?c(jr):c("button",{type:"button",class:["outlook-button",{open:o.value}],tabindex:"-1","aria-hidden":!0},[c(Cr),c("div",{class:"outlook-dropdown"},c(Sr))])):null}}),b2=F({name:"NavBar",emits:["toggleSidebar"],slots:Object,setup(n,{emit:s,slots:a}){const e=pn(),{isMobile:t}=Pe(),o=Y(!1),p=w(()=>{const{navbarAutoHide:d="mobile"}=e.value;return d!=="none"&&(d==="always"||t.value)}),i=w(()=>e.value.navbarLayout||{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),r={Brand:v2,Language:Kt,Links:k2,Repo:m2,Outlook:E2,Search:hs("Docsearch")?ns("Docsearch"):hs("SearchBox")?ns("SearchBox"):Kt},u=d=>r[d]??(hs(d)?ns(d):Kt);return()=>{var d,v,k,f,b,_;return[c("header",{id:"navbar",class:["vp-navbar",{"auto-hide":p.value,"hide-icon":e.value.navbarIcon===!1}]},[c("div",{class:"vp-navbar-start"},[c(h2,{onToggle:()=>{o.value&&(o.value=!1),s("toggleSidebar")}}),(d=a.startBefore)==null?void 0:d.call(a),(i.value.start||[]).map(B=>c(u(B))),(v=a.startAfter)==null?void 0:v.call(a)]),c("div",{class:"vp-navbar-center"},[(k=a.centerBefore)==null?void 0:k.call(a),(i.value.center||[]).map(B=>c(u(B))),(f=a.centerAfter)==null?void 0:f.call(a)]),c("div",{class:"vp-navbar-end"},[(b=a.endBefore)==null?void 0:b.call(a),(i.value.end||[]).map(B=>c(u(B))),(_=a.endAfter)==null?void 0:_.call(a),c(f2,{active:o.value,onToggle:()=>{o.value=!o.value}})])]),c(d2,{show:o.value,onClose:()=>{o.value=!1}},{before:()=>{var B;return(B=a.screenTop)==null?void 0:B.call(a)},after:()=>{var B;return(B=a.screenBottom)==null?void 0:B.call(a)}})]}}}),_2=F({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(n){const s=Bs();return()=>[Ar(n.config,{class:["vp-sidebar-link",`vp-sidebar-${n.config.type}`,{active:Fa(s,n.config,!0)}],exact:!0}),wr(n.config.children)]}}),g2=F({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(n,{emit:s}){const a=Bs(),e=w(()=>Fa(a,n.config)),t=w(()=>Fa(a,n.config,!0));return()=>{const{collapsible:o,children:p=[],icon:i,prefix:r,link:u,text:d}=n.config;return c("section",{class:"vp-sidebar-group"},[c(o?"button":"p",{class:["vp-sidebar-heading",{clickable:o||u,exact:t.value,active:e.value}],...o?{type:"button",onClick:()=>s("toggle"),onKeydown:v=>{v.key==="Enter"&&s("toggle")}}:{}},[c(qn,{icon:i}),u?c(Gn,{class:"vp-sidebar-title",config:{text:d,link:u},noExternalLinkIcon:!0}):c("span",{class:"vp-sidebar-title"},d),o?c("span",{class:["vp-arrow",n.open?"down":"end"]}):null]),n.open||!o?c(Mr,{key:r,config:p}):null])}}}),Mr=F({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(n){const s=Bs(),a=Y(-1),e=t=>{a.value=t===a.value?-1:t};return fn(()=>s.path,()=>{const t=n.config.findIndex(o=>yr(s,o));a.value=t},{immediate:!0,flush:"post"}),()=>c("ul",{class:"vp-sidebar-links"},n.config.map((t,o)=>c("li",t.type==="group"?c(g2,{config:t,open:o===a.value,onToggle:()=>e(o)}):c(_2,{config:t}))))}}),y2=F({name:"SideBar",slots:Object,setup(n,{slots:s}){const a=Bs(),e=pn(),t=kp(),o=Hn();return gn(()=>{fn(()=>a.hash,p=>{const i=document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${a.path}${p}"]`);if(!i)return;const{top:r,height:u}=o.value.getBoundingClientRect(),{top:d,height:v}=i.getBoundingClientRect();d<r?i.scrollIntoView(!0):d+v>r+u&&i.scrollIntoView(!1)},{immediate:!0})}),()=>{var p,i,r;return c("aside",{ref:o,id:"sidebar",class:["vp-sidebar",{"hide-icon":e.value.sidebarIcon===!1}]},[(p=s.top)==null?void 0:p.call(s),((i=s.default)==null?void 0:i.call(s))||c(Mr,{config:t.value}),(r=s.bottom)==null?void 0:r.call(s)])}}}),mp=F({name:"CommonWrapper",props:{containerClass:{type:String,default:""},noNavbar:Boolean,noSidebar:Boolean,noToc:Boolean},slots:Object,setup(n,{slots:s}){const a=Un(),e=cn(),t=yn(),o=pn(),{isMobile:p,isPC:i}=Pe(),[r,u]=Eo(!1),[d,v]=Eo(!1),k=kp(),f=Y(!1),b=w(()=>n.noNavbar||t.value.navbar===!1||o.value.navbar===!1?!1:!!(e.value.title||o.value.logo||o.value.repo||o.value.navbar)),_=w(()=>n.noSidebar?!1:t.value.sidebar!==!1&&k.value.length!==0&&!t.value.home),B=w(()=>n.noToc||t.value.home?!1:t.value.toc||o.value.toc!==!1&&t.value.toc!==!1),y={x:0,y:0},T=P=>{y.x=P.changedTouches[0].clientX,y.y=P.changedTouches[0].clientY},g=P=>{const j=P.changedTouches[0].clientX-y.x,L=P.changedTouches[0].clientY-y.y;Math.abs(j)>Math.abs(L)*1.5&&Math.abs(j)>40&&(j>0&&y.x<=80?u(!0):u(!1))},O=()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;let V=0;return Jn("scroll",l0(()=>{const P=O();P<=58||P<V?f.value=!1:V+200<P&&!r.value&&(f.value=!0),V=P},300,!0)),fn(p,P=>{P||u(!1)}),gn(()=>{const P=Xi(document.body);fn(r,L=>{P.value=L});const j=a.afterEach(()=>{u(!1)});Ae(()=>{P.value=!1,j()})}),()=>c(hs("GlobalEncrypt")?ns("GlobalEncrypt"):Ri,()=>c("div",{class:["theme-container",{"no-navbar":!b.value,"no-sidebar":!_.value&&!(s.sidebar||s.sidebarTop||s.sidebarBottom),"has-toc":B.value,"hide-navbar":f.value,"sidebar-collapsed":!p.value&&!i.value&&d.value,"sidebar-open":p.value&&r.value},n.containerClass,t.value.containerClass||""],onTouchStart:T,onTouchEnd:g},[b.value?c(b2,{onToggleSidebar:()=>u()},{startBefore:()=>{var P;return(P=s.navbarStartBefore)==null?void 0:P.call(s)},startAfter:()=>{var P;return(P=s.navbarStartAfter)==null?void 0:P.call(s)},centerBefore:()=>{var P;return(P=s.navbarCenterBefore)==null?void 0:P.call(s)},centerAfter:()=>{var P;return(P=s.navbarCenterAfter)==null?void 0:P.call(s)},endBefore:()=>{var P;return(P=s.navbarEndBefore)==null?void 0:P.call(s)},endAfter:()=>{var P;return(P=s.navbarEndAfter)==null?void 0:P.call(s)},screenTop:()=>{var P;return(P=s.navScreenTop)==null?void 0:P.call(s)},screenBottom:()=>{var P;return(P=s.navScreenBottom)==null?void 0:P.call(s)}}):null,c(Qs,{name:"fade"},()=>r.value?c("div",{class:"vp-sidebar-mask",onClick:()=>u(!1)}):null),c(Qs,{name:"fade"},()=>p.value?null:c("div",{class:"toggle-sidebar-wrapper",onClick:()=>v()},c("span",{class:["arrow",d.value?"end":"start"]}))),c(y2,{},{...s.sidebar?{default:()=>s.sidebar()}:{},top:()=>{var P;return(P=s.sidebarTop)==null?void 0:P.call(s)},bottom:()=>{var P;return(P=s.sidebarBottom)==null?void 0:P.call(s)}}),s.default(),c(e2)]))}}),kn=F({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},slots:Object,setup(n,{slots:s}){const a=t=>{t.style.transition=`transform ${n.duration}s ease-in-out ${n.delay}s, opacity ${n.duration}s ease-in-out ${n.delay}s`,t.style.transform="translateY(-20px)",t.style.opacity="0"},e=t=>{t.style.transform="translateY(0)",t.style.opacity="1"};return()=>c(n.type==="single"?Qs:Kv,{name:"drop",appear:n.appear,onAppear:a,onAfterAppear:e,onEnter:a,onAfterEnter:e,onBeforeLeave:a},()=>s.default())}});const yo=({custom:n})=>c(vi,{class:["theme-hope-content",{custom:n}]});yo.displayName="MarkdownContent",yo.props={custom:Boolean};var fp=yo;const $r=()=>c(rn,{name:"author"},()=>c("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));$r.displayName="AuthorIcon";const Nr=()=>c(rn,{name:"calendar"},()=>c("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));Nr.displayName="CalendarIcon";const zr=()=>c(rn,{name:"category"},()=>c("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));zr.displayName="CategoryIcon";const Hr=()=>c(rn,{name:"print"},()=>c("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));Hr.displayName="PrintIcon";const qr=()=>c(rn,{name:"tag"},()=>c("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));qr.displayName="TagIcon";const Ur=()=>c(rn,{name:"timer"},()=>c("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));Ur.displayName="TimerIcon";const Wr=()=>c(rn,{name:"word"},()=>[c("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),c("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);Wr.displayName="WordIcon";const Zs=()=>{const n=pn();return w(()=>n.value.metaLocales)};var A2=F({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0},pure:Boolean},setup(n){const s=Zs();return()=>n.author.length?c("span",{class:"page-author-info","aria-label":`${s.value.author}${n.pure?"":"🖊"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[c($r),c("span",n.author.map(a=>a.url?c("a",{class:"page-author-item",href:a.url,target:"_blank",rel:"noopener noreferrer"},a.name):c("span",{class:"page-author-item"},a.name))),c("span",{property:"author",content:n.author.map(a=>a.name).join(", ")})]):null}}),w2=F({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0},pure:Boolean},setup(n){const s=Un(),a=cn(),e=Zs(),t=(o,p="")=>{p&&a.value.path!==p&&(o.preventDefault(),s.push(p))};return()=>n.category.length?c("span",{class:"page-category-info","aria-label":`${e.value.category}${n.pure?"":"🌈"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[c(zr),n.category.map(({name:o,path:p})=>c("span",{class:["page-category-item",{[`category${gt(o,9)}`]:!n.pure,clickable:p}],role:p?"navigation":"",onClick:i=>t(i,p)},o)),c("meta",{property:"articleSection",content:n.category.map(({name:o})=>o).join(",")})]):null}}),B2=F({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""},pure:Boolean},setup(n){const s=ii(),a=Zs();return()=>n.date?c("span",{class:"page-date-info","aria-label":`${a.value.date}${n.pure?"":"📅"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[c(Nr),c("span",c(Et,()=>n.localizedDate||n.date.toLocaleDateString(s.value))),c("meta",{property:"datePublished",content:n.date.toISOString()||""})]):null}}),O2=F({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(n){const s=Zs();return()=>n.isOriginal?c("span",{class:"page-original-info"},s.value.origin):null}}),T2=F({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null},pure:Boolean},setup(n){const s=Zs(),a=w(()=>{if(!n.readingTime)return null;const{minutes:e}=n.readingTime;return e<1?"PT1M":`PT${Math.round(e)}M`});return()=>{var e,t;return(e=n.readingTimeLocale)!=null&&e.time?c("span",{class:"page-reading-time-info","aria-label":`${s.value.readingTime}${n.pure?"":"⌛"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[c(Ur),c("span",(t=n.readingTimeLocale)==null?void 0:t.time),c("meta",{property:"timeRequired",content:a.value})]):null}}}),D2=F({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]},pure:Boolean},setup(n){const s=Un(),a=cn(),e=Zs(),t=(o,p="")=>{p&&a.value.path!==p&&(o.preventDefault(),s.push(p))};return()=>n.tag.length?c("span",{class:"page-tag-info","aria-label":`${e.value.tag}${n.pure?"":"🏷"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[c(qr),n.tag.map(({name:o,path:p})=>c("span",{class:["page-tag-item",{[`tag${gt(o,9)}`]:!n.pure,clickable:p}],role:p?"navigation":"",onClick:i=>t(i,p)},o)),c("meta",{property:"keywords",content:n.tag.map(({name:o})=>o).join(",")})]):null}}),I2=F({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null},pure:Boolean},setup(n){const s=Zs();return()=>{var a,e,t;return(a=n.readingTimeLocale)!=null&&a.words?c("span",{class:"page-word-info","aria-label":`${s.value.words}${n.pure?"":"🔠"}`,...n.pure?{}:{"data-balloon-pos":"down"}},[c(Wr),c("span",(e=n.readingTimeLocale)==null?void 0:e.words),c("meta",{property:"wordCount",content:(t=n.readingTime)==null?void 0:t.words})]):null}}}),Gr=F({name:"PageInfo",components:{AuthorInfo:A2,CategoryInfo:w2,DateInfo:B2,OriginalInfo:O2,PageViewInfo:()=>null,ReadingTimeInfo:T2,TagInfo:D2,WordInfo:I2},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(n){const s=Ua();return()=>n.items?c("div",{class:"page-info"},n.items.map(a=>c(ns(`${a}Info`),{...n.info,pure:s.value}))):null}}),L2=F({name:"PrintButton",setup(){const n=Xs(),s=pn();return()=>n.value.print===!1?null:c("button",{type:"button",class:"print-button",title:s.value.metaLocales.print,onClick:()=>{window.print()}},c(Hr))}});const P2=({title:n,level:s,slug:a})=>c(Fn,{to:`#${a}`,class:["toc-link",`level${s}`]},()=>n),Ao=(n,s)=>{const a=Bs();return n.length&&s>0?c("ul",{class:"toc-list"},n.map(e=>{const t=Ao(e.children,s-1);return[c("li",{class:["toc-item",{active:pp(a,`#${e.slug}`)}]},P2(e)),t?c("li",t):null]})):null};var Kr=F({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},slots:Object,setup(n,{slots:s}){const a=Bs(),e=cn(),t=Zs(),o=Hn(),p=Y("-1.7rem"),i=u=>{var d;(d=o.value)==null||d.scrollTo({top:u,behavior:"smooth"})},r=()=>{if(o.value){const u=document.querySelector(".toc-item.active");u?p.value=`${u.getBoundingClientRect().top-o.value.getBoundingClientRect().top+o.value.scrollTop}px`:p.value="-1.7rem"}else p.value="-1.7rem"};return gn(()=>{fn(()=>a.hash,u=>{if(o.value){const d=document.querySelector(`#toc a.toc-link[href$="${u}"]`);if(!d)return;const{top:v,height:k}=o.value.getBoundingClientRect(),{top:f,height:b}=d.getBoundingClientRect();f<v?i(o.value.scrollTop+f-v):f+b>v+k&&i(o.value.scrollTop+f+b-v-k)}}),fn(()=>a.fullPath,r,{flush:"post",immediate:!0})}),()=>{var d,v;const u=n.items.length?Ao(n.items,n.headerDepth):e.value.headers?Ao(e.value.headers,n.headerDepth):null;return u?c("div",{class:"toc-place-holder"},[c("aside",{id:"toc"},[(d=s.before)==null?void 0:d.call(s),c("div",{class:"toc-header"},[t.value.toc,c(L2)]),c("div",{class:"toc-wrapper",ref:o},[u,c("div",{class:"toc-marker",style:{top:p.value}})]),(v=s.after)==null?void 0:v.call(s)])]):null}}}),hp=F({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(n){const s=cn(),a=pn(),e=Hn(),t=({target:o})=>{const p=document.querySelector(o.hash);if(p){const i=()=>{p.removeAttribute("tabindex"),p.removeEventListener("blur",i)};p.setAttribute("tabindex","-1"),p.addEventListener("blur",i),p.focus(),window.scrollTo(0,0)}};return gn(()=>{fn(()=>s.value.path,()=>e.value.focus())}),()=>[c("span",{ref:e,tabindex:"-1"}),c("a",{href:`#${n.content}`,class:"vp-skip-link sr-only",onClick:t},a.value.routeLocales.skipToContent)]}});let Qt=null,Ja=null;const R2={wait:()=>Qt,pending:()=>{Qt=new Promise(n=>Ja=n)},resolve:()=>{Ja==null||Ja(),Qt=null,Ja=null}},Jr=()=>R2;var Yr=F({name:"FadeSlideY",slots:Object,setup(n,{slots:s}){const{resolve:a,pending:e}=Jr();return()=>c(Qs,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:a,onBeforeLeave:e},()=>{var t;return(t=s.default)==null?void 0:t.call(s)})}});const x2=(n,s)=>{const a=n.replace(s,"/").split("/"),e=[];let t=Zo(s);return a.forEach((o,p)=>{p!==a.length-1?(t+=`${o}/`,e.push({link:t,name:o||"Home"})):o!==""&&(t+=o,e.push({link:t,name:o}))}),e},Qr=(n,{slots:s})=>{var v,k;const{bgImage:a,bgImageDark:e,bgImageStyle:t,color:o,description:p,image:i,imageDark:r,header:u,features:d=[]}=n;return c("div",{class:"vp-feature-wrapper"},[a?c("div",{class:["vp-feature-bg",{light:e}],style:[{"background-image":`url(${a})`},t]}):null,e?c("div",{class:"vp-feature-bg dark",style:[{"background-image":`url(${e})`},t]}):null,c("div",{class:"vp-feature",style:o?{color:o}:{}},[((v=s.image)==null?void 0:v.call(s,n))||[i?c("img",{class:["vp-feature-image",{light:r}],src:Tn(i),alt:u}):null,r?c("img",{class:"vp-feature-image dark",src:Tn(r),alt:u}):null],((k=s.info)==null?void 0:k.call(s,n))||[u?c("h2",{class:"vp-feature-header"},u):null,p?c("p",{class:"vp-feature-description",innerHTML:p}):null],d.length?c("div",{class:"vp-features"},d.map(({icon:f,title:b,details:_,link:B})=>{const y=[c("h3",{class:"vp-feature-title"},[c(qn,{icon:f}),c("span",{innerHTML:b})]),c("p",{class:"vp-feature-details",innerHTML:_})];return B?ve(B)?c("a",{class:"vp-feature-item link",href:B,role:"navigation","aria-label":b,target:"_blank"},y):c(Fn,{class:"vp-feature-item link",to:B,role:"navigation","aria-label":b},()=>y):c("div",{class:"vp-feature-item"},y)})):null])])};Qr.displayName="FeaturePanel";var qc=Qr,C2=F({name:"HeroInfo",slots:Object,setup(n,{slots:s}){const a=yn(),e=Be(),t=w(()=>a.value.heroFullScreen??!1),o=w(()=>{const{heroText:u,tagline:d}=a.value;return{text:u??e.value.title??"Hello",tagline:d??e.value.description??"",isFullScreen:t.value}}),p=w(()=>{const{heroText:u,heroImage:d,heroImageDark:v,heroAlt:k,heroImageStyle:f}=a.value;return{image:d?Tn(d):null,imageDark:v?Tn(v):null,heroStyle:f,alt:k||u||"hero image",isFullScreen:t.value}}),i=w(()=>{const{bgImage:u,bgImageDark:d,bgImageStyle:v}=a.value;return{image:xs(u)?Tn(u):null,imageDark:xs(d)?Tn(d):null,bgStyle:v,isFullScreen:t.value}}),r=w(()=>a.value.actions??[]);return()=>{var u,d,v;return c("header",{class:["vp-hero-info-wrapper",{fullscreen:t.value}]},[((u=s.heroBg)==null?void 0:u.call(s,i.value))||[i.value.image?c("div",{class:["vp-hero-mask",{light:i.value.imageDark}],style:[{"background-image":`url(${i.value.image})`},i.value.bgStyle]}):null,i.value.imageDark?c("div",{class:"vp-hero-mask dark",style:[{"background-image":`url(${i.value.imageDark})`},i.value.bgStyle]}):null],c("div",{class:"vp-hero-info"},[((d=s.heroImage)==null?void 0:d.call(s,p.value))||c(kn,{appear:!0,type:"group"},()=>[p.value.image?c("img",{key:"light",class:["vp-hero-image",{light:p.value.imageDark}],style:p.value.heroStyle,src:p.value.image,alt:p.value.alt}):null,p.value.imageDark?c("img",{key:"dark",class:"vp-hero-image dark",style:p.value.heroStyle,src:p.value.imageDark,alt:p.value.alt}):null]),((v=s.heroInfo)==null?void 0:v.call(s,o.value))??c("div",{class:"vp-hero-infos"},[o.value.text?c(kn,{appear:!0,delay:.04},()=>c("h1",{id:"main-title"},o.value.text)):null,o.value.tagline?c(kn,{appear:!0,delay:.08},()=>c("p",{class:"vp-description",innerHTML:o.value.tagline})):null,r.value.length?c(kn,{appear:!0,delay:.12},()=>c("p",{class:"vp-actions"},r.value.map(k=>c(Gn,{class:["vp-action",k.type||"default"],config:k,noExternalLinkIcon:!0})))):null])])])}}});const Xr=(n,{slots:s})=>{var k,f,b;const{bgImage:a,bgImageDark:e,bgImageStyle:t,color:o,description:p,image:i,imageDark:r,header:u,highlights:d=[],type:v="un-order"}=n;return c("div",{class:"vp-highlight-wrapper",style:o?{color:o}:{}},[a?c("div",{class:["vp-highlight-bg",{light:e}],style:[{"background-image":`url(${a})`},t]}):null,e?c("div",{class:"vp-highlight-bg dark",style:[{"background-image":`url(${e})`},t]}):null,c("div",{class:"vp-highlight"},[((k=s.image)==null?void 0:k.call(s,n))||[i?c("img",{class:["vp-highlight-image",{light:r}],src:Tn(i),alt:u}):null,r?c("img",{class:"vp-highlight-image dark",src:Tn(r),alt:u}):null],((f=s.info)==null?void 0:f.call(s,n))||[c("div",{class:"vp-highlight-info-wrapper"},c("div",{class:"vp-highlight-info"},[u?c("h2",{class:"vp-highlight-header",innerHTML:u}):null,p?c("p",{class:"vp-highlight-description",innerHTML:p}):null,((b=s.highlights)==null?void 0:b.call(s,d))||c(v==="order"?"ol":v==="no-order"?"dl":"ul",{class:"vp-highlights"},d.map(({icon:_,title:B,details:y,link:T})=>{const g=[c(v==="no-order"?"dt":"h3",{class:"vp-highlight-title"},[_?c(qn,{class:"vp-highlight-icon",icon:_}):null,c("span",{innerHTML:B})]),y?c(v==="no-order"?"dd":"p",{class:"vp-highlight-details",innerHTML:y}):null];return c(v==="no-order"?"div":"li",{class:["vp-highlight-item-wrapper",{link:T}]},T?Um(T)?c("a",{class:"vp-highlight-item link",href:T,role:"navigation","aria-label":B,target:"_blank"},g):c(Fn,{class:"vp-highlight-item link",to:T,role:"navigation","aria-label":B},()=>g):c("div",{class:"vp-highlight-item"},g))}))]))]])])};Xr.displayName="HighlightPanel";var V2=Xr,j2=F({name:"HomePage",slots:Object,setup(n,{slots:s}){const a=Ua(),e=yn(),t=w(()=>{const{features:p}=e.value;return Z(p)?p:null}),o=w(()=>{const{highlights:p}=e.value;return Z(p)?p:null});return()=>{var p,i,r,u;return c("main",{id:"main-content",class:["vp-project-home ",{pure:a.value}],"aria-labelledby":e.value.heroText===null?"":"main-title"},[(p=s.top)==null?void 0:p.call(s),c(C2),((i=o.value)==null?void 0:i.map(d=>"features"in d?c(qc,d):c(V2,d)))||(t.value?c(kn,{appear:!0,delay:.24},()=>c(qc,{features:t.value})):null),(r=s.center)==null?void 0:r.call(s),c(kn,{appear:!0,delay:.32},()=>c(fp)),(u=s.bottom)==null?void 0:u.call(s)])}}}),S2=F({name:"BreadCrumb",setup(){const n=Un(),s=cn(),a=js(),e=yn(),t=pn(),o=Hn([]),p=w(()=>(e.value.breadcrumb||e.value.breadcrumb!==!1&&t.value.breadcrumb!==!1)&&o.value.length>1),i=w(()=>e.value.breadcrumbIcon||e.value.breadcrumbIcon!==!1&&t.value.breadcrumbIcon!==!1),r=()=>{const u=n.getRoutes(),d=x2(s.value.path,a.value).map(({link:v,name:k})=>{const f=u.find(b=>b.path===v);if(f){const{meta:b,path:_}=Sa(n,f.path);return{title:b[_n.shortTitle]||b[_n.title]||k,icon:b[_n.icon],path:_}}return null}).filter(v=>v!==null);d.length>1&&(o.value=d)};return gn(()=>{fn(()=>s.value.path,r,{immediate:!0})}),()=>c("nav",{class:["vp-breadcrumb",{disable:!p.value}]},p.value?c("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},o.value.map((u,d)=>c("li",{class:{"is-active":o.value.length-1===d},property:"itemListElement",typeof:"ListItem"},[c(Fn,{to:u.path,property:"item",typeof:"WebPage"},()=>[i.value?c(qn,{icon:u.icon}):null,c("span",{property:"name"},u.title||"Unknown")]),c("meta",{property:"position",content:d+1})]))):[])}});const Uc=n=>{const s=Un();return n===!1?!1:mn(n)?Ta(s,n,!0):we(n)?n:null},wo=(n,s,a)=>{const e=n.findIndex(t=>t.link===s);if(e!==-1){const t=n[e+a];return t!=null&&t.link?t:null}for(const t of n)if(t.children){const o=wo(t.children,s,a);if(o)return o}return null};var F2=F({name:"PageNav",setup(){const n=pn(),s=yn(),a=kp(),e=cn(),t=Le(),o=w(()=>{const i=Uc(s.value.prev);return i===!1?null:i||(n.value.prevLink===!1?null:wo(a.value,e.value.path,-1))}),p=w(()=>{const i=Uc(s.value.next);return i===!1?null:i||(n.value.nextLink===!1?null:wo(a.value,e.value.path,1))});return Jn("keydown",i=>{i.altKey&&(i.key==="ArrowRight"?p.value&&(t(p.value.link),i.preventDefault()):i.key==="ArrowLeft"&&o.value&&(t(o.value.link),i.preventDefault()))}),()=>o.value||p.value?c("nav",{class:"vp-page-nav"},[o.value?c(Gn,{class:"prev",config:o.value},()=>{var i,r;return[c("div",{class:"hint"},[c("span",{class:"arrow start"}),n.value.metaLocales.prev]),c("div",{class:"link"},[c(qn,{icon:(i=o.value)==null?void 0:i.icon}),(r=o.value)==null?void 0:r.text])]}):null,p.value?c(Gn,{class:"next",config:p.value},()=>{var i,r;return[c("div",{class:"hint"},[n.value.metaLocales.next,c("span",{class:"arrow end"})]),c("div",{class:"link"},[(i=p.value)==null?void 0:i.text,c(qn,{icon:(r=p.value)==null?void 0:r.icon})])]}):null]):null}});const M2={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},$2=({docsRepo:n,docsBranch:s,docsDir:a,filePathRelative:e,editLinkPattern:t})=>{if(!e)return null;const o=$i(n);let p;return t?p=t:o!==null&&(p=M2[o]),p?p.replace(/:repo/,da(n)?n:`https://github.com/${n}`).replace(/:branch/,s).replace(/:path/,ei(`${Zo(a)}/${e}`)):null},N2=()=>{const n=pn(),s=cn(),a=yn();return w(()=>{const{repo:e,docsRepo:t=e,docsBranch:o="main",docsDir:p="",editLink:i,editLinkPattern:r=""}=n.value;if(!(a.value.editLink??i??!0)||!t)return null;const u=$2({docsRepo:t,docsBranch:o,docsDir:p,editLinkPattern:r,filePathRelative:s.value.filePathRelative});return u?{text:n.value.metaLocales.editLink,link:u}:null})},z2=()=>{const n=Be(),s=pn(),a=cn(),e=yn();return w(()=>{var t,o;return!(e.value.lastUpdated??s.value.lastUpdated??!0)||!((t=a.value.git)!=null&&t.updatedTime)?null:new Date((o=a.value.git)==null?void 0:o.updatedTime).toLocaleString(n.value.lang)})},H2=()=>{const n=pn(),s=cn(),a=yn();return w(()=>{var e;return a.value.contributors??n.value.contributors??!0?((e=s.value.git)==null?void 0:e.contributors)??null:null})};var q2=F({name:"PageTitle",setup(){const n=cn(),s=yn(),a=pn(),{info:e,items:t}=K1();return()=>c("div",{class:"vp-page-title"},[c("h1",[a.value.titleIcon===!1?null:c(qn,{icon:s.value.icon}),n.value.title]),c(Gr,{info:e.value,...t.value===null?{}:{items:t.value}}),c("hr")])}});const Zr=()=>c(rn,{name:"edit"},()=>[c("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),c("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);Zr.displayName="EditIcon";var U2=F({name:"PageMeta",setup(){const n=pn(),s=N2(),a=z2(),e=H2();return()=>{const{metaLocales:t}=n.value;return c("footer",{class:"page-meta"},[s.value?c("div",{class:"meta-item edit-link"},c(Gn,{class:"label",config:s.value},{before:()=>c(Zr)})):null,c("div",{class:"meta-item git-info"},[a.value?c("div",{class:"update-time"},[c("span",{class:"label"},`${t.lastUpdated}: `),c(Et,()=>c("span",{class:"info"},a.value))]):null,e.value&&e.value.length?c("div",{class:"contributors"},[c("span",{class:"label"},`${t.contributors}: `),e.value.map(({email:o,name:p},i)=>[c("span",{class:"contributor",title:`email: ${o}`},p),i!==e.value.length-1?",":""])]):null])])}}}),W2=F({name:"NormalPage",slots:Object,setup(n,{slots:s}){const a=yn(),e=cn(),{isDarkmode:t}=Re(),o=pn(),p=w(()=>a.value.toc||a.value.toc!==!1&&o.value.toc!==!1);return()=>c("main",{id:"main-content",class:"vp-page"},c(hs("LocalEncrypt")?ns("LocalEncrypt"):Ri,()=>{var i,r,u,d;return[(i=s.top)==null?void 0:i.call(s),a.value.cover?c("img",{class:"page-cover",src:Tn(a.value.cover),alt:e.value.title,"no-view":""}):null,c(S2),c(q2),p.value?c(Kr,{headerDepth:a.value.headerDepth??o.value.headerDepth??2},{before:()=>{var v;return(v=s.tocBefore)==null?void 0:v.call(s)},after:()=>{var v;return(v=s.tocAfter)==null?void 0:v.call(s)}}):null,(r=s.contentBefore)==null?void 0:r.call(s),c(fp),(u=s.contentAfter)==null?void 0:u.call(s),c(U2),c(F2),hs("CommentService")?c(ns("CommentService"),{darkmode:t.value}):null,(d=s.bottom)==null?void 0:d.call(s)]}))}}),G2=F({name:"Layout",setup(){const n=Xs(),s=pn(),a=cn(),e=yn(),{isMobile:t}=Pe(),o=w(()=>{var p,i;return((p=s.value.blog)==null?void 0:p.sidebarDisplay)||((i=n.value.blog)==null?void 0:i.sidebarDisplay)||"mobile"});return()=>[c(hp),c(mp,{},{default:()=>e.value.home?c(j2):c(Yr,()=>c(W2,{key:a.value.path})),...o.value!=="none"?{navScreenBottom:()=>c(ns("BloggerInfo"))}:{},...!t.value&&o.value==="always"?{sidebar:()=>c(ns("BloggerInfo"))}:{}})]}}),K2=F({name:"NotFoundHint",setup(){const n=pn(),s=()=>{const a=n.value.routeLocales.notFoundMsg;return a[Math.floor(Math.random()*a.length)]};return()=>c("div",{class:"not-found-hint"},[c("p",{class:"error-code"},"404"),c("h1",{class:"error-title"},n.value.routeLocales.notFoundTitle),c("p",{class:"error-hint"},s())])}}),J2=F({name:"NotFound",slots:Object,setup(n,{slots:s}){const a=js(),e=pn(),{navigate:t}=mo({to:e.value.home??a.value});return()=>[c(hp),c(mp,{noSidebar:!0},()=>{var o;return c("main",{id:"main-content",class:"vp-page not-found"},((o=s.default)==null?void 0:o.call(s))||[c(K2),c("div",{class:"actions"},[c("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},e.value.routeLocales.back),c("button",{type:"button",class:"action-button",onClick:()=>t()},e.value.routeLocales.home)])])})]}});const Y2={},Q2={category:{"/":{path:"/category/",map:{樱桃:{path:"/category/%E6%A8%B1%E6%A1%83/",keys:["v-64bbdf77","v-2bc6566a"]},火龙果:{path:"/category/%E7%81%AB%E9%BE%99%E6%9E%9C/",keys:["v-a91ef53e","v-24b7c48d","v-4526f0a1","v-c80a2912"]},水果:{path:"/category/%E6%B0%B4%E6%9E%9C/",keys:["v-310bb201","v-f0ec4556","v-a91ef53e","v-24b7c48d","v-4526f0a1","v-c80a2912","v-7bbc18fc","v-7a07405d","v-46199bc3","v-6cd750ef","v-4464c324","v-6b227850"]},使用指南:{path:"/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",keys:["v-37027a41","v-6f659f6a","v-7d815238","v-711a7809","v-72cf50a8","v-74842947","v-763901e6","v-77edda85","v-79a2b324","v-7b578bc3","v-7d0c6462","v-125607ee","v-7b68941e","v-77fee2e0","v-749531a2","v-f16353a6","v-edf9a268","v-ea8ff12a","v-49f030b2","v-7e8fa17c"]},草莓:{path:"/category/%E8%8D%89%E8%8E%93/",keys:["v-310bb201","v-f0ec4556"]},蔬菜:{path:"/category/%E8%94%AC%E8%8F%9C/",keys:["v-0ad953a6","v-df8b6e0c"]},knowledge:{path:"/category/knowledge/",keys:["v-71275d66"]},前端工程化:{path:"/category/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/",keys:["v-39d0d2b8"]},苹果:{path:"/category/%E8%8B%B9%E6%9E%9C/",keys:["v-46199bc3","v-6cd750ef","v-4464c324","v-6b227850","v-42afea85","v-696d9fb1","v-40fb11e6","v-67b8c712"]},香蕉:{path:"/category/%E9%A6%99%E8%95%89/",keys:["v-7f25ca3a","v-7d70f19b","v-7bbc18fc","v-7a07405d"]},vue:{path:"/category/vue/",keys:["v-37027a41","v-7d815238","v-574a5511","v-58ff2db0","v-bc9d1daa","v-b9336c6c","v-b5c9bb2e","v-106a3a50","v-0d008912"]},面试:{path:"/category/%E9%9D%A2%E8%AF%95/",keys:["v-5406f64e","v-2ab43128","v-ad785c40","v-1d38721f","v-99db8cbe","v-58cd5109","v-dc280cae","v-632c4f45","v-02909dbd","v-0445765c","v-0966a248","v-0a3c8135","v-64e127e4","v-66960083","v-684ad922","v-69ffb1c1","v-6bb48a60","v-6d6962ff","v-6f1e3b9e","v-70d3143d","v-9fc14a42","v-1ff2a25a"]},JS:{path:"/category/js/",keys:["v-ad785c40","v-99db8cbe","v-58cd5109","v-dc280cae","v-02909dbd","v-0445765c","v-0966a248","v-0a3c8135","v-9fc14a42"]},ES6:{path:"/category/es6/",keys:["v-69ffb1c1","v-6bb48a60","v-6d6962ff","v-6f1e3b9e","v-70d3143d"]},算法题:{path:"/category/%E7%AE%97%E6%B3%95%E9%A2%98/",keys:["v-2ecfd7dd","v-73677efc","v-00160158","v-6e12230b","v-cf2c548a","v-8ca3767e","v-403116f1","v-5045411e","v-aa06dbaa","v-7b1ed234","v-69864716","v-df10df86","v-7e0a98e5","v-21abeb46","v-4638a3e0","v-719f1a9a","v-dfe87174","v-5f32be14","v-0379f704","v-7ed1c45a","v-932477d0","v-288877bb","v-46748d9e","v-2cc8ee1c","v-50f12e0f","v-0628f8e5","v-56c8aa60","v-fa74dda6","v-b65ee6b0","v-16501f32","v-dcdfae1c","v-0f45c563","v-1dab3ea5","v-44e376c3","v-e539ee52","v-e2d0832c","v-34e8f89f","v-8397c7ba","v-5b191d69","v-fff2f994","v-03b4e419","v-68dcdd74","v-2d7e1f72","v-584dbbd6","v-96a60dc4","v-4caf0226","v-233112dd","v-fc80572c","v-fac0c946","v-5d219e5e","v-5ca9edb1","v-5e5ec650","v-60139eef","v-637d502d","v-653228cc","v-66e7016b","v-689bda0a","v-6a50b2a9","v-6c058b48","v-59b7ed20","v-52e48aa4","v-4c112828","v-48a776ea","v-453dc5ac","v-41d4146e","v-33d42f60","v-7dc3d3f0","v-fc7add4c","v-489511d9","v-424b3d0c","v-5a00a0ba","v-52958ce9","v-378ce1f4","v-56b058f0","v-0eddbe7e","v-859b3a82","v-d3a08f6c","v-ec9ac944","v-5d10c97c","v-08f6c07e","v-206085fe","v-b9ff64c0","v-02d61b3f","v-1e766ba0","v-22254b81","v-9d5ecbc8","v-4e8c5dc9","v-5fb1723e","v-bdcbf37c","v-6ef24e90","v-6b889d52","v-681eec14","v-64b53ad6","v-614b8998","v-5de1d85a","v-712bf818","v-6dc246da","v-6a58959c","v-66eee45e","v-e8a39f90","v-c75feb94","v-c3f63a56","v-c08c8918","v-bd22d7da","v-b9b9269c","v-b64f755e","v-0c868226","v-3d8de10b","v-d635ed6e","v-23025503","v-4d5da57f","v-fd1b3d04","v-0bec1b39","v-4d898dff","v-669ec558","v-716a55b2","v-74421e60","v-4aea66c2","v-29058be8","v-48d24a5e","v-75f222a2","v-00b8db69","v-04228ca7","v-078c3de5","v-09411684","v-80b1f816","v-7d4846d8","v-79de959a","v-7674e45c","v-730b331e","v-6fa181e0","v-6c37d0a2","v-52707f20","v-4f06cde2","v-48336b66","v-f2e0b34a","v-ef77020c"]},二叉树:{path:"/category/%E4%BA%8C%E5%8F%89%E6%A0%91/",keys:["v-2ecfd7dd","v-73677efc","v-719f1a9a","v-dfe87174","v-5f32be14","v-0379f704","v-dcdfae1c","v-5d219e5e","v-5ca9edb1","v-5e5ec650","v-60139eef","v-637d502d","v-653228cc","v-66e7016b","v-689bda0a","v-6a50b2a9","v-6c058b48","v-59b7ed20","v-52e48aa4","v-4c112828","v-48a776ea","v-453dc5ac","v-41d4146e"]},二叉搜索树:{path:"/category/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/",keys:["v-df10df86"]},位运算:{path:"/category/%E4%BD%8D%E8%BF%90%E7%AE%97/",keys:["v-0628f8e5"]},前缀和:{path:"/category/%E5%89%8D%E7%BC%80%E5%92%8C/",keys:["v-46748d9e"]},动态规划:{path:"/category/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",keys:["v-932477d0","v-4caf0226","v-233112dd","v-fc80572c","v-fac0c946","v-33d42f60","v-7dc3d3f0","v-fc7add4c","v-489511d9","v-424b3d0c","v-5a00a0ba","v-52958ce9","v-378ce1f4","v-56b058f0","v-0eddbe7e","v-859b3a82","v-d3a08f6c","v-ec9ac944","v-5d10c97c","v-08f6c07e","v-206085fe","v-b9ff64c0","v-02d61b3f","v-1e766ba0","v-22254b81","v-9d5ecbc8","v-4e8c5dc9","v-5fb1723e","v-bdcbf37c"]},背包问题:{path:"/category/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/",keys:["v-932477d0"]},单调栈:{path:"/category/%E5%8D%95%E8%B0%83%E6%A0%88/",keys:["v-0f45c563","v-1dab3ea5","v-44e376c3"]},链表:{path:"/category/%E9%93%BE%E8%A1%A8/",keys:["v-6e12230b","v-cf2c548a","v-8ca3767e","v-403116f1","v-5045411e","v-aa06dbaa","v-7b1ed234","v-7e0a98e5","v-16501f32","v-96a60dc4","v-6ef24e90","v-6b889d52","v-681eec14","v-64b53ad6","v-614b8998","v-5de1d85a","v-00b8db69","v-04228ca7","v-078c3de5","v-09411684"]},字符串:{path:"/category/%E5%AD%97%E7%AC%A6%E4%B8%B2/",keys:["v-00160158","v-34e8f89f","v-8397c7ba","v-5b191d69","v-fff2f994","v-03b4e419","v-712bf818","v-6dc246da","v-6a58959c","v-66eee45e"]},拓扑排序:{path:"/category/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/",keys:["v-56c8aa60"]},排序:{path:"/category/%E6%8E%92%E5%BA%8F/",keys:["v-50f12e0f","v-fa74dda6"]},数组:{path:"/category/%E6%95%B0%E7%BB%84/",keys:["v-2cc8ee1c","v-68dcdd74","v-2d7e1f72","v-584dbbd6","v-f2e0b34a"]},栈与队列:{path:"/category/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/",keys:["v-c75feb94","v-c3f63a56","v-c08c8918","v-bd22d7da"]},栈:{path:"/category/%E6%A0%88/",keys:["v-b65ee6b0","v-5b191d69"]},DFS:{path:"/category/dfs/",keys:["v-288877bb"]},贪心算法:{path:"/category/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/",keys:["v-0c868226","v-3d8de10b","v-d635ed6e","v-23025503","v-4d5da57f","v-fd1b3d04","v-0bec1b39","v-4d898dff","v-669ec558","v-716a55b2","v-74421e60","v-4aea66c2","v-29058be8","v-48d24a5e","v-75f222a2"]},递归:{path:"/category/%E9%80%92%E5%BD%92/",keys:["v-21abeb46","v-03b4e419"]},双向链表:{path:"/category/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/",keys:["v-4638a3e0"]},数组方法:{path:"/category/%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/",keys:["v-5406f64e"]},组合:{path:"/category/%E7%BB%84%E5%90%88/",keys:["v-80b1f816","v-7d4846d8","v-79de959a","v-7674e45c","v-730b331e","v-6fa181e0","v-6c37d0a2"]},回溯:{path:"/category/%E5%9B%9E%E6%BA%AF/",keys:["v-e2d0832c","v-80b1f816","v-7d4846d8","v-79de959a","v-7674e45c","v-730b331e","v-6fa181e0","v-6c37d0a2","v-52707f20","v-4f06cde2","v-48336b66"]},排列:{path:"/category/%E6%8E%92%E5%88%97/",keys:["v-52707f20","v-4f06cde2","v-48336b66"]},中心扩散法:{path:"/category/%E4%B8%AD%E5%BF%83%E6%89%A9%E6%95%A3%E6%B3%95/",keys:["v-00160158","v-34e8f89f"]},滑动窗口:{path:"/category/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/",keys:["v-69864716","v-fff2f994"]},二分:{path:"/category/%E4%BA%8C%E5%88%86/",keys:["v-2cc8ee1c","v-584dbbd6"]},二分查找:{path:"/category/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/",keys:["v-7ed1c45a"]},归并:{path:"/category/%E5%BD%92%E5%B9%B6/",keys:["v-16501f32"]},组件:{path:"/category/%E7%BB%84%E4%BB%B6/",keys:["v-574a5511","v-58ff2db0","v-bc9d1daa","v-b9336c6c","v-b5c9bb2e","v-106a3a50","v-0d008912"]}}}},tag:{"/":{path:"/tag/",map:{红:{path:"/tag/%E7%BA%A2/",keys:["v-0ad953a6","v-df8b6e0c","v-310bb201","v-f0ec4556","v-a91ef53e","v-24b7c48d","v-4526f0a1","v-c80a2912","v-64bbdf77","v-2bc6566a","v-46199bc3","v-6cd750ef","v-4464c324","v-6b227850","v-42afea85","v-696d9fb1","v-40fb11e6","v-67b8c712"]},小:{path:"/tag/%E5%B0%8F/",keys:["v-310bb201","v-f0ec4556","v-64bbdf77","v-2bc6566a"]},圆:{path:"/tag/%E5%9C%86/",keys:["v-0ad953a6","v-df8b6e0c","v-64bbdf77","v-2bc6566a","v-46199bc3","v-6cd750ef","v-4464c324","v-6b227850","v-42afea85","v-696d9fb1","v-40fb11e6","v-67b8c712"]},大:{path:"/tag/%E5%A4%A7/",keys:["v-a91ef53e","v-24b7c48d","v-4526f0a1","v-c80a2912","v-46199bc3","v-6cd750ef","v-4464c324","v-6b227850","v-42afea85","v-696d9fb1","v-40fb11e6","v-67b8c712"]},黄:{path:"/tag/%E9%BB%84/",keys:["v-7f25ca3a","v-7d70f19b","v-7bbc18fc","v-7a07405d"]},弯曲的:{path:"/tag/%E5%BC%AF%E6%9B%B2%E7%9A%84/",keys:["v-7f25ca3a","v-7d70f19b","v-7bbc18fc","v-7a07405d"]},长:{path:"/tag/%E9%95%BF/",keys:["v-7f25ca3a","v-7d70f19b","v-7bbc18fc","v-7a07405d"]}}}}},X2={article:{"/":{path:"/article/",keys:["v-0ad953a6","v-df8b6e0c","v-2ecfd7dd","v-73677efc","v-00160158","v-6e12230b","v-cf2c548a","v-8ca3767e","v-403116f1","v-5045411e","v-aa06dbaa","v-7b1ed234","v-5406f64e","v-2ab43128","v-69864716","v-df10df86","v-7e0a98e5","v-21abeb46","v-4638a3e0","v-719f1a9a","v-dfe87174","v-5f32be14","v-0379f704","v-7ed1c45a","v-932477d0","v-288877bb","v-ad785c40","v-46748d9e","v-37027a41","v-2cc8ee1c","v-1d38721f","v-50f12e0f","v-99db8cbe","v-58cd5109","v-dc280cae","v-0628f8e5","v-56c8aa60","v-fa74dda6","v-b65ee6b0","v-16501f32","v-39d0d2b8","v-dcdfae1c","v-0f45c563","v-1dab3ea5","v-44e376c3","v-e539ee52","v-e2d0832c","v-34e8f89f","v-8397c7ba","v-5b191d69","v-fff2f994","v-03b4e419","v-68dcdd74","v-2d7e1f72","v-584dbbd6","v-96a60dc4","v-4caf0226","v-233112dd","v-fc80572c","v-fac0c946","v-71275d66","v-6f659f6a","v-7d815238","v-711a7809","v-72cf50a8","v-74842947","v-763901e6","v-77edda85","v-79a2b324","v-7b578bc3","v-7d0c6462","v-125607ee","v-632c4f45","v-02909dbd","v-0445765c","v-0966a248","v-0a3c8135","v-64e127e4","v-66960083","v-684ad922","v-69ffb1c1","v-6bb48a60","v-6d6962ff","v-6f1e3b9e","v-70d3143d","v-9fc14a42","v-1ff2a25a","v-5d219e5e","v-5ca9edb1","v-5e5ec650","v-60139eef","v-637d502d","v-653228cc","v-66e7016b","v-689bda0a","v-6a50b2a9","v-6c058b48","v-59b7ed20","v-52e48aa4","v-4c112828","v-48a776ea","v-453dc5ac","v-41d4146e","v-33d42f60","v-7dc3d3f0","v-fc7add4c","v-489511d9","v-424b3d0c","v-5a00a0ba","v-52958ce9","v-378ce1f4","v-56b058f0","v-0eddbe7e","v-859b3a82","v-d3a08f6c","v-ec9ac944","v-5d10c97c","v-08f6c07e","v-206085fe","v-b9ff64c0","v-02d61b3f","v-1e766ba0","v-22254b81","v-9d5ecbc8","v-4e8c5dc9","v-5fb1723e","v-bdcbf37c","v-6ef24e90","v-6b889d52","v-681eec14","v-64b53ad6","v-614b8998","v-5de1d85a","v-712bf818","v-6dc246da","v-6a58959c","v-66eee45e","v-e8a39f90","v-c75feb94","v-c3f63a56","v-c08c8918","v-bd22d7da","v-b9b9269c","v-b64f755e","v-0c868226","v-3d8de10b","v-d635ed6e","v-23025503","v-4d5da57f","v-fd1b3d04","v-0bec1b39","v-4d898dff","v-669ec558","v-716a55b2","v-74421e60","v-4aea66c2","v-29058be8","v-48d24a5e","v-75f222a2","v-00b8db69","v-04228ca7","v-078c3de5","v-09411684","v-7b68941e","v-77fee2e0","v-749531a2","v-f16353a6","v-edf9a268","v-ea8ff12a","v-80b1f816","v-7d4846d8","v-79de959a","v-7674e45c","v-730b331e","v-6fa181e0","v-6c37d0a2","v-52707f20","v-4f06cde2","v-48336b66","v-574a5511","v-58ff2db0","v-bc9d1daa","v-b9336c6c","v-b5c9bb2e","v-106a3a50","v-0d008912","v-184f4da6","v-2e3eac9e","v-e02a086e","v-49f030b2","v-7e8fa17c","v-e1e3da16","v-f2e0b34a","v-ef77020c","v-310bb201","v-f0ec4556","v-a91ef53e","v-24b7c48d","v-4526f0a1","v-c80a2912","v-64bbdf77","v-2bc6566a","v-7f25ca3a","v-7d70f19b","v-7bbc18fc","v-7a07405d","v-46199bc3","v-6cd750ef","v-4464c324","v-6b227850","v-42afea85","v-696d9fb1","v-40fb11e6","v-67b8c712"]}},star:{"/":{path:"/star/",keys:["v-7bbc18fc","v-0ad953a6","v-df8b6e0c","v-42afea85","v-696d9fb1"]}},timeline:{"/":{path:"/timeline/",keys:["v-2ecfd7dd","v-73677efc","v-00160158","v-6e12230b","v-cf2c548a","v-8ca3767e","v-403116f1","v-5045411e","v-aa06dbaa","v-7b1ed234","v-5406f64e","v-2ab43128","v-69864716","v-df10df86","v-7e0a98e5","v-21abeb46","v-4638a3e0","v-719f1a9a","v-dfe87174","v-5f32be14","v-0379f704","v-7ed1c45a","v-932477d0","v-288877bb","v-ad785c40","v-46748d9e","v-37027a41","v-2cc8ee1c","v-1d38721f","v-50f12e0f","v-99db8cbe","v-58cd5109","v-dc280cae","v-0628f8e5","v-56c8aa60","v-fa74dda6","v-b65ee6b0","v-16501f32","v-39d0d2b8","v-dcdfae1c","v-0f45c563","v-1dab3ea5","v-44e376c3","v-e539ee52","v-e2d0832c","v-34e8f89f","v-8397c7ba","v-5b191d69","v-fff2f994","v-03b4e419","v-68dcdd74","v-2d7e1f72","v-584dbbd6","v-96a60dc4","v-4caf0226","v-233112dd","v-fc80572c","v-fac0c946","v-71275d66","v-6f659f6a","v-7d815238","v-711a7809","v-72cf50a8","v-74842947","v-763901e6","v-77edda85","v-79a2b324","v-7b578bc3","v-7d0c6462","v-125607ee","v-632c4f45","v-02909dbd","v-0445765c","v-0966a248","v-0a3c8135","v-64e127e4","v-66960083","v-684ad922","v-69ffb1c1","v-6bb48a60","v-6d6962ff","v-6f1e3b9e","v-70d3143d","v-9fc14a42","v-1ff2a25a","v-5d219e5e","v-5ca9edb1","v-5e5ec650","v-60139eef","v-637d502d","v-653228cc","v-66e7016b","v-689bda0a","v-6a50b2a9","v-6c058b48","v-59b7ed20","v-52e48aa4","v-4c112828","v-48a776ea","v-453dc5ac","v-41d4146e","v-33d42f60","v-7dc3d3f0","v-fc7add4c","v-489511d9","v-424b3d0c","v-5a00a0ba","v-52958ce9","v-378ce1f4","v-56b058f0","v-0eddbe7e","v-859b3a82","v-d3a08f6c","v-ec9ac944","v-5d10c97c","v-08f6c07e","v-206085fe","v-b9ff64c0","v-02d61b3f","v-1e766ba0","v-22254b81","v-9d5ecbc8","v-4e8c5dc9","v-5fb1723e","v-bdcbf37c","v-6ef24e90","v-6b889d52","v-681eec14","v-64b53ad6","v-614b8998","v-5de1d85a","v-712bf818","v-6dc246da","v-6a58959c","v-66eee45e","v-e8a39f90","v-c75feb94","v-c3f63a56","v-c08c8918","v-bd22d7da","v-b9b9269c","v-b64f755e","v-0c868226","v-3d8de10b","v-d635ed6e","v-23025503","v-4d5da57f","v-fd1b3d04","v-0bec1b39","v-4d898dff","v-669ec558","v-716a55b2","v-74421e60","v-4aea66c2","v-29058be8","v-48d24a5e","v-75f222a2","v-00b8db69","v-04228ca7","v-078c3de5","v-09411684","v-7b68941e","v-77fee2e0","v-749531a2","v-f16353a6","v-edf9a268","v-ea8ff12a","v-80b1f816","v-7d4846d8","v-79de959a","v-7674e45c","v-730b331e","v-6fa181e0","v-6c37d0a2","v-52707f20","v-4f06cde2","v-48336b66","v-574a5511","v-58ff2db0","v-bc9d1daa","v-b9336c6c","v-b5c9bb2e","v-106a3a50","v-0d008912","v-184f4da6","v-2e3eac9e","v-e02a086e","v-49f030b2","v-7e8fa17c","v-e1e3da16","v-f2e0b34a","v-ef77020c","v-0ad953a6","v-df8b6e0c","v-310bb201","v-f0ec4556","v-a91ef53e","v-24b7c48d","v-4526f0a1","v-c80a2912","v-64bbdf77","v-2bc6566a","v-7f25ca3a","v-7d70f19b","v-7bbc18fc","v-7a07405d","v-46199bc3","v-6cd750ef","v-4464c324","v-6b227850","v-42afea85","v-696d9fb1","v-40fb11e6","v-67b8c712"]}}},Wc=Y(Q2),nu=(n="")=>{const s=cn(),a=Un(),e=js();return w(()=>{var r;const t=n||((r=yn().value.blog)==null?void 0:r.key)||"";if(!t)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};const o=a.getRoutes();if(!Wc.value[t])throw new Error(`useBlogCategory: key ${t} is invalid`);const p=Wc.value[t][e.value],i={path:p.path,map:{}};for(const u in p.map){const d=p.map[u];i.map[u]={path:d.path,items:[]};for(const v of d.keys){const k=o.find(({name:f})=>f===v);if(k){const f=Sa(a,k.path);i.map[u].items.push({path:f.path,info:f.meta})}}s.value.path===d.path&&(i.currentItems=i.map[u].items)}return i})},Gc=Y(X2),wt=(n="")=>{const s=Un(),a=js();return w(()=>{var i;const e=n||((i=yn().value.blog)==null?void 0:i.key)||"";if(!e)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!Gc.value[e])throw new Error(`useBlogType: key ${n} is invalid`);const t=s.getRoutes(),o=Gc.value[e][a.value],p={path:o.path,items:[]};for(const r of o.keys){const u=t.find(({name:d})=>d===r);if(u){const d=Sa(s,u.path);p.items.push({path:d.path,info:d.meta})}}return p})};const Z2="/assets/hero-197a9d2d.jpg",su=Symbol.for("categoryMap"),xe=()=>{const n=hn(su);if(!n)throw new Error("useCategoryMap() is called without provider.");return n},n8=()=>{const n=nu("category");fs(su,n)},Ce=()=>{const n=Xs(),s=pn();return w(()=>({...n.value.blog,...s.value.blog}))},au=Symbol.for("tagMap"),Ve=()=>{const n=hn(au);if(!n)throw new Error("useTagMap() is called without provider.");return n},s8=()=>{const n=nu("tag");fs(au,n)},a8=n=>{const s=pn();return w(()=>{const{[_n.author]:a}=n.value;return a?me(a):a===!1?[]:me(s.value.author,!1)})},e8=n=>{const s=xe();return w(()=>Si(n.value[_n.category]).map(a=>({name:a,path:s.value.map[a].path})))},t8=n=>{const s=Ve();return w(()=>Fi(n.value[_n.tag]).map(a=>({name:a,path:s.value.map[a].path})))},o8=n=>w(()=>{const{[_n.date]:s}=n.value;return tp(s)}),p8=n=>{const s=za(n,"info"),a=Ce(),e=a8(s),t=e8(s),o=t8(s),p=o8(s),i=hr(),r=w(()=>({author:e.value,category:t.value,date:p.value,localizedDate:s.value[_n.localizedDate]||"",tag:o.value,isOriginal:s.value[_n.isOriginal]||!1,readingTime:s.value[_n.readingTime]||null,readingTimeLocale:s.value[_n.readingTime]&&i.value?fr(s.value[_n.readingTime],i.value):null,pageview:n.path})),u=w(()=>a.value.articleInfo);return{info:r,items:u}},eu=Symbol(""),je=()=>{const n=hn(eu);if(!n)throw new Error("useArticles() is called without provider.");return n},c8=()=>{const n=wt("article");fs(eu,n)},tu=Symbol(""),Ep=()=>{const n=hn(tu);if(!n)throw new Error("useStars() is called without provider.");return n},l8=()=>{const n=wt("star");fs(tu,n)},ou=Symbol(""),bp=()=>{const n=hn(ou);if(!n)throw new Error("useTimelines() is called without provider.");return n},i8=()=>{const n=wt("timeline"),s=w(()=>{const a=[];return n.value.items.forEach(({info:e,path:t})=>{const o=tp(e[_n.date]),p=o==null?void 0:o.getFullYear(),i=o?o.getMonth()+1:null,r=o==null?void 0:o.getDate();p&&i&&r&&((!a[0]||a[0].year!==p)&&a.unshift({year:p,items:[]}),a[0].items.push({date:`${i}/${r}`,info:e,path:t}))}),{...n.value,config:a.reverse()}});fs(ou,s)},r8=()=>{c8(),n8(),l8(),s8(),i8()};var u8=F({name:"SocialMedia",setup(){const n=Ce(),s=Ua(),a=w(()=>{const e=n.value.medias;return e?Te(e).map(([t,o])=>({name:t,icon:Y2[t],url:o})):[]});return()=>a.value.length?c("div",{class:"vp-social-medias"},a.value.map(({name:e,icon:t,url:o})=>c("a",{class:"vp-social-media",href:o,rel:"noopener noreferrer",target:"_blank","aria-label":e,...s.value?{}:{"data-balloon-pos":"up"},innerHTML:t}))):null}}),_p=F({name:"BloggerInfo",setup(){const n=Ce(),s=Be(),a=pn(),e=je(),t=xe(),o=Ve(),p=bp(),i=Le(),r=w(()=>{var k;return n.value.name||((k=me(a.value.author)[0])==null?void 0:k.name)||s.value.title}),u=w(()=>n.value.avatar||a.value.logo),d=w(()=>a.value.blogLocales),v=w(()=>n.value.intro);return()=>{const{article:k,category:f,tag:b,timeline:_}=d.value,B=[[e.value.path,e.value.items.length,k],[t.value.path,ss(t.value.map).length,f],[o.value.path,ss(o.value.map).length,b],[p.value.path,p.value.items.length,_]];return c("div",{class:"vp-blogger-info",vocab:"https://schema.org/",typeof:"Person"},[c("div",{class:"vp-blogger",...v.value?{style:{cursor:"pointer"},"aria-label":d.value.intro,"data-balloon-pos":"down",role:"navigation",onClick:()=>i(v.value)}:{}},[u.value?c("img",{class:["vp-blogger-avatar",{round:n.value.roundAvatar}],src:Tn(u.value),property:"image",alt:"Blogger Avatar"}):null,r.value?c("div",{class:"vp-blogger-name",property:"name"},r.value):null,n.value.description?c("div",{class:"vp-blogger-description",innerHTML:n.value.description}):null,v.value?c("meta",{property:"url",content:Tn(v.value)}):null]),c("div",{class:"vp-blog-counts"},B.map(([y,T,g])=>c(Fn,{class:"vp-blog-count",to:y},()=>[c("div",{class:"count"},T),c("div",g)]))),c(u8)])}}});const Bo=()=>c(rn,{name:"category"},()=>c("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));Bo.displayName="CategoryIcon";const Oo=()=>c(rn,{name:"tag"},()=>c("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Oo.displayName="TagIcon";const gp=()=>c(rn,{name:"timeline"},()=>c("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));gp.displayName="TimelineIcon";const pu=()=>c(rn,{name:"slides"},()=>c("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));pu.displayName="SlideIcon";const cu=()=>c(rn,{name:"sticky"},()=>[c("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);cu.displayName="StickyIcon";const it=()=>c(rn,{name:"article"},()=>c("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));it.displayName="ArticleIcon";const lu=()=>c(rn,{name:"book"},()=>c("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));lu.displayName="BookIcon";const iu=()=>c(rn,{name:"link"},()=>c("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));iu.displayName="LinkIcon";const ru=()=>c(rn,{name:"project"},()=>c("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));ru.displayName="ProjectIcon";const uu=()=>c(rn,{name:"friend"},()=>c("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));uu.displayName="FriendIcon";const To=()=>c(rn,{name:"slide-down"},()=>c("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));To.displayName="SlideDownIcon";const du=()=>c("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});du.displayName="EmptyIcon";const vu=()=>c(rn,{name:"lock"},()=>c("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));vu.displayName="LockIcon";var d8=F({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},slots:Object,setup(n,{slots:s}){const a=za(n,"info"),{info:e,items:t}=p8(n);return()=>{var k,f,b;const{[_n.title]:o,[_n.type]:p,[_n.isEncrypted]:i=!1,[_n.cover]:r,[_n.excerpt]:u,[_n.sticky]:d}=a.value,v=e.value;return c("div",{class:"vp-article-wrapper"},c("article",{class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},[((k=s.cover)==null?void 0:k.call(s,{cover:r}))||(r?[c("img",{class:"vp-article-cover",src:Tn(r)}),c("meta",{property:"image",content:Tn(r)})]:[]),d?c(cu):null,c(Fn,{to:n.path},()=>{var _;return((_=s.title)==null?void 0:_.call(s,{title:o,isEncrypted:i,type:p}))||c("header",{class:"vp-article-title"},[i?c(vu):null,p===br.slide?c(pu):null,c("span",{property:"headline"},o)])}),((f=s.excerpt)==null?void 0:f.call(s,{excerpt:u}))||(u?c("div",{class:"vp-article-excerpt",innerHTML:u}):null),c("hr",{class:"vp-article-hr"}),((b=s.info)==null?void 0:b.call(s,{info:v}))||c(Gr,{info:v,...t.value?{items:t.value}:{}})]))}}}),v8=F({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(n,{emit:s}){let a;const e=pn(),t=Y(""),o=w(()=>e.value.paginationLocales),p=w(()=>Math.ceil(n.total/n.perPage)),i=w(()=>!!p.value&&p.value!==1),r=w(()=>p.value<7?!1:n.current>4),u=w(()=>p.value<7?!1:n.current<p.value-3),d=w(()=>{const{current:f}=n;let b=1,_=p.value;const B=[];p.value>=7&&(f<=4&&f<p.value-3?(b=1,_=5):f>4&&f>=p.value-3?(_=p.value,b=p.value-4):p.value>7&&(b=f-2,_=f+2));for(let y=b;y<=_;y++)B.push(y);return B}),v=f=>s("updateCurrentPage",f),k=f=>{const b=parseInt(f);b<=p.value&&b>0?v(b):a.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${o.value.errorText.replace(/\$page/g,p.value.toString())}`)};return gn(()=>{a=new Ym}),()=>c("div",{class:"vp-pagination"},i.value?c("div",{class:"vp-pagination-list"},[c("div",{class:"vp-pagination-number "},[n.current>1?c("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>v(n.current-1)},o.value.prev):null,r.value?[c("div",{role:"navigation",onClick:()=>v(1)},1),c("div",{class:"ellipsis"},"...")]:null,d.value.map(f=>c("div",{key:f,class:{active:n.current===f},role:"navigation",onClick:()=>v(f)},f)),u.value?[c("div",{class:"ellipsis"},"..."),c("div",{role:"navigation",onClick:()=>v(p.value)},p.value)]:null,n.current<p.value?c("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>v(n.current+1)},o.value.next):null]),c("div",{class:"vp-pagination-nav"},[c("label",{for:"navigation-text"},`${o.value.navigate}: `),c("input",{id:"navigation-text",value:t.value,onInput:({target:f})=>{t.value=f.value},onKeydown:f=>{f.key==="Enter"&&(f.preventDefault(),k(t.value))}}),c("button",{class:"vp-pagination-button",role:"navigation",title:o.value.action,onClick:()=>k(t.value)},o.value.action)])]):[])}}),yp=F({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(n){const s=Bs(),a=Un(),e=Ce(),t=Y(1),o=w(()=>e.value.articlePerPage||10),p=w(()=>n.items.slice((t.value-1)*o.value,t.value*o.value)),i=async r=>{t.value=r;const u={...s.query};!(u.page===r.toString()||r===1&&!u.page)&&(r===1?delete u.page:u.page=r.toString(),await a.push({path:s.path,query:u}))};return gn(()=>{const{page:r}=s.query;i(r?Number(r):1),fn(t,()=>{const u=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,u)},100)})}),()=>c("div",{id:"article-list",class:"vp-article-list"},p.value.length?[...p.value.map(({info:r,path:u},d)=>c(kn,{appear:!0,delay:d*.04},()=>c(d8,{key:u,info:r,path:u}))),c(v8,{current:t.value,perPage:o.value,total:n.items.length,onUpdateCurrentPage:i})]:c(du))}}),Ap=F({name:"CategoryList",setup(){const n=cn(),s=xe();return()=>c("ul",{class:"vp-category-list"},Te(s.value.map).map(([a,{path:e,items:t}])=>c("li",{class:["vp-category",`vp-category${gt(a,9)}`,{active:e===n.value.path}]},c(Fn,{to:e},()=>[a,c("span",{class:"count"},t.length)]))))}}),wp=F({name:"TagList",setup(){const n=yn(),s=Ve(),a=e=>{var t;return e===((t=n.value.blog)==null?void 0:t.name)};return()=>c("ul",{class:"tag-list-wrapper"},Te(s.value.map).map(([e,{path:t,items:o}])=>c("li",{class:["tag",`tag${gt(e,9)}`,{active:a(e)}]},c(Fn,{to:t},()=>[e,c("span",{class:"tag-num"},o.length)]))))}}),k8=F({name:"TimelineList",setup(){const n=pn(),s=bp(),a=Le(),e=w(()=>n.value.blogLocales.timeline);return()=>c("div",{class:"timeline-list-wrapper"},[c("div",{class:"timeline-list-title",onClick:()=>a(s.value.path)},[c(gp),c("span",{class:"num"},s.value.items.length),e.value]),c("hr"),c("div",{class:"timeline-content"},c("ul",{class:"timeline-list"},s.value.config.map(({year:t,items:o},p)=>c(kn,{appear:!0,delay:.08*(p+1)},()=>c("li",[c("h3",{class:"timeline-year"},t),c("ul",{class:"timeline-year-wrapper"},o.map(({date:i,info:r,path:u})=>c("li",{class:"timeline-item"},[c("span",{class:"timeline-date"},i),c(Fn,{class:"timeline-title",to:u},()=>r[_n.title])])))])))))])}}),ku=F({name:"InfoList",setup(){const n=pn(),s=je(),a=xe(),e=w(()=>ss(a.value.map).length),t=Ep(),o=Ve(),p=w(()=>ss(o.value.map).length),i=Le(),r=Y("article"),u=w(()=>n.value.blogLocales),d=[["article",it],["category",Bo],["tag",Oo],["timeline",gp]];return()=>c("div",{class:"vp-blog-infos"},[c("div",{class:"vp-blog-type-switcher"},d.map(([v,k])=>c("button",{type:"button",class:"vp-blog-type-button",onClick:()=>{r.value=v}},c("div",{class:["icon-wrapper",{active:r.value===v}],"aria-label":u.value[v],"data-balloon-pos":"up"},c(k))))),c(kn,()=>r.value==="article"?c("div",{class:"vp-sticky-article-wrapper"},[c("div",{class:"title",onClick:()=>i(s.value.path)},[c(it),c("span",{class:"num"},s.value.items.length),u.value.article]),c("hr"),c("ul",{class:"vp-sticky-articles"},t.value.items.map(({info:v,path:k},f)=>c(kn,{appear:!0,delay:.08*(f+1)},()=>c("li",{class:"vp-sticky-article"},c(Fn,{to:k},()=>v[_n.title])))))]):r.value==="category"?c("div",{class:"vp-category-wrapper"},[e.value?c("div",{class:"title",onClick:()=>i(a.value.path)},[c(Bo),c("span",{class:"num"},e.value),u.value.category]):null,c("hr"),c(kn,{delay:.04},()=>c(Ap))]):r.value==="tag"?c("div",{class:"vp-tag-wrapper"},[p.value?c("div",{class:"title",onClick:()=>i(o.value.path)},[c(Oo),c("span",{class:"num"},p.value),u.value.tag]):null,c("hr"),c(kn,{delay:.04},()=>c(wp))]):c(kn,()=>c(k8)))])}}),Bt=F({name:"BlogWrapper",slots:Object,setup(n,{slots:s}){const{isMobile:a}=Pe();return()=>[c(hp),c(mp,{noSidebar:!0,noToc:!0},{default:()=>s.default(),navScreenBottom:()=>c(_p),...a.value?{sidebar:()=>c(ku)}:{}})]}});const mu=()=>c("aside",{class:"vp-blog-info-wrapper"},[c(kn,()=>c(_p)),c(kn,{delay:.04},()=>c(ku))]);mu.displayName="InfoPanel";var Ot=mu,m8=F({name:"BlogPage",components:{CategoryList:Ap,TagList:wp},setup(){const n=cn(),s=yn(),a=xe(),e=Ve(),t=w(()=>s.value.blog||{}),o=w(()=>{const{key:i=""}=t.value;return i==="category"?"CategoryList":i==="tag"?"TagList":null}),p=w(()=>{const{name:i="",key:r=""}=t.value;return r==="category"?i?a.value.map[i].items:[]:r==="tag"?i?e.value.map[i].items:[]:[]});return()=>c(Bt,()=>c("div",{class:"vp-page vp-blog"},c("div",{class:"blog-page-wrapper"},[c("main",{id:"main-content",class:"vp-blog-main"},[c(kn,()=>o.value?c(ns(o.value)):null),t.value.name?c(kn,{appear:!0,delay:.24},()=>c(yp,{key:n.value.path,items:p.value})):null]),c(kn,{delay:.16},()=>c(Ot,{key:"blog"}))])))}}),f8=F({name:"BlogHero",slots:Object,setup(n,{slots:s}){const a=yn(),e=Be(),t=Hn(),o=w(()=>a.value.heroFullScreen??!1),p=w(()=>{const{heroText:r,heroImage:u,heroImageDark:d,heroAlt:v,heroImageStyle:k,tagline:f}=a.value;return{text:r??e.value.title??"Hello",image:u?Tn(u):null,imageDark:d?Tn(d):null,heroStyle:k,alt:v||r||"hero image",tagline:f??"",isFullScreen:o.value}}),i=w(()=>{const{bgImage:r,bgImageDark:u,bgImageStyle:d}=a.value;return{image:mn(r)?Tn(r):r===!1?null:Z2,imageDark:mn(u)?Tn(u):null,bgStyle:d,isFullScreen:o.value}});return()=>{var r,u;return a.value.hero===!1?null:c("div",{ref:t,class:["vp-blog-hero",{fullscreen:o.value,"no-bg":!i.value.image}]},[((r=s.heroBg)==null?void 0:r.call(s,i.value))||[i.value.image?c("div",{class:["vp-blog-mask",{light:i.value.imageDark}],style:[{background:`url(${i.value.image}) center/cover no-repeat`},i.value.bgStyle]}):null,i.value.imageDark?c("div",{class:"vp-blog-mask dark",style:[{background:`url(${i.value.imageDark}) center/cover no-repeat`},i.value.bgStyle]}):null],((u=s.heroInfo)==null?void 0:u.call(s,p.value))||[c(kn,{appear:!0,type:"group",delay:.04},()=>[p.value.image?c("img",{key:"light",class:["vp-blog-hero-image",{light:p.value.imageDark}],style:p.value.heroStyle,src:p.value.image,alt:p.value.alt}):null,p.value.imageDark?c("img",{key:"dark",class:"vp-blog-hero-image dark",style:p.value.heroStyle,src:p.value.imageDark,alt:p.value.alt}):null]),c(kn,{appear:!0,delay:.08},()=>p.value.text?c("h1",{class:"vp-blog-hero-title"},p.value.text):null),c(kn,{appear:!0,delay:.12},()=>p.value.tagline?c("p",{class:"vp-blog-hero-description",innerHTML:p.value.tagline}):null)],p.value.isFullScreen?c("button",{type:"button",class:"slide-down-button",onClick:()=>{window.scrollTo({top:t.value.clientHeight,behavior:"smooth"})}},[c(To),c(To)]):null])}}});const h8=["link","article","book","project","friend"];var E8=F({name:"ProjectPanel",components:{ArticleIcon:it,BookIcon:lu,FriendIcon:uu,LinkIcon:iu,ProjectIcon:ru},setup(){const n=yn(),s=Ua(),a=Le(),e=(t="",o="icon")=>h8.includes(t)?c(ns(`${t}-icon`)):da(t)?c("img",{class:"vp-project-image",src:t,alt:o}):yt(t)?c("img",{class:"vp-project-image",src:Tn(t),alt:o}):c(qn,{icon:t});return()=>{var t;return(t=n.value.projects)!=null&&t.length?c("div",{class:"vp-project-panel"},n.value.projects.map(({icon:o,link:p,name:i,desc:r},u)=>c("div",{class:["vp-project-card",{[`project${u%9}`]:!s.value}],onClick:()=>a(p)},[e(o,i),c("div",{class:"vp-project-name"},i),c("div",{class:"vp-project-desc"},r)]))):null}}}),b8=F({name:"BlogHome",setup(){const n=je();return()=>c("div",{class:"vp-page vp-blog"},[c(f8),c("div",{class:"blog-page-wrapper"},[c("main",{id:"main-content",class:"vp-blog-main"},[c(kn,{appear:!0,delay:.16},()=>c(E8)),c(kn,{appear:!0,delay:.24},()=>c(yp,{items:n.value.items}))]),c(kn,{appear:!0,delay:.16},()=>c(Ot,{key:"blog"}))]),c(kn,{appear:!0,delay:.28},()=>c(fp))])}}),_8=F({name:"BlogHome",setup(){return()=>c(Bt,()=>c(b8))}}),fu=F({name:"ArticleType",setup(){const n=cn(),s=js(),a=pn(),e=je(),t=Ep(),o=w(()=>{const p=a.value.blogLocales;return[{text:p.all,path:e.value.path},{text:p.star,path:t.value.path},...[].map(({key:i,path:r})=>({text:p[i],path:r.replace(/^\//,s.value)}))]});return()=>c("ul",{class:"vp-article-type-wrapper"},o.value.map(p=>c("li",{class:["vp-article-type",{active:p.path===n.value.path}]},c(Fn,{to:p.path},()=>p.text))))}}),g8=F({name:"BlogPage",setup(){const n=wt(),s=yn(),a=cn(),e=je(),t=Ep(),o=w(()=>{const{key:p="",type:i}=s.value.blog||{};return p==="star"?t.value.items:i==="type"&&p?n.value.items:e.value.items});return()=>c(Bt,()=>c("div",{class:"vp-page vp-blog"},c("div",{class:"blog-page-wrapper"},[c("main",{id:"main-content",class:"vp-blog-main"},[c(kn,()=>c(fu)),c(kn,{appear:!0,delay:.24},()=>c(yp,{key:a.value.path,items:o.value}))]),c(kn,{delay:.16},()=>c(Ot,{key:"blog"}))])))}}),y8=F({name:"TimelineItems",setup(){const n=Ce(),s=pn(),a=bp(),e=w(()=>n.value.timeline||s.value.blogLocales.timelineTitle),t=w(()=>a.value.config.map(({year:o})=>({title:o.toString(),level:2,slug:o.toString(),children:[]})));return()=>c("div",{class:"timeline-wrapper"},c("ul",{class:"timeline-content"},[c(kn,()=>c("li",{class:"motto"},e.value)),c(Kr,{items:t.value}),a.value.config.map(({year:o,items:p},i)=>c(kn,{appear:!0,delay:.08*(i+1),type:"group"},()=>[c("h3",{key:"title",id:o,class:"timeline-year-title"},c("span",o)),c("li",{key:"content",class:"timeline-year-list"},[c("ul",{class:"timeline-year-wrapper"},p.map(({date:r,info:u,path:d})=>c("li",{class:"timeline-item"},[c("span",{class:"timeline-date"},r),c(Fn,{class:"timeline-title",to:d},()=>u[_n.title])])))])]))]))}}),A8=F({name:"Timeline",components:{ArticleType:fu,CategoryList:Ap,TagList:wp},setup(){return()=>c(Bt,()=>c("div",{class:"vp-page vp-blog"},c("div",{class:"blog-page-wrapper"},[c("main",{id:"main-content",class:"vp-blog-main"},[c(kn,{appear:!0,delay:.24},()=>c(y8))]),c(kn,{delay:.16},()=>c(Ot,{key:"blog"}))])))}});const fa="./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),Xt=Array.from({length:64},(n,s)=>s),Ye=n=>Array(n).fill(-1),Ns=[...Ye(46),0,1,...Xt.slice(54,64),...Ye(7),...Xt.slice(2,28),...Ye(6),...Xt.slice(28,54),...Ye(5)],Kc=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],Jc=[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946,1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055,3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504,976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462],hu=[1332899944,1700884034,1701343084,1684370003,1668446532,1869963892],Do=(n,s)=>{if(s<=0||s>n.length)throw Error(`Illegal len: ${s}`);let a=0,e,t;const o=[];for(;a<s;){if(e=n[a++]&255,o.push(fa[e>>2&63]),e=(e&3)<<4,a>=s){o.push(fa[e&63]);break}if(t=n[a++]&255,e|=t>>4&15,o.push(fa[e&63]),e=(t&15)<<2,a>=s){o.push(fa[e&63]);break}t=n[a++]&255,e|=t>>6&3,o.push(fa[e&63]),o.push(fa[t&63])}return o.join("")},w8=(n,s)=>{if(s<=0)throw Error(`Illegal len: ${s}`);const a=n.length;let e=0,t=0,o,p,i,r,u,d;const v=[];for(;e<a-1&&t<s&&(d=n.charCodeAt(e++),o=d<Ns.length?Ns[d]:-1,d=n.charCodeAt(e++),p=d<Ns.length?Ns[d]:-1,!(o==-1||p==-1||(u=o<<2>>>0,u|=(p&48)>>4,v.push(String.fromCharCode(u)),++t>=s||e>=a)||(d=n.charCodeAt(e++),i=d<Ns.length?Ns[d]:-1,i==-1)||(u=(p&15)<<4>>>0,u|=(i&60)>>2,v.push(String.fromCharCode(u)),++t>=s||e>=a)));)d=n.charCodeAt(e++),r=d<Ns.length?Ns[d]:-1,u=(i&3)<<6>>>0,u|=r,v.push(String.fromCharCode(u)),++t;return v.map(k=>k.charCodeAt(0))},B8=(n,s)=>{let a=null;for(typeof n=="number"&&(a=n,n=()=>null);a!==null||(a=n())!==null;)a<128?s(a&127):a<2048?(s(a>>6&31|192),s(a&63|128)):a<65536?(s(a>>12&15|224),s(a>>6&63|128),s(a&63|128)):(s(a>>18&7|240),s(a>>12&63|128),s(a>>6&63|128),s(a&63|128)),a=null},O8=(n,s)=>{let a,e=null;for(;(a=e!==null?e:n())!==null;){if(a>=55296&&a<=57343&&(e=n())!==null&&e>=56320&&e<=57343){s((a-55296)*1024+e-56320+65536),e=null;continue}s(a)}e!==null&&s(e)},T8=(n,s)=>{O8(n,function(a){B8(a,s)})},D8=typeof process<"u"&&process&&typeof process.nextTick=="function"?typeof setImmediate=="function"?setImmediate:process.nextTick:setTimeout,I8=n=>{const s=[];let a=0;return T8(()=>a>=n.length?null:n.charCodeAt(a++),e=>{s.push(e)}),s},he=(n,s,a,e)=>{let t,o=n[s],p=n[s+1];return o^=a[0],t=e[o>>>24],t+=e[256|o>>16&255],t^=e[512|o>>8&255],t+=e[768|o&255],p^=t^a[1],t=e[p>>>24],t+=e[256|p>>16&255],t^=e[512|p>>8&255],t+=e[768|p&255],o^=t^a[2],t=e[o>>>24],t+=e[256|o>>16&255],t^=e[512|o>>8&255],t+=e[768|o&255],p^=t^a[3],t=e[p>>>24],t+=e[256|p>>16&255],t^=e[512|p>>8&255],t+=e[768|p&255],o^=t^a[4],t=e[o>>>24],t+=e[256|o>>16&255],t^=e[512|o>>8&255],t+=e[768|o&255],p^=t^a[5],t=e[p>>>24],t+=e[256|p>>16&255],t^=e[512|p>>8&255],t+=e[768|p&255],o^=t^a[6],t=e[o>>>24],t+=e[256|o>>16&255],t^=e[512|o>>8&255],t+=e[768|o&255],p^=t^a[7],t=e[p>>>24],t+=e[256|p>>16&255],t^=e[512|p>>8&255],t+=e[768|p&255],o^=t^a[8],t=e[o>>>24],t+=e[256|o>>16&255],t^=e[512|o>>8&255],t+=e[768|o&255],p^=t^a[9],t=e[p>>>24],t+=e[256|p>>16&255],t^=e[512|p>>8&255],t+=e[768|p&255],o^=t^a[10],t=e[o>>>24],t+=e[256|o>>16&255],t^=e[512|o>>8&255],t+=e[768|o&255],p^=t^a[11],t=e[p>>>24],t+=e[256|p>>16&255],t^=e[512|p>>8&255],t+=e[768|p&255],o^=t^a[12],t=e[o>>>24],t+=e[256|o>>16&255],t^=e[512|o>>8&255],t+=e[768|o&255],p^=t^a[13],t=e[p>>>24],t+=e[256|p>>16&255],t^=e[512|p>>8&255],t+=e[768|p&255],o^=t^a[14],t=e[o>>>24],t+=e[256|o>>16&255],t^=e[512|o>>8&255],t+=e[768|o&255],p^=t^a[15],t=e[p>>>24],t+=e[256|p>>16&255],t^=e[512|p>>8&255],t+=e[768|p&255],o^=t^a[16],n[s]=p^a[16+1],n[s+1]=o,n},Ea=(n,s)=>{let a=0;for(let e=0;e<4;++e)a=a<<8|n[s]&255,s=(s+1)%n.length;return{key:a,offp:s}},Yc=(n,s,a)=>{const e=s.length,t=a.length;let o=0,p=[0,0],i;for(let r=0;r<e;r++)i=Ea(n,o),o=i.offp,s[r]=s[r]^i.key;for(let r=0;r<e;r+=2)p=he(p,0,s,a),s[r]=p[0],s[r+1]=p[1];for(let r=0;r<t;r+=2)p=he(p,0,s,a),a[r]=p[0],a[r+1]=p[1]},L8=(n,s,a,e)=>{const t=a.length,o=e.length;let p=0,i=[0,0],r;for(let u=0;u<t;u++)r=Ea(s,p),p=r.offp,a[u]=a[u]^r.key;p=0;for(let u=0;u<t;u+=2)r=Ea(n,p),p=r.offp,i[0]^=r.key,r=Ea(n,p),p=r.offp,i[1]^=r.key,i=he(i,0,a,e),a[u]=i[0],a[u+1]=i[1];for(let u=0;u<o;u+=2)r=Ea(n,p),p=r.offp,i[0]^=r.key,r=Ea(n,p),p=r.offp,i[1]^=r.key,i=he(i,0,a,e),e[u]=i[0],e[u+1]=i[1]},Qc=(n,s,a,e,t)=>{const o=hu.slice(),p=o.length;if(a<4||a>31){const k=new Error(`Illegal number of rounds (4-31): ${a}`);if(e===!1)return Promise.reject(k);throw k}if(s.length!==16){const k=new Error(`Illegal salt length: ${s.length} != 16`);if(e===!1)return Promise.reject(k);throw k}a=1<<a>>>0;let i,r,u=0,d;Int32Array?(i=new Int32Array(Kc),r=new Int32Array(Jc)):(i=Kc.slice(),r=Jc.slice()),L8(s,n,i,r);const v=()=>{if(t&&t(u/a),u<a){const k=Date.now();for(;u<a&&(u=u+1,Yc(n,i,r),Yc(s,i,r),!(Date.now()-k>100)););}else{for(u=0;u<64;u++)for(d=0;d<p>>1;d++)he(o,d<<1,i,r);const k=[];for(u=0;u<p;u++)k.push((o[u]>>24&255)>>>0),k.push((o[u]>>16&255)>>>0),k.push((o[u]>>8&255)>>>0),k.push((o[u]&255)>>>0);return e===!1?Promise.resolve(k):k}if(e===!1)return new Promise(k=>D8(()=>{v().then(k)}))};if(e===!1)return v();{let k;for(;;)if(typeof(k=v())<"u")return k||[]}},P8=n=>{var s;try{const{crypto:a,msCrypto:e}=window,t=new Uint32Array(n);return(s=a||e)==null||s.getRandomValues(t),Array.from(t)}catch{throw Error("WebCryptoAPI is not available")}},R8=(n=10)=>{if(typeof n!="number")throw Error("Illegal arguments: "+typeof n);n<4?n=4:n>31&&(n=31);const s=[];return s.push("$2a$"),n<10&&s.push("0"),s.push(n.toString()),s.push("$"),s.push(Do(P8(16),16)),s.join("")};function x8(n,s,a,e){if(typeof n!="string"||typeof s!="string"){const f=new Error("Invalid string / salt: Not a string");if(a===!1)return Promise.reject(f);throw f}let t,o;if(s.charAt(0)!=="$"||s.charAt(1)!=="2"){const f=new Error("Invalid salt version: "+s.substring(0,2));if(a===!1)return Promise.reject(f);throw f}if(s.charAt(2)==="$")t=String.fromCharCode(0),o=3;else{if(t=s.charAt(2),t!=="a"&&t!=="b"&&t!=="y"||s.charAt(3)!=="$"){const f=Error("Invalid salt revision: "+s.substring(2,4));if(a===!1)return Promise.reject(f);throw f}o=4}if(s.charAt(o+2)>"$"){const f=new Error("Missing salt rounds");if(a===!1)return Promise.reject(f);throw f}const p=parseInt(s.substring(o,o+1),10)*10,i=parseInt(s.substring(o+1,o+2),10),r=p+i,u=s.substring(o+3,o+25);n+=t>="a"?"\0":"";const d=I8(n),v=w8(u,16),k=f=>{const b=[];return b.push("$2"),t>="a"&&b.push(t),b.push("$"),r<10&&b.push("0"),b.push(r.toString()),b.push("$"),b.push(Do(v,v.length)),b.push(Do(f,hu.length*4-1)),b.join("")};return a===!1?Qc(d,v,r,!1,e).then(f=>k(f)):k(Qc(d,v,r,!0,e))}const C8=(n,s=10)=>{if(typeof s=="number"&&(s=R8(s)),typeof n!="string"||typeof s!="string")throw Error("Illegal arguments: "+typeof n+", "+typeof s);return x8(n,s,!0)},Io=(n,s)=>{if(typeof n!="string"||typeof s!="string")throw Error("Illegal arguments: "+typeof n+", "+typeof s);return s.length!==60?!1:C8(n,s.substring(0,s.length-31))===s},Eu=()=>c(rn,{name:"lock"},()=>c("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));Eu.displayName="LockIcon";var bu=F({name:"PasswordModal",props:{full:Boolean},emits:["verify"],setup(n,{emit:s}){const a=yn(),e=pn(),t=Y(""),o=Y(!1),p=Y(!1),i=w(()=>e.value.encryptLocales);let r=null;const u=()=>{r&&clearTimeout(r),o.value=!1,s("verify",t.value,p.value),ra().then(()=>{o.value=!0,r=setTimeout(()=>{o.value=!1},1e3)})};return()=>c("div",{class:["vp-decrypt-layer",{expand:n.full||a.value.home}]},c("div",{class:"vp-decrypt-modal"},[c("div",{class:["vp-decrypt-hint",{tried:o.value}]},o.value?i.value.errorHint:c(Eu,{"aria-label":i.value.iconLabel})),c("div",{class:"vp-decrypt-input"},[c("input",{type:"password",value:t.value,placeholder:i.value.placeholder,onInput:({target:d})=>{t.value=d.value},onKeydown:({key:d})=>{d==="Enter"&&u()}})]),c("div",{class:"vp-remember-password"},[c("input",{type:"checkbox",value:p.value,onChange:()=>p.value=!p.value}),i.value.remember]),c("button",{type:"button",class:"vp-decrypt-submit",onClick:()=>u()},"OK")]))}});const _u=()=>{const n=Xs();return w(()=>n.value.encrypt||{})},Xc="VUEPRESS_HOPE_GLOBAL_TOKEN",V8=()=>{const n=_u(),s=qa(Xc,""),a=Zi(Xc,""),e=w(()=>{const{global:o=!1,admin:p=[]}=n.value;return o&&p.length>0}),t=w(()=>{if(e.value){if(s.value)return n.value.admin.some(o=>Io(s.value,o));if(a.value)return n.value.admin.some(o=>Io(a.value,o))}return!1});return{isEncrypted:e,isDecrypted:t,validate:(o,p=!1)=>{(p?s:a).value=o}}},Zt=(n="",s)=>!!n&&Io(n,s),Zc="VUEPRESS_HOPE_PATH_TOKEN",j8=()=>{const n=cn(),s=_u(),a=qa(Zc,{}),e=Zi(Zc,{}),t=p=>we(s.value.config)?ss(s.value.config).filter(i=>ja(decodeURI(p),i)).sort((i,r)=>r.length-i.length):[],o=p=>{const i=t(p);if(i.length>0){const{config:r={}}=s.value;return{isEncrypted:!0,isDecrypted:i.some(u=>a.value[u]&&r[u].some(d=>Zt(a.value[u],d))||e.value[u]&&r[u].some(d=>Zt(e.value[u],d)))}}return{isDecrypted:!1,isEncrypted:!1}};return{status:w(()=>o(n.value.path)),getStatus:o,validate:(p,i=!1)=>{const{config:r={}}=s.value,u=t(n.value.path);for(const d of u)if(r[d].filter(v=>Zt(p,v))){(i?a:e).value[d]=p;break}}}};var S8=F({name:"GlobalEncrypt",slots:Object,setup(n,{slots:s}){const{isDecrypted:a,isEncrypted:e,validate:t}=V8(),o=Y(!1);return gn(()=>{o.value=!0}),()=>c(Yr,()=>e.value?o.value?a.value?s.default():c(bu,{full:!0,onVerify:t}):null:s.default())}}),F8=F({name:"LocalEncrypt",slots:Object,setup(n,{slots:s}){const{status:a,validate:e}=j8(),t=Y(!1);return gn(()=>{t.value=!0}),()=>{const{isEncrypted:o,isDecrypted:p}=a.value;return o?t.value?p?s.default()||null:c(bu,{full:!0,onVerify:e}):null:s.default()||null}}});S0(qn);const M8=ws({enhance:({app:n,router:s})=>{const{scrollBehavior:a}=s.options;s.options.scrollBehavior=async(...e)=>(await Jr().wait(),a(...e)),Q1(n),n.component("HopeIcon",qn),n.component("VPLink",Fn),n.component("BloggerInfo",_p),n.component("GlobalEncrypt",S8),n.component("LocalEncrypt",F8)},setup:()=>{X1(),a2(),r8()},layouts:{Layout:G2,NotFound:J2,BlogCategory:m8,BlogHome:_8,BlogType:g8,Timeline:A8}}),Qe=[gk,I0,j0,N0,q0,K0,Z0,p1,L1,$1,M8],$8=[["v-8daa1a0e","/",{y:"h",t:"博客主页",i:"home"},["/README.md"]],["v-184f4da6","/intro.html",{d:169960453e4,v:"/assets/images/cover3.jpg",e:`<h1> 介绍页</h1>
<p>将你的个人介绍和档案放置在此处。</p>
`,r:{minutes:.08,words:23},y:"a",t:"介绍页",i:"circle-info"},[":md"]],["v-2e3eac9e","/slides.html",{d:169960453e4,e:`<!-- markdownlint-disable MD024 MD033 MD051 -->
<p>@slidestart</p>
<!-- .slide: data-transition="slide" -->
<h2> 幻灯片演示</h2>
<!-- .element: class="r-fit-text" -->
<p>一个简单的幻灯片演示与各种小贴士。</p>
<!-- .element: class="r-fit-text" -->
<blockquote>
<p>作者 Mr.Hope. 请滚动鼠标滚轮进入下一页</p>
</blockquote>
<hr>
<h2> 标注幻灯片</h2>`,r:{minutes:4.51,words:1352},y:"s",t:"幻灯片页",i:"person-chalkboard"},[":md"]],["v-e02a086e","/javascript/",{d:169960453e4,e:`<h1> welcome</h1>
`,r:{minutes:0,words:1},y:"a",t:"welcome"},["/javascript/README.md"]],["v-64bbdf77","/javascript/cherry.html",{d:16416864e5,l:"2022年1月9日",c:["樱桃"],g:["红","小","圆"],e:`<h1> 樱桃</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:33},y:"a",t:"樱桃",i:"pen-to-square"},[":md"]],["v-a91ef53e","/javascript/dragonfruit.html",{d:16417728e5,l:"2022年1月10日",c:["火龙果","水果"],g:["红","大"],e:`<h1> 火龙果</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.12,words:36},y:"a",t:"火龙果",i:"pen-to-square"},[":md"]],["v-49f030b2","/javascript/first.html",{d:169960453e4,c:["使用指南"],e:`<h2> 目录</h2>
<ul>
<li>
<p><a href="/javascript/markdown.html" target="blank">Markdown 展示</a></p>
</li>
<li>
<p><a href="/javascript/page.html" target="blank">页面展示</a></p>
</li>
<li>
<p><a href="/javascript/disable.html" target="blank">禁用展示</a></p>
</li>
<li>
<p><a href="/javascript/encrypt.html" target="blank">加密展示</a></p>
</li>
</ul>`,r:{minutes:.11,words:33},y:"a",t:"javascript笔记",i:"laptop-code"},[":md"]],["v-7e8fa17c","/javascript/second.html",{d:169960453e4,c:["使用指南"],e:`<h2> 目录</h2>
`,r:{minutes:.05,words:15},y:"a",t:"javascript笔记二",i:"laptop-code"},[":md"]],["v-310bb201","/javascript/strawberry.html",{d:16418592e5,l:"2022年1月11日",c:["水果","草莓"],g:["红","小"],e:`<h1> 草莓</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:34},y:"a",t:"草莓",i:"pen-to-square"},[":md"]],["v-0ad953a6","/javascript/tomato.html",{d:16419456e5,l:"2022年1月12日",c:["蔬菜"],g:["红","圆"],u:!0,v:"/assets/images/cover2.jpg",e:`<h1> 番茄</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.13,words:38},y:"a",t:"番茄",i:"pen-to-square"},[":md"]],["v-e1e3da16","/posts/",{d:169960453e4,e:`<h1> welcome</h1>
`,r:{minutes:0,words:1},y:"a",t:"welcome"},["/posts/README.md"]],["v-2bc6566a","/posts/cherry.html",{d:16416864e5,l:"2022年1月9日",c:["樱桃"],g:["红","小","圆"],e:`<h1> 樱桃</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:33},y:"a",t:"樱桃",i:"pen-to-square"},[":md"]],["v-24b7c48d","/posts/dragonfruit.html",{d:16417728e5,l:"2022年1月10日",c:["火龙果","水果"],g:["红","大"],e:`<h1> 火龙果</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.12,words:36},y:"a",t:"火龙果",i:"pen-to-square"},[":md"]],["v-f0ec4556","/posts/strawberry.html",{d:16418592e5,l:"2022年1月11日",c:["水果","草莓"],g:["红","小"],e:`<h1> 草莓</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:34},y:"a",t:"草莓",i:"pen-to-square"},[":md"]],["v-df8b6e0c","/posts/tomato.html",{d:16419456e5,l:"2022年1月12日",c:["蔬菜"],g:["红","圆"],u:!0,v:"/assets/images/cover2.jpg",e:`<h1> 番茄</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.13,words:38},y:"a",t:"番茄",i:"pen-to-square"},[":md"]],["v-71275d66","/tips/1.html",{d:1705824349e3,c:["knowledge"],e:`<ul>
<li>
<p>symbol：
<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol" target="_blank" rel="noopener noreferrer">symbol</a>
symbol 是一种基本数据类型,每个从 Symbol() 返回的 symbol 值都是<mark>唯一的</mark>,因此一般作为对象属性的标识符</p>
</li>
<li>
<p>arguments:
<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/arguments" target="_blank" rel="noopener noreferrer">arguments</a>
arguments 是所有（<mark>非箭头</mark>）函数中都可用的局部变量，类似于 Array，但只能使用 length 属性和索引元素<br>
如果想使用其他 Array 属性，可以将其转换为 Array 数组，或是调用 Array 的方法</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//转换为 Array</span>
<span class="token keyword">const</span> args <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token comment">//调用Array的方法</span>
<span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>
</ul>`,r:{minutes:.48,words:145},y:"a",t:"tips",O:1},[":md"]],["v-39d0d2b8","/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/%E5%89%8D%E6%AE%B5%E6%A8%A1%E5%9D%97%E5%8C%96%E7%9A%84%E6%BC%94%E8%BF%9B.html",{d:1709804676e3,c:["前端工程化"],e:`<h1> 无模块化标准阶段</h1>
<h2> 1.文件划分</h2>
<p>文件划分方式是最原始的模块化实现，将逻辑分散在不同的应用中，然后通过 HTML 中的 script 来逐一引入</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// moudle-a</span>
<span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token string">"data"</span><span class="token punctuation">;</span>
<span class="token comment">// moudle-b</span>
<span class="token keyword">function</span> <span class="token function">method</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"execute method"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.2,words:359},y:"a",t:"前端模块化的演进",O:1},["/前端工程化/前段模块化的演进.html","/前端工程化/前段模块化的演进.md",":md"]],["v-40fb11e6","/javascript/apple/1.html",{d:16409952e5,l:"2022年1月1日",c:["苹果"],g:["红","大","圆"],e:`<h1> 苹果 1</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:34},y:"a",t:"苹果 1",i:"pen-to-square"},[":md"]],["v-42afea85","/javascript/apple/2.html",{d:16410816e5,l:"2022年1月2日",c:["苹果"],g:["红","大","圆"],e:`<h1> 苹果 2</h1>
<p>一个被星标了的苹果文章。</p>
`,r:{minutes:.16,words:48},y:"a",t:"苹果 2",i:"pen-to-square"},[":md"]],["v-4464c324","/javascript/apple/3.html",{d:1641168e6,l:"2022年1月3日",c:["苹果","水果"],g:["红","大","圆"],e:`<h1> 苹果 3</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.12,words:36},y:"a",t:"苹果 3",i:"pen-to-square"},[":md"]],["v-46199bc3","/javascript/apple/4.html",{d:16412544e5,l:"2022年1月4日",c:["苹果","水果"],g:["红","大","圆"],e:`<h1> 苹果 4</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.12,words:36},y:"a",t:"苹果 4",i:"pen-to-square"},[":md"]],["v-67b8c712","/posts/apple/1.html",{d:16409952e5,l:"2022年1月1日",c:["苹果"],g:["红","大","圆"],e:`<h1> 苹果 1</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.11,words:34},y:"a",t:"苹果 1",i:"pen-to-square"},[":md"]],["v-696d9fb1","/posts/apple/2.html",{d:16410816e5,l:"2022年1月2日",c:["苹果"],g:["红","大","圆"],e:`<h1> 苹果 2</h1>
<p>一个被星标了的苹果文章。</p>
`,r:{minutes:.16,words:48},y:"a",t:"苹果 2",i:"pen-to-square"},[":md"]],["v-6b227850","/posts/apple/3.html",{d:1641168e6,l:"2022年1月3日",c:["苹果","水果"],g:["红","大","圆"],e:`<h1> 苹果 3</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.12,words:36},y:"a",t:"苹果 3",i:"pen-to-square"},[":md"]],["v-6cd750ef","/posts/apple/4.html",{d:16412544e5,l:"2022年1月4日",c:["苹果","水果"],g:["红","大","圆"],e:`<h1> 苹果 4</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.12,words:36},y:"a",t:"苹果 4",i:"pen-to-square"},[":md"]],["v-7a07405d","/posts/banana/1.html",{d:16413408e5,l:"2022年1月5日",c:["香蕉","水果"],g:["黄","弯曲的","长"],e:`<h1> 香蕉 1</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.13,words:38},y:"a",t:"香蕉 1",i:"pen-to-square"},[":md"]],["v-7bbc18fc","/posts/banana/2.html",{d:16414272e5,l:"2022年1月6日",c:["香蕉","水果"],g:["黄","弯曲的","长"],e:`<h1> 香蕉 2</h1>
<p>一个被数字 <code>10</code> 星标了的香蕉文章。</p>
`,r:{minutes:.18,words:55},y:"a",t:"香蕉 2",i:"pen-to-square"},[":md"]],["v-7d70f19b","/posts/banana/3.html",{d:16415136e5,l:"2022年1月7日",c:["香蕉"],g:["黄","弯曲的","长"],e:`<h1> 香蕉 3</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.12,words:36},y:"a",t:"香蕉 3",i:"pen-to-square"},[":md"]],["v-7f25ca3a","/posts/banana/4.html",{d:16416e8,l:"2022年1月8日",c:["香蕉"],g:["黄","弯曲的","长"],e:`<h1> 香蕉 4</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.12,words:36},y:"a",t:"香蕉 4",i:"pen-to-square"},[":md"]],["v-4526f0a1","/posts/vue/%E4%B8%80.html",{d:16417728e5,l:"2022年1月10日",c:["火龙果","水果"],g:["红","大"],e:`<h1> 火龙果</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.12,words:36},y:"a",t:"火龙果",i:"pen-to-square"},["/posts/vue/一.html","/posts/vue/一.md",":md"]],["v-c80a2912","/posts/vue/%E4%BA%8C.html",{d:16417728e5,l:"2022年1月10日",c:["火龙果","水果"],g:["红","大"],e:`<h1> 火龙果</h1>
<h2> 标题 2</h2>
<p>这里是内容。</p>
<h3> 标题 3</h3>
<p>这里是内容。</p>
`,r:{minutes:.12,words:36},y:"a",t:"火龙果",i:"pen-to-square"},["/posts/vue/二.html","/posts/vue/二.md",":md"]],["v-6f659f6a","/vue-learn/%E5%93%8D%E5%BA%94%E5%BC%8F/1.html",{d:1705824349e3,c:["使用指南"],e:`<h2> 开启 sourceMap</h2>
<p><code>SourceMap</code>存储了代码打包转换后的位置信息，维护了打包前后的代码映射关系</p>
<blockquote>
<p>build.js</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"minimist"</span><span class="token punctuation">)</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> sourceMap <span class="token operator">=</span> args<span class="token punctuation">.</span>sourcemap <span class="token operator">||</span> args<span class="token punctuation">.</span>s<span class="token punctuation">;</span>

<span class="token keyword">await</span> <span class="token function">execa</span><span class="token punctuation">(</span>
  <span class="token string">"rollup"</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>
    <span class="token string">"-c"</span><span class="token punctuation">,</span>
    <span class="token string">"--environment"</span><span class="token punctuation">,</span>
    <span class="token punctuation">[</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">COMMIT:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>commit<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">NODE_ENV:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>env<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">TARGET:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>target<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      formats <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">FORMATS:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>formats<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      buildTypes <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">TYPES:true</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      prodOnly <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">PROD_ONLY:true</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      sourceMap <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">SOURCE_MAP:true</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span>
      <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">stdio</span><span class="token operator">:</span> <span class="token string">"inherit"</span> <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.58,words:174},y:"a",t:"一、针对源码中进行debuuger",i:"laptop-code",O:1},["/vue-learn/响应式/1.html","/vue-learn/响应式/1.md",":md"]],["v-7d815238","/vue-learn/%E5%93%8D%E5%BA%94%E5%BC%8F/10.html",{d:1705824349e3,c:["使用指南","vue"],e:`<h2> 参考链接</h2>
<p><a href="https://juejin.cn/post/6844904147804749832" target="_blank" rel="noopener noreferrer">Vue 中$nextTick 源码解析</a></p>
<h2> nextTick 的应用场景与用法</h2>
<p>Vue 在更新 DOM 时是异步执行的(微任务)，只要侦听到数据变化，Vue 将开启一个队列，并缓冲在同一事件循环中发生的所有数据变更</p>
<p>这样是为了在缓冲时去除重复数据对于避免不必要的计算和 DOM 操作，提升性能。比如主线程中更新 DOM，循环 100 次就要更新 100 次 DOM；而如果等事件循环完成之后更新 DOM，只需要更新 1 次。</p>`,r:{minutes:2.67,words:801},y:"a",t:"nextTick的用法与原理",i:"laptop-code",O:10},["/vue-learn/响应式/10.html","/vue-learn/响应式/10.md",":md"]],["v-711a7809","/vue-learn/%E5%93%8D%E5%BA%94%E5%BC%8F/2.html",{d:1705824349e3,c:["使用指南"],e:`<h2> 初始化框架</h2>
<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> init <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:.89,words:268},y:"a",t:"二、搭建框架",i:"laptop-code",O:2},["/vue-learn/响应式/2.html","/vue-learn/响应式/2.md",":md"]],["v-72cf50a8","/vue-learn/%E5%93%8D%E5%BA%94%E5%BC%8F/3.html",{d:1705824349e3,c:["使用指南"],e:`<p>https://juejin.cn/post/7084200479005081608</p>
<h2> 数据劫持</h2>
<p>核心：<code>Object.defineProperty</code>
https://juejin.cn/post/6995071499098914824</p>
<ol>
<li>定义 Observer 对 data 进行递归，确保每个嵌套属性都会被劫持</li>
</ol>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Observer</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 用于深度监听时的判断，如果不是对象和空值，就不继续向下执行</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data <span class="token operator">!==</span> <span class="token string">"object"</span> <span class="token operator">||</span> data <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> data<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 如果是数组，重写数组原型的方法</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      Object<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> newArrayProtype<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//当data里的数据是对象时，再次调用Observer对其进行遍历，确保每个属性都被劫持 (数组也是对象类型)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">"object"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">Observer</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">defineReactive</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> key<span class="token punctuation">,</span> data<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.75,words:524},y:"a",t:"三、vue2的响应性核心Object.defineProperty",i:"laptop-code",O:3},["/vue-learn/响应式/3.html","/vue-learn/响应式/3.md",":md"]],["v-74842947","/vue-learn/%E5%93%8D%E5%BA%94%E5%BC%8F/4.html",{d:1705824349e3,c:["使用指南"],e:`<h2> Proxy</h2>
<p>Proxy 可以对对象进行代理,代理对象的每个属性都可以触发 get 和 set，还可以监听到属性的添加和删除</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> origin <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"ytx"</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token string">"23"</span><span class="token punctuation">,</span>
  <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
  <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>origin<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token comment">// 被代理对象，key,新值,代理对象</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> recevier<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"setter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> recevier<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> recevier<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"getter"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> recevier<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 通过代理对象才可以触发set和get</span>
proxy<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
proxy<span class="token punctuation">.</span>get<span class="token punctuation">;</span>

<span class="token comment">// 可以触发set</span>
proxy<span class="token punctuation">.</span>add <span class="token operator">=</span> <span class="token string">"new"</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.28,words:383},y:"a",t:"四、vue3的响应性核心Proxy",i:"laptop-code",O:4},["/vue-learn/响应式/4.html","/vue-learn/响应式/4.md",":md"]],["v-763901e6","/vue-learn/%E5%93%8D%E5%BA%94%E5%BC%8F/5.html",{d:1705824349e3,c:["使用指南"],e:`<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> <span class="token punctuation">{</span> reactive<span class="token punctuation">,</span> effect <span class="token punctuation">}</span> <span class="token operator">=</span> Vue<span class="token punctuation">;</span>
  <span class="token keyword">const</span> origin <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"张三"</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span>origin<span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> obj<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    obj<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"reckless shopkeeper"</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.42,words:425},y:"a",t:"五、通过例子追踪源码的响应性",i:"laptop-code",O:5},["/vue-learn/响应式/5.html","/vue-learn/响应式/5.md",":md"]],["v-77edda85","/vue-learn/%E5%93%8D%E5%BA%94%E5%BC%8F/6.html",{d:1705824349e3,c:["使用指南"],e:`<h2> 概述</h2>
<p>通过 Proxy 代理对象，通过 get 拦截中的 track 函数将对象属性涉及的 effect 函数存入一个 weakmap 中，结构如下；在 set 拦截器中依次触发 weakmap 中收集的 effect 函数</p>
<figure><img src="/assets/images/targetMap.png" alt="TargetMap的数据结构" tabindex="0" loading="lazy"><figcaption>TargetMap的数据结构</figcaption></figure>
<figure><img src="/assets/images/reactive.drawio.png" alt="reactive思路" tabindex="0" loading="lazy"><figcaption>reactive思路</figcaption></figure>`,r:{minutes:5.08,words:1524},y:"a",t:"六、实现Reactive和Effect函数",i:"laptop-code",O:6},["/vue-learn/响应式/6.html","/vue-learn/响应式/6.md",":md"]],["v-79a2b324","/vue-learn/%E5%93%8D%E5%BA%94%E5%BC%8F/7.html",{d:1705824349e3,c:["使用指南"],e:`<figure><img src="/assets/images/ref.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<h2> get 与 set 关键字</h2>
<ul>
<li>get
get 关键字将对象属性与函数进行绑定，当属性被访问时，对应函数被执行
例如：</li>
</ul>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">log</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"example"</span><span class="token punctuation">,</span> <span class="token string">"test"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token keyword">get</span> <span class="token function">latest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>log<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>log<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>log<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>latest<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 输出："test".</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.12,words:636},y:"a",t:"七、实现ref函数",i:"laptop-code",O:7},["/vue-learn/响应式/7.html","/vue-learn/响应式/7.md",":md"]],["v-7b578bc3","/vue-learn/%E5%93%8D%E5%BA%94%E5%BC%8F/8.html",{d:1705824349e3,c:["使用指南"],e:`<h2> 构造 ComputedRefImpl 类</h2>
<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">computed</span><span class="token punctuation">(</span>getterOrOptions<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> getter<span class="token punctuation">;</span>
  <span class="token keyword">const</span> only_getter <span class="token operator">=</span> <span class="token function">isFunction</span><span class="token punctuation">(</span>getterOrOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>only_getter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    getter <span class="token operator">=</span> getterOrOptions<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//getter保存的是computed接受的函数</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ComputedRefImpl</span><span class="token punctuation">(</span>getter<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// ComputedRefImpl与Ref有些类似，都是通过.value来触发get value</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">ComputedRefImpl<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  <span class="token comment">// dep收集的是与ComputedRefImpl.value相关的effect函数</span>
  <span class="token keyword">public</span> dep<span class="token operator">?</span><span class="token operator">:</span> Dep <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
  <span class="token comment">// _value是ComputedRefImpl的值</span>
  <span class="token keyword">private</span> _value<span class="token operator">!</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> effect<span class="token operator">:</span> ReactiveEffect<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
  <span class="token keyword">public</span> <span class="token keyword">readonly</span> __v_isRef <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token comment">//_dirty用于缓存</span>
  <span class="token keyword">public</span> _dirty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span>getter<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 创建一个具有scheduler的ReactiveEffect类，这个scheduler用于触发依赖</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReactiveEffect</span><span class="token punctuation">(</span>getter<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>_dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token function">triggerRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>effect<span class="token punctuation">.</span>computed <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">get</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 收集依赖</span>
    <span class="token function">trackRefValue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>_dirty<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 运行getter，重新计算._value的值并返回</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_value <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>effect<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_dirty <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.54,words:762},y:"a",t:"八、实现coputed函数",i:"laptop-code",O:8},["/vue-learn/响应式/8.html","/vue-learn/响应式/8.md",":md"]],["v-7d0c6462","/vue-learn/%E5%93%8D%E5%BA%94%E5%BC%8F/9.html",{d:1705824349e3,c:["使用指南"],e:`<h2> 参考</h2>
<p><a href="https://juejin.cn/post/7098303741278814221" target="_blank" rel="noopener noreferrer">链接</a></p>
<h2> 完善 effect 函数</h2>
<ol>
<li>懒执行
为 effect 函数添加了参数 options，包括<code>lazy</code>和<code>scheduler</code>,其中<code>lazy</code>用于控制懒加载，<code>scheduler</code>将复制给<code>ReactiveEffect</code>对象
<blockquote>
<p>reactivity/effect.ts</p>
</blockquote>
</li>
</ol>`,r:{minutes:3.09,words:927},y:"a",t:"九、实现watch函数",i:"laptop-code",O:8},["/vue-learn/响应式/9.html","/vue-learn/响应式/9.md",":md"]],["v-125607ee","/vue-learn/%E7%BC%96%E8%AF%91%E5%99%A8/1.html",{d:1705824349e3,c:["使用指南"],e:`<h2> 基础概念</h2>
<p>编译器其实只是一段程序，它用来将“一种语言 A”翻译成“另外一种语言 B”。其中，语言 A 通常叫作源代码，语言 B 通常叫作目标代码。<br>
完整的编译过程通常包含词法分析、语法分析、语义分析、中间代码生成、优化、目标代码生成等步骤。<br>
其中词法分析、语法分析和语义分析称为编译前端，与目标平台无关；中间代码生成和优化以及目标代码生成称为变异后端，与目标平台有关</p>
<h2> vue.js 编译器的工作流程</h2>
<ol>
<li>首先对模版进行语法分析和词法分析，通过 parser 函数实现，得到模版 AST(抽象语法树)</li>
<li>将模板 AST 转换（transformer 函数）成 JavaScript AST</li>
<li>根据 JavaScript AST 生成（generater 函数） JavaScript 代码，即渲染函数代码</li>
</ol>`,r:{minutes:2,words:599},y:"a",t:"一、编译器基础",i:"laptop-code",O:1},["/vue-learn/编译器/1.html","/vue-learn/编译器/1.md",":md"]],["v-632c4f45","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/1.html",{d:1705824349e3,c:["面试"],e:`<p><a href="https://juejin.cn/post/7067780709548720136" target="_blank" rel="noopener noreferrer">链接</a></p>
<h2> 1 进程与线程</h2>
<ul>
<li>进程：计算机已经运行的程序，是操作系统管理程序的一种方式</li>
<li>线程：操作系统能够运行运算调度的最小单位，每一个进程中，都会至少创建一个线程用来执行程序中的代码，这个线程叫做主线程</li>
</ul>
<p>操作系统是通过在多个进程间迅速切换实现让多个进程同时工作，当进程中的线程获取到时间片时，就可以快速执行我们编写的代码</p>`,r:{minutes:2.26,words:679},y:"a",t:"浏览器的事件循环",O:1},["/前端笔记/js/1.html","/前端笔记/js/1.md",":md"]],["v-02909dbd","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/10.html",{d:1705824349e3,c:["面试","JS"],e:`<h2> 参考连接</h2>
<p><a href="https://juejin.cn/post/7080187400298692644#heading-2" target="_blank" rel="noopener noreferrer">5 分钟快速手写实现：new</a></p>
<h2> new 的作用</h2>
<p>new 用于实例化构造函数，主要是有以下几个步骤：</p>
<ol>
<li>创建一个空的对象 newObject，作为实例的上下文；</li>
<li>将类上的原型放在 newObject 的原型链上，使得 newObject 可以调用类中定义的函数；</li>
<li>将 newObject 作为 this，执行构造函数；</li>
<li>判断类执行后是否有返回一个对象，如果有，则返回该对象；如果没有，则返回 newObject;</li>
</ol>`,r:{minutes:1.74,words:521},y:"a",t:"this与手写new",O:7},["/前端笔记/js/10.html","/前端笔记/js/10.md",":md"]],["v-0445765c","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/11.html",{d:1705824349e3,c:["面试","JS"],e:`<h2> 参考链接</h2>
<p><a href="https://juejin.cn/post/6844903854882947080#heading-8" target="_blank" rel="noopener noreferrer">【JS 进阶】你真的掌握变量和类型了吗</a></p>
<h2> 数据类型与变量</h2>
<p>ECMAScript 标准规定了 7 种数据类型，其把这 7 种数据类型又分为两种：原始类型和对象类型</p>
<p>原始类型：</p>
<ul>
<li>Null</li>
<li>Undefined</li>
<li>Boolean</li>
<li>Number</li>
<li>String</li>
<li>Symbol：一种实例是唯一且不可改变的数据类型</li>
</ul>`,r:{minutes:2.78,words:833},y:"a",t:"数据类型与变量",O:11},["/前端笔记/js/11.html","/前端笔记/js/11.md",":md"]],["v-99db8cbe","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/12.%E6%89%8B%E5%86%99%E6%B7%B1%E6%8B%B7%E8%B4%9D.html",{d:1710073278e3,c:["面试","JS"],e:`<h2> 深拷贝与浅拷贝</h2>
<p>浅拷贝：如果属性是基本类型，拷贝的就是基本类型的值；如果属性是引用类型，拷贝的就是内存地址 ，如果其中一个对象改变了这个地址，就会影响到另一个对象</p>
<p>深拷贝：将一个对象从内存中完整的拷贝一份出来,从堆内存中开辟一个新的区域存放新对象,且修改新对象不会影响原对象</p>
<h2> 基础版</h2>
<p>通过递归，将一个对象的所有 key 复制给新建的空对象</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">clone</span><span class="token punctuation">(</span><span class="token parameter">source</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 堆内存开辟一个新的区域</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>source <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> source <span class="token operator">===</span> <span class="token string">"object"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> target <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 递归，防止source[key]也是一个对象</span>
      target<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">clone</span><span class="token punctuation">(</span>source<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> target<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> source<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.25,words:975},y:"a",t:"手写深拷贝",O:12},["/前端笔记/js/12.手写深拷贝.html","/前端笔记/js/12.手写深拷贝.md",":md"]],["v-58cd5109","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/14.%E9%98%B2%E6%8A%96%E4%B8%8E%E8%8A%82%E6%B5%81.html",{d:1710073278e3,c:["面试","JS"],e:`<h2> 参考链接</h2>
<p><a href="https://juejin.cn/post/7032905194736189477#heading-14" target="_blank" rel="noopener noreferrer">JS 手写题-防抖-节流</a>
<a href="https://juejin.cn/post/7016502001911463950?searchId=202312291442165C3D171345B548DFCF86#heading-6" target="_blank" rel="noopener noreferrer">一杯茶的时间 🍵，带你彻底学会手写防抖节流</a></p>`,r:{minutes:2.74,words:821},y:"a",t:"手写防抖与节流",O:14},["/前端笔记/js/14.防抖与节流.html","/前端笔记/js/14.防抖与节流.md",":md"]],["v-0966a248","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/15.Symbol%E7%9A%84%E4%BD%9C%E7%94%A8.html",{d:1705824349e3,c:["面试","JS"],e:`<h2> symbol 的特点</h2>
<ol>
<li>
<p>可以作为对象属性名,只有字符串和 symbol 类型才能用作对象属性名</p>
</li>
<li>
<p>没有两个 symbol 的值是相等的</p>
</li>
</ol>
<p>注意：symbol 是 JavaScript 原始数据类型，不能使用 new 来构造</p>
<h2> 描述信息</h2>
<p>Symbol()函数只有一个参数，字符串 description，用于辅助调试。需要注意的是两个具有相同 description 的 symbol 也是不相等的</p>
<p>如果想要一个全局的 Symbol, 则需要通过<code>Symbol.for()</code>来创建 symbol，这样会在全局注册表中进行注册，<code>Symbol.keyFor()</code>可以通过 description 查询应的 Symbol 是否在全局注册表中</p>`,r:{minutes:1.73,words:520},y:"a",t:"Symbol的作用",O:15},["/前端笔记/js/15.Symbol的作用.html","/前端笔记/js/15.Symbol的作用.md",":md"]],["v-0a3c8135","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/16.%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1%E7%9A%84%E6%96%B9%E6%B3%95.html",{d:1705824349e3,c:["面试","JS"],e:`<h2> 参考链接</h2>
<p><a href="https://juejin.cn/post/7129374520015585317" target="_blank" rel="noopener noreferrer">遍历对象的 7 种方法</a></p>
<h2> 补充：可枚举属性和不可枚举属性</h2>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty" target="_blank" rel="noopener noreferrer">Object.defineProperty()</a> 静态方法会直接在一个对象上定义一个新属性，或修改其现有属性，并返回此对象</p>`,r:{minutes:1.52,words:456},y:"a",t:"遍历对象的方法",O:16},["/前端笔记/js/16.遍历对象的方法.html","/前端笔记/js/16.遍历对象的方法.md",":md"]],["v-dc280cae","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/17.%E6%95%B0%E7%BB%84%E5%8E%BB%E9%87%8D%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E6%B3%95.html",{d:1710073278e3,c:["面试","JS"],e:`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token string">"true"</span><span class="token punctuation">,</span>
  <span class="token string">"true"</span><span class="token punctuation">,</span>
  <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token number">15</span><span class="token punctuation">,</span>
  <span class="token number">15</span><span class="token punctuation">,</span>
  <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token number">NaN</span><span class="token punctuation">,</span>
  <span class="token number">NaN</span><span class="token punctuation">,</span>
  <span class="token string">"NaN"</span><span class="token punctuation">,</span>
  <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token string">"a"</span><span class="token punctuation">,</span>
  <span class="token string">"a"</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"ytx"</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">unique</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. ES6 set：代码简洁，但兼容性差，无法对{}去重</span>
  <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 2. filter + indexof</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 当前元素的索引是否等于第一次出现的索引，无法对{}去重</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">===</span> index<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 3.利用ownPorperty：用一个对象保存数组中出现过的元素，对象的key通过类型名+元素名字符串拼接的方式进行存储，防止出现同名但不同类型的数据</span>
  <span class="token comment">// 可以对空对象去重，但是所有对象的key是一样的，会导致非重复对象也被去除</span>
  <span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> item <span class="token operator">+</span> item<span class="token punctuation">)</span>
      <span class="token operator">?</span> <span class="token boolean">false</span>
      <span class="token operator">:</span> <span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token keyword">typeof</span> item <span class="token operator">+</span> item<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token comment">//   4. reduce:reduce() 方法对数组中的每个元素按序执行提供的函数，每一次运行 reducer 会将先前元素的计算结果作为参数传入，最后将其结果汇总为单个返回值</span>
  <span class="token comment">// 无法对数组去重</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> cur</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 如果数组中不存在, 将cur和prev结构到一个新的数组，作为下次计算的结果</span>
    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>prev<span class="token punctuation">)</span> <span class="token operator">?</span> prev <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>prev<span class="token punctuation">,</span> cur<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">unique</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.12,words:335},y:"a",t:"数组去重的几种方法",O:17},["/前端笔记/js/17.数组去重的几种方法.html","/前端笔记/js/17.数组去重的几种方法.md",":md"]],["v-ad785c40","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/18.%E6%89%8B%E5%86%99Promise.html",{d:1710583872e3,c:["面试","JS"],e:`<h3> 参考链接</h3>
<p><a href="https://zhuanlan.zhihu.com/p/183801144" target="_blank" rel="noopener noreferrer">手写 Promise</a></p>
<h3> 基础版 Promise</h3>
<p>todo:</p>
<ul>
<li>构建 Promise 对象时，需要传入一个 executor 函数，Promise 的主要业务流程都在 executor 函数中执行</li>
<li>promise 有三个状态：pending，fulfilled，or reject</li>
<li>executor 函数接受两个函数 resolve 和 reject，如果运行在 excutor 函数中的业务执行成功了，会调用 resolve 函数；如果执行失败了，则调用 reject 函数</li>
<li>Promise 的状态不可逆，同时调用 resolve 函数和 reject 函数，默认会采取第一次调用的结果</li>
</ul>`,r:{minutes:7.39,words:2216},y:"a",t:"手写Promise",O:18},["/前端笔记/js/18.手写Promise.html","/前端笔记/js/18.手写Promise.md",":md"]],["v-64e127e4","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/2.html",{d:1705824349e3,c:["面试"],e:`<p><a href="https://juejin.cn/post/7150668494827339807" target="_blank" rel="noopener noreferrer">总结</a></p>
<p><a href="https://juejin.cn/post/7063377198014529572#heading-5" target="_blank" rel="noopener noreferrer">api：all/race/...</a></p>
<p><a href="https://juejin.cn/post/6844904131702833159" target="_blank" rel="noopener noreferrer">应用场景</a></p>`,r:{minutes:.08,words:23},y:"a",t:"Promise",O:2},["/前端笔记/js/2.html","/前端笔记/js/2.md",":md"]],["v-66960083","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/3.html",{d:1705824349e3,c:["面试"],e:`<p><a href="https://segmentfault.com/a/1190000007535316" target="_blank" rel="noopener noreferrer">总结</a></p>
<h2> async 的作用</h2>
<p>如果在函数中 return 一个直接量，async 会把这个直接量通过 Promise.resolve() 封装成 Promise 对象</p>
<h2> async/await 的注意点</h2>
<ul>
<li>await 同一行后面应该跟着一个 Promise 对象，如果不是，需要转换（如果是常量会自动转换）</li>
<li>await 同一行后面的内容对应 Promise 主体内容，即<mark>同步执行的</mark></li>
<li>await 下一行的内容对应 then()里面的内容，是<mark>异步执行的</mark></li>
</ul>`,r:{minutes:2.87,words:862},y:"a",t:"async/await",O:3},["/前端笔记/js/3.html","/前端笔记/js/3.md",":md"]],["v-684ad922","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/4.html",{d:1705824349e3,c:["面试"],e:`<h2> 模块化</h2>
<p>模块化的目的：</p>
<ul>
<li>代码抽象</li>
<li>代码封装</li>
<li>代码复用</li>
<li>依赖管理</li>
</ul>
<p>如果不进行模块化，变量和方法不容易维护，容易污染全局作用域；依赖的环境主观逻辑偏重，代码较多就会比较复杂。</p>
<h2> CommonJS 模块化方法</h2>
<p>CommonJS 是一套 Javascript 模块规范，用于服务端,定义一个模块导出通过 exports 或者 module.exports 挂载即可
CommonJS 具有如下特点：</p>
<ul>
<li>所有代码都运行在模块作用域，不会污染全局作用域</li>
<li>模块是同步加载的，即只有加载完成，才能执行后面的操作</li>
<li>模块在首次执行后就会缓存，再次加载只返回缓存结果，如果想要再次执行，可清除缓存</li>
<li>require 返回的值是被输出的值的拷贝，模块内部的变化也不会影响这个值</li>
</ul>`,r:{minutes:1.46,words:437},y:"a",t:"ES6与CommonJS模块化的区别",O:4},["/前端笔记/js/4.html","/前端笔记/js/4.md",":md"]],["v-69ffb1c1","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/5.html",{d:1705824349e3,c:["面试","ES6"],e:`<h2> 迭代器 Iterator</h2>
<p>Iterator 是一个迭代器，实现了这个接口就可进行 for...of 遍历，即对象有 Symbol.iterator 属性。原生已实现该接口的数据类型有 Array、Map、Set、NodeList、String 以及函数的 arguments 对象。</p>
<h2> 实现 Symbole.iterator 方法</h2>
<p>对象中增加方法名为 Symbol 类型 Symbole.iterator 的方法，该方法返回一个对象，并且对象要有一个 next 方法，next 方法又要返回一个包含 value(任意类型)和 done(布尔值)属性的对象。</p>`,r:{minutes:.77,words:230},y:"a",t:"symbol.iterator",O:5},["/前端笔记/js/5.html","/前端笔记/js/5.md",":md"]],["v-6bb48a60","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/6.html",{d:1705824349e3,c:["面试","ES6"],e:`<h2> Generator 函数</h2>
<p>Generator 函数会返回一个遍历器对象，可以依次遍历 Generator 函数内部的每一个状态
定义方法：function 关键字与函数名之间加一个星号</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// some code</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.32,words:995},y:"a",t:"generator",O:6},["/前端笔记/js/6.html","/前端笔记/js/6.md",":md"]],["v-6d6962ff","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/7.html",{d:1705824349e3,c:["面试","ES6"],e:`<h2> 参考链接</h2>
<p><a href="https://juejin.cn/post/6948712756430241823" target="_blank" rel="noopener noreferrer">参考链接</a></p>
<h2> 思路</h2>
<blockquote>
<p>使用 call</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span> arg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1, 2</span>
<span class="token punctuation">}</span>

<span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.15,words:344},y:"a",t:"手写call",O:8},["/前端笔记/js/7.html","/前端笔记/js/7.md",":md"]],["v-6f1e3b9e","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/8.html",{d:1705824349e3,c:["面试","ES6"],e:`<h2> 实现</h2>
<p>apply 和 call 的原理相同，只是传参的方式有所不同，apply 传入的参数是数组形式</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 入参的方式不同</span>
<span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">apply1</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  context <span class="token operator">=</span> context <span class="token operator">||</span> window<span class="token punctuation">;</span>

  <span class="token comment">// 给传入的对象添加属性，值为当前函数</span>
  <span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>

  <span class="token comment">// 判断第二个参数是否存在，不存在直接执行，否则拼接参数执行，并存储函数执行结果</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span>
    args<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> context<span class="token punctuation">[</span>fn<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 删除新增属性</span>
  <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>

  <span class="token comment">// 返回函数执行结果</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.49,words:148},y:"a",t:"手写apply",O:9},["/前端笔记/js/8.html","/前端笔记/js/8.md",":md"]],["v-70d3143d","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/9.html",{d:1705824349e3,c:["面试","ES6"],e:`<h2> 思路</h2>
<p>bind 与 call 和 apply 有一定的区别，因此在实现上差异较大：</p>
<ul>
<li>call 与 apply 是在调用时临时修改 this 指向并立即执行一次；而 bind 是永久修改 this 指向且不会立即执行，返回的是一个修改 this 指向后的函数</li>
<li>bind 能够多次接受参数，调用 bind 时传入，返回的函数调用时接受参数</li>
</ul>
<h2> bind 第一版</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myBind</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context<span class="token punctuation">,</span> <span class="token operator">...</span>preArgs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 箭头函数没有this，因此无法调用bind，这里需要排除</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">"function"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  context <span class="token operator">=</span> context <span class="token operator">||</span> window<span class="token punctuation">;</span>

  <span class="token comment">// 保存当前的this</span>
  <span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span>

  <span class="token comment">// 闭包，返回一个函数</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token function">Fn</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 调用apply，将外面传递的参数和里面传递的参数合并</span>
    <span class="token keyword">return</span> <span class="token function">that</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>preArgs<span class="token punctuation">,</span><span class="token operator">...</span>args<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.53,words:758},y:"a",t:"手写bind",O:10},["/前端笔记/js/9.html","/前端笔记/js/9.md",":md"]],["v-9fc14a42","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/%E6%9D%82%E8%AE%B0.html",{d:1705824349e3,c:["面试","JS"],e:`<h2> set</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// newSet并不会成为一个嵌套的set；而是与set的结构相同</span>
<span class="token keyword">const</span> newSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>set<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 利用这一点可以实现如下的遍历；而直接对set遍历会进入死循环</span>
newSet<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  set<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"遍历中"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.85,words:255},y:"a",t:"杂记",O:100},["/前端笔记/js/杂记.html","/前端笔记/js/杂记.md",":md"]],["v-1ff2a25a","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/vue/1.html",{d:1705824349e3,c:["面试"],e:`<h2> 参考链接</h2>
<p><a href="https://juejin.cn/post/7116336664540086286" target="_blank" rel="noopener noreferrer">hash 和 history 路由的区别</a>
<a href="https://juejin.cn/post/6861586972696444942" target="_blank" rel="noopener noreferrer">前端路由模式详解 hash 和 history</a></p>
<h2> SPA 与前端路由</h2>
<p>SPA（单页面应用，Single-page Web applications）指的是只有一张 Web 页面的应用，在一个项目中只有一个 html 页面，它在第一次加载页面时，将唯一完成的 html 页面和所有其余页面组件一起下载下来，所有的组件的展示与切换都在这唯一的页面中完成，这样切换页面时，不会重新加载整个页面，而是通过路由来实现不同组件之间的切换<br>
核心：更新视图而不重新请求页面</p>`,r:{minutes:2.28,words:685},y:"a",t:"hash路由和history路由的区别",O:1},["/前端笔记/vue/1.html","/前端笔记/vue/1.md",":md"]],["v-1d38721f","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/%E5%9C%BA%E6%99%AF/%E8%99%9A%E6%8B%9F%E5%88%97%E8%A1%A8.html",{d:1710164579e3,c:["面试"],e:`<h2> 参考链接</h2>
<p><a href="https://juejin.cn/post/7215114042494844988#heading-7" target="_blank" rel="noopener noreferrer">参考链接</a></p>
<h2> 目的</h2>
<p>长列表渲染一直以来都是前端比较头疼的一个问题，如果想要在网页中放大量的列表项，纯渲染的话，对于浏览器性能将会是个极大的挑战，会造成滚动卡顿，整体体验非常不好，主要有以下问题：</p>
<ul>
<li>页面等待时间极长，白屏时间久，用户体验差</li>
<li>CPU 计算能力不够，滑动会卡顿</li>
<li>GPU 渲染能力不够，页面会跳屏</li>
<li>RAM 内存容量不够，浏览器崩溃</li>
</ul>`,r:{minutes:1.06,words:318},y:"a",t:"虚拟列表",O:1},["/前端笔记/场景/虚拟列表.html","/前端笔记/场景/虚拟列表.md",":md"]],["v-5d219e5e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/1.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 二叉树基础</h2>
<p><a href="https://www.programmercarl.com/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html#%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E7%A7%8D%E7%B1%BB" target="_blank" rel="noopener noreferrer">二叉树基础</a></p>
<h2> 二叉树存储方式</h2>
<p>通常采用链式存储的方式，存储当前节点元素以及左指针和右指针</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">TreeNode</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> val<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>left <span class="token operator">=</span> left <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> left<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>right <span class="token operator">=</span> right <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> right<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.41,words:122},y:"a",t:"二叉树基础",O:1},["/算法题/二叉树/1.html","/算法题/二叉树/1.md",":md"]],["v-5ca9edb1","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/10.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 题目连接</h2>
<p><a href="https://leetcode.cn/problems/search-in-a-binary-search-tree/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>利用搜索二叉树的性质：右节点&gt;中间节点&gt;左节点</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">searchBST</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> root<span class="token punctuation">.</span>val <span class="token operator">==</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> root<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">searchBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">searchBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.29,words:87},y:"a",t:"二叉搜索树中的搜索",O:10},["/算法题/二叉树/10.html","/算法题/二叉树/10.md",":md"]],["v-5e5ec650","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/11.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/validate-binary-search-tree/description/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>注意：搜索二叉树并不是单纯的比较左节点小于中间节点，右节点大于中间节点；而是要比较<mark>左子树</mark>和<mark>右子树</mark></p>
<p>利用中序遍历的特点，将每个节点的值存入数组，然后查看这个数组是否满足从小到大的排序</p>
<h2> 实现</h2>`,r:{minutes:.58,words:173},y:"a",t:"二叉搜索树中的搜索",O:11},["/算法题/二叉树/11.html","/算法题/二叉树/11.md",":md"]],["v-60139eef","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/12.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-tree/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>对一个 root 而言，公共祖先（LCA）存在两种情况：</p>
<ol>
<li>p 或 q 分别在 root 的两侧，那么 LCA 就是 root</li>
<li>p、q 在 root 的同一侧，那么 LCA 就是 p 或者 q</li>
</ol>
<p><img src="/assets/images/ggzx2.jpg" alt="公共祖先的2种情况" loading="lazy">
根据上述的两种情况，当 root 从上往下遍历：</p>`,r:{minutes:1.39,words:418},y:"a",t:"二叉树的最近公共祖先",O:12},["/算法题/二叉树/12.html","/算法题/二叉树/12.md",":md"]],["v-637d502d","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/14.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/insert-into-a-binary-search-tree/" target="_blank" rel="noopener noreferrer">二叉搜索树中的插入操作</a></p>
<h2> 思路</h2>
<p>注意：插入是插入到叶子结点后面<br>
思路：递归重构每个节点的 left 和 right,根据 BST 的顺序，将 val 的值不断向下传递到对应的叶子节点，再比较插入到该节点的左侧还是右侧</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">insertIntoBST</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">root</span><span class="token operator">:</span> TreeNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token literal-property property">val</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span><span class="token operator">:</span> TreeNode <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token punctuation">{</span>
  <span class="token comment">// 只有当root为空的时候才进行插入操作，说明到达了叶子节点</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 小于当前node的值，向左传递</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    root<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token function">insertIntoBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    root<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token function">insertIntoBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 没到达叶子节点就返回当前节点，保持树原本的结构</span>
  <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.69,words:207},y:"a",t:"二叉搜索树中的插入操作",O:14},["/算法题/二叉树/14.html","/算法题/二叉树/14.md",":md"]],["v-653228cc","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/15.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/delete-node-in-a-bst/description/" target="_blank" rel="noopener noreferrer">删除二叉搜索树中的节点</a></p>
<h2> 思路</h2>
<p>与上一题插入节点思路有些类似，通过递归重构每个节点的 left 与 right，但是要考虑代删除节点的多种情况，具体见代码中的注释</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">deleteNode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">==</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 情况1：待删除的是叶子节点，那么返回null</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> root<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 情况2：待删除节点的左节点或右节点为空，返回另一侧的节点</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> root<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> root<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 左右节点都不为空，将右节点替代当前被删除的节点，同时将左节点插入到右节点的左子树的叶子节点后（搜索二叉树右子树&gt;左子树）</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>left <span class="token operator">&amp;&amp;</span> root<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> curNode <span class="token operator">=</span> root<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
      <span class="token comment">// 不端循环，直到找到左子树的叶子节点</span>
      <span class="token keyword">while</span> <span class="token punctuation">(</span>curNode<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        curNode <span class="token operator">=</span> curNode<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      curNode<span class="token punctuation">.</span>left <span class="token operator">=</span> root<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
      <span class="token keyword">return</span> root<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 重构left与right</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&gt;=</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    root<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token function">deleteNode</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&lt;=</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    root<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token function">deleteNode</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 如果没有找到，就返回root，保存树的结构不变</span>
  <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1,words:300},y:"a",t:"删除二叉搜索树中的节点",O:15},["/算法题/二叉树/15.html","/算法题/二叉树/15.md",":md"]],["v-66e7016b","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/16.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/convert-sorted-array-to-binary-search-tree/" target="_blank" rel="noopener noreferrer">将有序数组转换为二叉搜索树</a></p>
<h2> 思路</h2>
<p>因为是有序数组，所以数组中间的元素肯定是当前数组的中间节点，取出该元素，并将数组分为 left 与 right，继续递归构建左右子树
注意：数组长度可能是奇数也可能是偶数，如果是奇数，那么就取中间的元素；如果是偶数，取 mid 或者 mid-1 都可以：比如只剩两个元素 0 和 1，如果 mid 取 0，那么 1 就挂载 right；如果取得是 1，那么 0 就挂载 left</p>`,r:{minutes:.98,words:294},y:"a",t:"将有序数组转换为二叉搜索树",O:16},["/算法题/二叉树/16.html","/算法题/二叉树/16.md",":md"]],["v-689bda0a","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/17.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/trim-a-binary-search-tree/description/" target="_blank" rel="noopener noreferrer">修剪二叉搜索树</a></p>
<h2> 思路</h2>
<p>利用 BST 的特点，在重构过程中，如果某个节点的<code>val&lt;low</code>,那么跳过这个节点及其左节点，递归右节点；<code>val&gt;high</code>同理</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">trimBST</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> low<span class="token punctuation">,</span> high</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> low<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 跳过当前节点，只考虑右节点</span>
    <span class="token keyword">return</span> <span class="token function">trimBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> low<span class="token punctuation">,</span> high<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>val <span class="token operator">&gt;</span> high<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 跳过当前节点，只考虑左节点</span>
    <span class="token keyword">return</span> <span class="token function">trimBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> low<span class="token punctuation">,</span> high<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  root<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token function">trimBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> low<span class="token punctuation">,</span> high<span class="token punctuation">)</span><span class="token punctuation">;</span>
  root<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token function">trimBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> low<span class="token punctuation">,</span> high<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 如果不有出现上面的情况，就返回当前节点</span>
  <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.55,words:166},y:"a",t:"修剪二叉搜索树",O:17},["/算法题/二叉树/17.html","/算法题/二叉树/17.md",":md"]],["v-6a50b2a9","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/18.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/convert-bst-to-greater-tree/" target="_blank" rel="noopener noreferrer">二叉搜索树转换为累加树</a></p>
<h2> 思路</h2>
<p>实际上就是反的中序遍历(右-中-左)进行累加</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">convertBST</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">accum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">accum</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    sum <span class="token operator">+=</span> root<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>val <span class="token operator">=</span> sum<span class="token punctuation">;</span>
    <span class="token function">accum</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> root<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">accum</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.31,words:93},y:"a",t:"把二叉搜索树转换为累加树",O:17},["/算法题/二叉树/18.html","/算法题/二叉树/18.md",":md"]],["v-6c058b48","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/19.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 总结</h2>
<p><a href="https://www.programmercarl.com/%E4%BA%8C%E5%8F%89%E6%A0%91%E6%80%BB%E7%BB%93%E7%AF%87.html#%E6%9C%80%E5%90%8E%E6%80%BB%E7%BB%93" target="_blank" rel="noopener noreferrer">总结</a></p>
`,r:{minutes:.16,words:48},y:"a",t:"总结",O:19},["/算法题/二叉树/19.html","/算法题/二叉树/19.md",":md"]],["v-59b7ed20","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/2.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 二叉树的遍历方法</h2>
<p>二叉树主要有两种遍历方式：</p>
<ol>
<li>深度优先遍历：先往深走，遇到叶子节点再往回走，采用递归法或迭代法</li>
<li>广度优先遍历：一层一层的去遍历，采用迭代法</li>
</ol>
<h2> 三种深度优先遍历方法</h2>
<p><a href="https://www.programmercarl.com/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80.html#%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%E6%96%B9%E5%BC%8F" target="_blank" rel="noopener noreferrer">图解</a></p>`,r:{minutes:2.06,words:619},y:"a",t:"二叉树的递归遍历",O:2},["/算法题/二叉树/2.html","/算法题/二叉树/2.md",":md"]],["v-dcdfae1c","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/20.html",{d:1709804676e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/flatten-binary-tree-to-linked-list/description/" target="_blank" rel="noopener noreferrer">二叉树展开为链表</a></p>
<h2> 思路</h2>
<p><a href="https://leetcode.cn/problems/flatten-binary-tree-to-linked-list/solutions/1034308/tong-su-yi-dong-de-si-lu-fen-xi-zong-gon-bi7h/" target="_blank" rel="noopener noreferrer">题解</a>
先反转左右子树，然后将原右子树插入到左子树的叶子节点后面</p>`,r:{minutes:.52,words:156},y:"a",t:"二叉树展开为链表",O:20},["/算法题/二叉树/20.html","/算法题/二叉树/20.md",":md"]],["v-df10df86","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/21.%E9%AA%8C%E8%AF%81%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91.html",{d:1712390338e3,c:["算法题","二叉搜索树"],e:`<h2> 题目链接</h2>
<p><a href="https://www.bilibili.com/video/BV14G411P7C1/?spm_id_from=333.788&amp;vd_source=850c21284431bb6037ff44c73d3ec8e8" target="_blank" rel="noopener noreferrer">验证二叉搜索树</a></p>
<h2> 思路</h2>
<ol>
<li>
<p>中序遍历：根据二叉搜索树的特点，中序遍历的结果应该是一个递增的序列，可以记录当前遍历节点的值，判断是否递增</p>
</li>
<li>
<p>前序遍历：每次判断当前节点的值是否在要求的值域范围内，如果在，就继续验证其左右子树是否满足条件</p>
</li>
</ol>`,r:{minutes:.82,words:245},y:"a",t:"验证二叉搜索树",O:21},["/算法题/二叉树/21.验证二叉搜索树.html","/算法题/二叉树/21.验证二叉搜索树.md",":md"]],["v-52e48aa4","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/4.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/invert-binary-tree/" target="_blank" rel="noopener noreferrer">反转二叉树</a></p>
<h2> 思路</h2>
<ul>
<li>
<p>递归遍历:根据一定顺序(前序、后序)递归二叉树，先交换左右节点，然后再继续反转左右节点的子节点</p>
</li>
<li>
<p>层序遍历</p>
</li>
</ul>
<h2> 实现</h2>
<ol>
<li>递归遍历</li>
</ol>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">invertTree</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 终止条件</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//交换节点</span>
  <span class="token keyword">let</span> rightnode <span class="token operator">=</span> root<span class="token punctuation">.</span>right<span class="token punctuation">;</span>
  root<span class="token punctuation">.</span>right <span class="token operator">=</span> root<span class="token punctuation">.</span>left<span class="token punctuation">;</span>
  root<span class="token punctuation">.</span>left <span class="token operator">=</span> rightnode<span class="token punctuation">;</span>
  <span class="token comment">//反转子节点</span>
  <span class="token function">invertTree</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">invertTree</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.62,words:185},y:"a",t:"反转二叉树",O:4},["/算法题/二叉树/4.html","/算法题/二叉树/4.md",":md"]],["v-4c112828","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/6.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/binary-tree-paths/description/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>递归思路：采用前序遍历的顺序，遇到中间节点先拼接中间节点的路径，然后再处理左右节点；当遇到叶子节点，终止递归，将最终路径存入结果中</p>
<h2> 实现</h2>
<ol>
<li>递归遍历</li>
</ol>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">binaryTreePaths</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// 1.确定递归函数参数</span>
  <span class="token keyword">const</span> <span class="token function-variable function">getPath</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> curpath</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 2.终止条件：遇到叶子节点，将path放进res中</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>root<span class="token punctuation">.</span>left <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> root<span class="token punctuation">.</span>right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      curpath <span class="token operator">+=</span> root<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>curpath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 3.单层递归:先处理中间节点的path 然后处理左右节点</span>
    curpath <span class="token operator">+=</span> root<span class="token punctuation">.</span>val <span class="token operator">+</span> <span class="token string">"-&gt;"</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>left <span class="token operator">&amp;&amp;</span> <span class="token function">getPath</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> curpath<span class="token punctuation">)</span><span class="token punctuation">;</span>
    root<span class="token punctuation">.</span>right <span class="token operator">&amp;&amp;</span> <span class="token function">getPath</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> curpath<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">getPath</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.61,words:183},y:"a",t:"二叉树的所有路径",O:6},["/算法题/二叉树/6.html","/算法题/二叉树/6.md",":md"]],["v-48a776ea","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/7.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 题目连接</h2>
<p><a href="https://leetcode.cn/problems/path-sum-ii/" target="_blank" rel="noopener noreferrer">路径总和</a></p>
<h2> 思路</h2>
<p>注意：在传递路径时要通过深拷贝进行，否则所有的 path 指向同一个</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">pathSum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root<span class="token punctuation">,</span> targetSum</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token function-variable function">getsum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> sum<span class="token punctuation">,</span> path</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>node<span class="token punctuation">.</span>left <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
      sum <span class="token operator">+=</span> node<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">==</span> targetSum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 深拷贝：重新赋值一个array</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    sum <span class="token operator">+=</span> node<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
    <span class="token comment">// 这里一定要采取深拷贝，否则path会同时变化</span>
    node<span class="token punctuation">.</span>left <span class="token operator">&amp;&amp;</span> <span class="token function">getsum</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> sum<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    node<span class="token punctuation">.</span>right <span class="token operator">&amp;&amp;</span> <span class="token function">getsum</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> sum<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">...</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">getsum</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.45,words:136},y:"a",t:"路径总和",O:7},["/算法题/二叉树/7.html","/算法题/二叉树/7.md",":md"]],["v-453dc5ac","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/8.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/construct-binary-tree-from-inorder-and-postorder-traversal/" target="_blank" rel="noopener noreferrer">题目</a></p>
<h2> 思路</h2>
<ol>
<li>根据后序遍历的特点，先找到后序数组中最后一个元素，该元素是当前树的根节点</li>
<li>找到这个节点在中序数组中的索引，将中序数组一分为二，左边为左树，右边为右树</li>
<li>在后序数组中找到长度相等的数组，递归以上步骤</li>
</ol>`,r:{minutes:1.08,words:325},y:"a",t:"从中序与后序遍历序列构造二叉树",O:8},["/算法题/二叉树/8.html","/算法题/二叉树/8.md",":md"]],["v-41d4146e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/9.html",{d:1705824349e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/maximum-binary-tree/description/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<ol>
<li>找到数组中最大的元素及对应索引</li>
<li>将数组一分为二，左右左树和右树的数组</li>
<li>递归</li>
</ol>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">constructMaximumBinaryTree</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 递归结束条件</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 找到最大元素及索引</span>
  <span class="token keyword">let</span> max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeNode</span><span class="token punctuation">(</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 递归构建左树和右树</span>
  root<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token function">constructMaximumBinaryTree</span><span class="token punctuation">(</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
  root<span class="token punctuation">.</span>right <span class="token operator">=</span> <span class="token function">constructMaximumBinaryTree</span><span class="token punctuation">(</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> root<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.45,words:135},y:"a",t:"最大二叉树",O:9},["/算法题/二叉树/9.html","/算法题/二叉树/9.md",":md"]],["v-0628f8e5","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BD%8D%E8%BF%90%E7%AE%97/1.%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97.html",{d:1710073278e3,c:["算法题","位运算"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/single-number/solutions/10261/hua-jie-suan-fa-136-zhi-chu-xian-yi-ci-de-shu-zi-b/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<ol>
<li>利用异或运算 XOR 的性质：
<ul>
<li>一个数和 0 做 XOR 运算等于本身：a⊕0 = a</li>
<li>一个数和其本身做 XOR 运算等于 0：a⊕a = 0</li>
<li>XOR 运算满足交换律和结合律：a⊕b⊕a = (a⊕a)⊕b = 0⊕b = b</li>
</ul>
</li>
</ol>`,r:{minutes:.87,words:260},y:"a",t:"只出现一次的数字",O:1},["/算法题/位运算/1.只出现一次的数字.html","/算法题/位运算/1.只出现一次的数字.md",":md"]],["v-46748d9e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%89%8D%E7%BC%80%E5%92%8C/1.%E4%BA%8C%E7%BB%B4%E5%8C%BA%E5%9F%9F%E5%92%8C%E6%A3%80%E7%B4%A2.html",{d:1710583872e3,c:["算法题","前缀和"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/range-sum-query-2d-immutable/description/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p><a href="https://leetcode.cn/problems/range-sum-query-2d-immutable/description/" target="_blank" rel="noopener noreferrer">题解</a></p>`,r:{minutes:.95,words:284},y:"a",t:"二维区域和检索",O:1},["/算法题/前缀和/1.二维区域和检索.html","/算法题/前缀和/1.二维区域和检索.md",":md"]],["v-33d42f60","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/1.%E7%88%AC%E6%A5%BC%E6%A2%AF.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/climbing-stairs/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>动态规划用于解决某一问题有很多重叠子问题的情况，其<mark>每一个状态一定是由上一个状态推导出来的</mark>，这与贪心算法不同，贪心没有状态推导，而是从局部直接选最优的</p>
<p>动态规划有 5 个步骤：</p>
<ol>
<li>确定 dp 数组（dp table）以及下标的含义</li>
<li>确定递推公式</li>
<li>dp 数组如何初始化</li>
<li>确定遍历顺序</li>
</ol>`,r:{minutes:.86,words:258},y:"a",t:"爬楼梯",O:1},["/算法题/动态规划/1.爬楼梯.html","/算法题/动态规划/1.爬楼梯.md",":md"]],["v-7dc3d3f0","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/10.%E6%9C%80%E5%90%8E%E4%B8%80%E5%9D%97%E7%9F%B3%E5%A4%B4%E9%87%8D%E9%87%8F.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/last-stone-weight-ii/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>要想要最后一块石头重量最小，那么只需要找到两堆重量尽量相等的石块，就可与上题使用相同解法，即找到背包容量为 sum/2 时能装在的最大石块重量 dp[target]</p>
<p>那么另一堆石块的重量就是 sum-dp[target],最后剩下的重量就是(sum-dp[target]) - dp[target]</p>`,r:{minutes:.71,words:213},y:"a",t:"最后一块石头重量2",O:10},["/算法题/动态规划/10.最后一块石头重量.html","/算法题/动态规划/10.最后一块石头重量.md",":md"]],["v-fc7add4c","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/11.%E7%9B%AE%E6%A0%87%E5%92%8C.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/target-sum/" target="_blank" rel="noopener noreferrer">目标和</a></p>
<h2> 思路</h2>
<p>可以把数组拆成加法的 left 部分和减法的 right 部分，那么 target = left - right；同时 sum = left+right</p>
<p>那么 sum = left + (left - target), left = (sum+target)/2</p>
<p>那么这题就转换为了要装满容量为 left 的背包，有几种方法</p>`,r:{minutes:.99,words:298},y:"a",t:"目标和",O:11},["/算法题/动态规划/11.目标和.html","/算法题/动态规划/11.目标和.md",":md"]],["v-489511d9","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/12.%E4%B8%80%E5%92%8C%E9%9B%B6.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/ones-and-zeroes/" target="_blank" rel="noopener noreferrer">一和零</a></p>
<h2> 思路</h2>
<p>这题本质山也是一个 01 背包问题，这不过该题的背包容积是二维的，因此遍历背包时是一个双重循环</p>
<ul>
<li>
<p>dp[i][j]表示 最多有 i 个 0 和 j 个 1 的 strs 的最大子集的大小</p>
</li>
<li>
<p>递推公式：count0 和 count1 分别表示当前的 str（物品）的 0 和 1 的数量
放入 str:dp[i-count0][j-count1]+1
不放入：dp[i][j]</p>
</li>
<li>
<p>初始化：0 即可</p>
</li>
</ul>`,r:{minutes:.77,words:232},y:"a",t:"一和零",O:11},["/算法题/动态规划/12.一和零.html","/算法题/动态规划/12.一和零.md",":md"]],["v-424b3d0c","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/13.%E5%A4%9A%E9%87%8D%E8%83%8C%E5%8C%85.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 思路</h2>
<p>完全背包指的是物品可以重复放入的背包，在 01 背包遍历背包时，采用的是倒序遍历，目的是避免重复放入</p>
<p>因此只将背包遍历的顺序改为从小到大</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 重点:倒序,且只需要判断j&gt;=weight[i]即可，否则不会发生变化（因为重量不能放入）</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> weight<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> size<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j <span class="token operator">-</span> weight<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.46,words:137},y:"a",t:"完全背包",O:13},["/算法题/动态规划/13.多重背包.html","/算法题/动态规划/13.多重背包.md",":md"]],["v-5a00a0ba","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/14.%E9%9B%B6%E9%92%B1duihuan.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p>[零钱兑换][https://leetcode.cn/problems/coin-change-ii/description/]</p>
<h2> 思路</h2>
<ol>
<li>完全背包</li>
<li>求方法数：dp[0]初始化为 1</li>
</ol>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">change</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">amount<span class="token punctuation">,</span> coins</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>amount <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> coins<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> coins<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> amount<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> dp<span class="token punctuation">[</span>j <span class="token operator">-</span> coins<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> dp<span class="token punctuation">[</span>amount<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.29,words:88},y:"a",t:"零钱兑换",O:14},["/算法题/动态规划/14.零钱duihuan.html","/算法题/动态规划/14.零钱duihuan.md",":md"]],["v-52958ce9","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/15.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8C4.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/combination-sum-iv/description/" target="_blank" rel="noopener noreferrer">组合总和 4</a></p>
<h2> 思路</h2>
<p>组合问题：先遍历物品，再遍历背包，这样就保证一定是物品顺序来的</p>
<p>排列问题：先遍历背包，再遍历物品，这样可以在不同的重量时，都重新遍历一遍物品，可以进行排列</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">combinationSum4</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>target <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//   初始化为1</span>
  dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token comment">// 注意排列问题的遍历顺序</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> target<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> dp<span class="token punctuation">[</span>j <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> dp<span class="token punctuation">[</span>target<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.54,words:161},y:"a",t:"组合总和4",O:15},["/算法题/动态规划/15.组合总和4.html","/算法题/动态规划/15.组合总和4.md",":md"]],["v-378ce1f4","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/16.%E5%AE%8C%E5%85%A8%E5%B9%B3%E6%96%B9%E6%95%B0.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/perfect-squares/" target="_blank" rel="noopener noreferrer">完全平方数</a></p>
<h2> 思路</h2>
<ul>
<li>背包容量就是 n，在遍历物品时还要添加限制条件：i*i &lt;=j</li>
<li>先遍历背包或先遍历物体都可以</li>
<li>因为比较的是最少数量，所以初始化的时候赋值为 Infinity</li>
</ul>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">numSquares</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">*</span> i <span class="token operator">&lt;=</span> j<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j <span class="token operator">-</span> i <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.45,words:135},y:"a",t:"完全平方数",O:16},["/算法题/动态规划/16.完全平方数.html","/算法题/动态规划/16.完全平方数.md",":md"]],["v-56b058f0","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/17.%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/word-break/" target="_blank" rel="noopener noreferrer">单词拆分</a></p>
<h2> 思路</h2>
<ol>
<li>背包法</li>
</ol>
<p>将字符串的长度当作背包的容积与物体的重量</p>
<ul>
<li>dp[i]长度为 i 的字符串能否拆分</li>
<li>递推公式：如果确定 dp[j] 是 true，且 [j, i] 这个区间的子串出现在字典里，那么 dp[i]一定是 true</li>
</ul>`,r:{minutes:1.48,words:443},y:"a",t:"单词拆分",O:17},["/算法题/动态规划/17.单词拆分.html","/算法题/动态规划/17.单词拆分.md",":md"]],["v-0eddbe7e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/18.%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D2.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/house-robber-ii/description/" target="_blank" rel="noopener noreferrer">打家劫舍 2</a></p>
<h2> 思路</h2>
<p>该题的房屋是环形的，因此数组中首位元素只能取其中一个，因此可以分别处理作为首元素和作为尾元素的情况
<a href="https://www.programmercarl.com/0213.%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8DII.html#%E7%AE%97%E6%B3%95%E5%85%AC%E5%BC%80%E8%AF%BE" target="_blank" rel="noopener noreferrer">图解</a></p>`,r:{minutes:.73,words:220},y:"a",t:"打家劫舍2",O:18},["/算法题/动态规划/18.打家劫舍2.html","/算法题/动态规划/18.打家劫舍2.md",":md"]],["v-859b3a82","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/19.%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D3.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/house-robber-iii/" target="_blank" rel="noopener noreferrer">打家劫舍 3</a></p>
<h2> 思路</h2>
<ol>
<li>
<p>后续遍历二叉树+记忆化</p>
</li>
<li>
<p>动态规划</p>
</li>
</ol>
<p>该题的 dp 数组对每一个 node 建立一个二维数组，数组中的第一个元素是不偷该节点的最大金额，第二个元素是偷该结点的最大金额</p>
<p>采用后序遍历，构建所有节点的 dp 数组</p>`,r:{minutes:1.06,words:319},y:"a",t:"打家劫舍3",O:19},["/算法题/动态规划/19.打家劫舍3.html","/算法题/动态规划/19.打家劫舍3.md",":md"]],["v-d3a08f6c","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/2.%E4%BD%BF%E7%94%A8%E6%9C%80%E5%B0%8F%E8%8A%B1%E8%B4%B9%E7%88%AC%E5%8F%B0%E9%98%B6.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/min-cost-climbing-stairs/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<ul>
<li>dp[i]表示到达第 i 个台阶的最小花费</li>
<li>递推公式：爬法和上一题一样，不一样之处在于比较费用的高低，还需要加上本层台阶的费用</li>
</ul>
<p>即<code>dp[i] = Math.min(dp[i - 1] + cost[i - 1], dp[i - 2] + cost[i - 2])</code></p>`,r:{minutes:.71,words:213},y:"a",t:"最小花费爬楼梯",O:2},["/算法题/动态规划/2.使用最小花费爬台阶.html","/算法题/动态规划/2.使用最小花费爬台阶.md",":md"]],["v-ec9ac944","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/20.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h1> 1. 买卖股票的最佳时机 1</h1>
<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/" target="_blank" rel="noopener noreferrer">买卖股票的最佳时机</a></p>
<h2> 思路</h2>
<ol>
<li>贪心算法</li>
</ol>
<p>对于第 i 天，假设在这天之前最便宜的股票价格为 lowest，它的最大利润等于 prices[i] - lowest
求出每一天的最大利润，最后找出最终的最大利润</p>`,r:{minutes:2.89,words:867},y:"a",t:"买卖股票的最佳时机",O:20},["/算法题/动态规划/20.买卖股票最佳时机.html","/算法题/动态规划/20.买卖股票最佳时机.md",":md"]],["v-5d10c97c","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/21.%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%BA%8F%E5%88%97.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/longest-increasing-subsequence/" target="_blank" rel="noopener noreferrer">最长递增序列</a></p>
<h2> 思路</h2>
<ol>
<li>动态规划：时间复杂度 O(n2)</li>
</ol>
<p><a href="https://mp.weixin.qq.com/s?__biz=MzAxODQxMDM0Mw==&amp;mid=2247485269&amp;idx=1&amp;sn=571a6366b0b592f103971ae3e119998b&amp;scene=21#wechat_redirect" target="_blank" rel="noopener noreferrer">图解</a></p>`,r:{minutes:2.12,words:635},y:"a",t:"最长递增序列",O:21},["/算法题/动态规划/21.最长递增序列.html","/算法题/动态规划/21.最长递增序列.md",":md"]],["v-08f6c07e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/22.%E6%9C%80%E9%95%BF%E9%87%8D%E5%A4%8D%E5%AD%90%E6%95%B0%E7%BB%84.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/maximum-length-of-repeated-subarray/" target="_blank" rel="noopener noreferrer">最长重复子数组</a></p>
<h2> 思路</h2>
<p>dp[i][j] 表示 当 nums1 中索引为 0-i 个元素，当 nums2 中索引为 0-j 个元素的时候的最长重复子序列长度</p>
<p>递推公式：当新的元素 nums1[i]==nums2[j]时，dp[i][j] = dp[i-1][j-1]+1</p>`,r:{minutes:1.54,words:462},y:"a",t:"最长重复子数组",O:22},["/算法题/动态规划/22.最长重复子数组.html","/算法题/动态规划/22.最长重复子数组.md",":md"]],["v-206085fe","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/23.%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E5%BA%8F%E5%88%97.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/longest-common-subsequence/" target="_blank" rel="noopener noreferrer">最长公共子序列</a></p>
<h2> 类似题目</h2>
<p><a href="https://www.programmercarl.com/1035.%E4%B8%8D%E7%9B%B8%E4%BA%A4%E7%9A%84%E7%BA%BF.html" target="_blank" rel="noopener noreferrer">不相交的线</a></p>`,r:{minutes:.86,words:257},y:"a",t:"最长公共子序列",O:23},["/算法题/动态规划/23.最长公共子序列.html","/算法题/动态规划/23.最长公共子序列.md",":md"]],["v-b9ff64c0","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/24.%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<h2> 思路</h2>
<ol>
<li>
<p>贪心</p>
</li>
<li>
<p>动态规划</p>
</li>
</ol>
<p>因为要求连续最大子数组的和，在考虑 nums[i]时，为了能将 nums[i]加入结果</p>
<p>dp[i]表示的是从 nums[j]~nums[i]的连续最大子数组的和，j 是从 0-i-1 的任意数</p>
<p>递推公式：dp[i] = Math.max(dp[i-1]+nums[i],nums[i])</p>
<h2> 实现</h2>
<blockquote>
<p>动态规划</p>
</blockquote>
`,r:{minutes:.52,words:155},y:"a",t:"最大子数组和",O:24},["/算法题/动态规划/24.最大子数组和.html","/算法题/动态规划/24.最大子数组和.md",":md"]],["v-4caf0226","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/25.%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97.html",{d:1706078465e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/is-subsequence/description/" target="_blank" rel="noopener noreferrer">判断子序列</a></p>
<h2> 思路</h2>
<ol>
<li>
<p>双指针</p>
</li>
<li>
<p>动态规划</p>
</li>
</ol>
<p>这题可以转化为求 t 与 s 的最长公共子序列，然后判断这个子序列的长度和 s 的长度是否相同，如果相同则说明 s 是 t 的子序列</p>
<p>整体思路与 23 题类似，只是递推公式略有不同</p>`,r:{minutes:.83,words:249},y:"a",t:"判断子序列",O:25},["/算法题/动态规划/25.判断子序列.html","/算法题/动态规划/25.判断子序列.md",":md"]],["v-233112dd","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/26.%E4%B8%8D%E5%90%8C%E7%9A%84%E5%AD%90%E5%BA%8F%E5%88%97.html",{d:1706078465e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/distinct-subsequences/description/" target="_blank" rel="noopener noreferrer">不同的子序列</a></p>
<h2> 思路</h2>
<p>递推公式：</p>
<p>当[i - 1] == t[j - 1]时，如果 s 取这个 s[i-1]，那么 dp[i][j] = dp[i - 1][j - 1]；s 也可以不取 s[i-1]，比如 s=bagg t=bag，那么 s 可以不取最后一个'g'，此时 dp[i][j] =dp[i - 1][j]</p>`,r:{minutes:.86,words:258},y:"a",t:"不同的子序列",O:26},["/算法题/动态规划/26.不同的子序列.html","/算法题/动态规划/26.不同的子序列.md",":md"]],["v-fc80572c","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/27.%E4%B8%A4%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C.html",{d:1706078465e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/delete-operation-for-two-strings/" target="_blank" rel="noopener noreferrer">两个字符串的删除操作</a></p>
<h2> 思路</h2>
<p>这题也可以转换为 23 题求最长公共子序列，找出两个字符串的公共子序列</p>
<p>然后分别拿两个字符串的长度减去共同子序列的长度，得到就是最少的删除数</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">minDistance</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">word1<span class="token punctuation">,</span> word2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> len1 <span class="token operator">=</span> word1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  len2 <span class="token operator">=</span> word2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> dp <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>len1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">Array</span><span class="token punctuation">(</span>len2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> len1<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> len2<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>word1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> word2<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> len1 <span class="token operator">-</span> dp<span class="token punctuation">[</span>len1<span class="token punctuation">]</span><span class="token punctuation">[</span>len2<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span>len2 <span class="token operator">-</span> dp<span class="token punctuation">[</span>len1<span class="token punctuation">]</span><span class="token punctuation">[</span>len2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.61,words:184},y:"a",t:"两个字符串的删除操作",O:27},["/算法题/动态规划/27.两个字符串的删除操作.html","/算法题/动态规划/27.两个字符串的删除操作.md",":md"]],["v-fac0c946","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/28.%E7%BC%96%E8%BE%91%E8%B7%9D%E7%A6%BB.html",{d:1706078465e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/edit-distance/" target="_blank" rel="noopener noreferrer">编辑距离</a></p>
<h2> 思路</h2>
<p>递推公式：</p>
<p>当 word1[i - 1] == word2[j - 1]时, 不用进行任何操作，dp[i][j] = dp[i - 1][j - 1]</p>
<p>当 word1[i - 1] ！= word2[j - 1]时，可以进行三种操作：删除、新增、替换</p>
<p>删除：dp[i][j] = dp[i - 1][j]+1</p>`,r:{minutes:1.05,words:314},y:"a",t:"编辑距离",O:28},["/算法题/动态规划/28.编辑距离.html","/算法题/动态规划/28.编辑距离.md",":md"]],["v-02d61b3f","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/3.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/unique-paths/description/" target="_blank" rel="noopener noreferrer">不同路径</a></p>
<h2> 思路</h2>
<ul>
<li>dp[i]表示有多少方法可以抵达当前的格子，格子通过一个二维数组表示</li>
<li>状态递推：只能向右或者向下：arr[i][j] = arr[i - 1][j] + arr[i][j - 1]</li>
</ul>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">uniquePaths</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 构造二维数组</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">Array</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 现将第一行和第一列填充1，为了后续遍历方便</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr<span class="token punctuation">[</span>m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.86,words:259},y:"a",t:"不同路径",O:3},["/算法题/动态规划/3.不同路径.html","/算法题/动态规划/3.不同路径.md",":md"]],["v-1e766ba0","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/4.%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%842.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/unique-paths-ii/" target="_blank" rel="noopener noreferrer">不同路径 2</a></p>
<h2> 思路</h2>
<p>与上题思路一样，只是多了障碍物的判断，当遇到障碍物，则置 0，表示没有路径可以到达障碍物</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">uniquePathsWithObstacles</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obstacleGrid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> row <span class="token operator">=</span> obstacleGrid<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    col <span class="token operator">=</span> obstacleGrid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>

  <span class="token keyword">const</span> dp <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">Array</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 在填充第一行与第一列时就加入障碍物判断，如果碰到就不再继续遍历了</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> col <span class="token operator">&amp;&amp;</span> obstacleGrid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> row <span class="token operator">&amp;&amp;</span> obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> row<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> col<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> dp<span class="token punctuation">[</span>row <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>col <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.12,words:335},y:"a",t:"不同路径2",O:4},["/算法题/动态规划/4.不同路径2.html","/算法题/动态规划/4.不同路径2.md",":md"]],["v-22254b81","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/5.%E6%95%B4%E6%95%B0%E6%8B%86%E5%88%86.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/integer-break/description/" target="_blank" rel="noopener noreferrer">整数拆分</a></p>
<h2> 思路</h2>
<p>dp[i]表示整数 i 拆分后的最大乘积</p>
<p>递推公式：将 i 拆分成 j 和 i-j，遍历 j，则 dp[i]=dp[i] = Math.max(dp[i], j * (i - j), j * dp[i - j]);</p>
<p>解释：dp[i]表示上一轮的结果； j * (i - j)表示 i-j 不再拆分，直接相乘； j * dp[i - j]表示 i-j 也要拆分</p>`,r:{minutes:.76,words:228},y:"a",t:"整数拆分",O:5},["/算法题/动态规划/5.整数拆分.html","/算法题/动态规划/5.整数拆分.md",":md"]],["v-9d5ecbc8","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/6.%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/unique-binary-search-trees/" target="_blank" rel="noopener noreferrer">不同的二叉树</a></p>
<h2> 思路</h2>
<p><a href="https://www.programmercarl.com/0096.%E4%B8%8D%E5%90%8C%E7%9A%84%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91.html#%E7%AE%97%E6%B3%95%E5%85%AC%E5%BC%80%E8%AF%BE" target="_blank" rel="noopener noreferrer">图解</a></p>`,r:{minutes:.72,words:217},y:"a",t:"不同的二叉树",O:6},["/算法题/动态规划/6.不同的二叉树.html","/算法题/动态规划/6.不同的二叉树.md",":md"]],["v-4e8c5dc9","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/7.01%E8%83%8C%E5%8C%85-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目</h2>
<p>有 n 件物品和一个最多能背重量为 w 的背包。第 i 件物品的重量是 weight[i]，得到的价值是 value[i] 。每件物品只能用一次，求解将哪些物品装入背包里物品价值总和最大</p>
<table>
<thead>
<tr>
<th></th>
<th>重量</th>
<th>价值</th>
</tr>
</thead>
<tbody>
<tr>
<td>物品 1</td>
<td>1</td>
<td>15</td>
</tr>
<tr>
<td>物品 2</td>
<td>3</td>
<td>20</td>
</tr>
<tr>
<td>物品 3</td>
<td>4</td>
<td>30</td>
</tr>
</tbody>
</table>`,r:{minutes:1.7,words:510},y:"a",t:"01背包-二维数组",O:7},["/算法题/动态规划/7.01背包-二维数组.html","/算法题/动态规划/7.01背包-二维数组.md",":md"]],["v-5fb1723e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/8.01%E8%83%8C%E5%8C%85-%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 简化</h2>
<p>二维 dp 数组是从物品和背包两个维度进行构造，实际上只需要一维数组也可以完成相同的目的，因为实际只需要二维 dp 中的每一行</p>
<p>dp[i] 容量为 j 的背包所背的最大价值</p>
<p>递推公式的思路与上一题一样，放或不放</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j <span class="token operator">-</span> weight<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,r:{minutes:1.35,words:406},y:"a",t:"01背包-一维数组",O:8},["/算法题/动态规划/8.01背包-一维数组.html","/算法题/动态规划/8.01背包-一维数组.md",":md"]],["v-bdcbf37c","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/9.%E5%88%86%E5%89%B2%E7%AD%89%E5%92%8C%E5%AD%90%E9%9B%86.html",{d:1705824349e3,c:["算法题","动态规划"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/partition-equal-subset-sum/solutions/2190017/01bei-bao-fa-jie-jue-si-lu-by-kind-7ehma-2qdj/" target="_blank" rel="noopener noreferrer">分割等和子集</a></p>
<h2> 思路</h2>
<ol>
<li>
<p>回溯法</p>
</li>
<li>
<p>动态规划-01 背包</p>
</li>
</ol>
<p>可以将本题想象为一个 0-1 背包问题：</p>`,r:{minutes:.98,words:294},y:"a",t:"分割等和子集",O:9},["/算法题/动态规划/9.分割等和子集.html","/算法题/动态规划/9.分割等和子集.md",":md"]],["v-932477d0","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98.html",{d:1711636896e3,c:["算法题","动态规划","背包问题"],e:`<ol>
<li>组合问题：先遍历物品，再遍历背包</li>
</ol>
<ul>
<li>01 背包：每个物品只能放入一次，遍历背包时，从大到小进行遍历，避免物体重复放入背包</li>
</ul>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> size<span class="token punctuation">;</span> j <span class="token operator">&gt;=</span> weight<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>j <span class="token operator">-</span> weight<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+</span> value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.69,words:207},y:"a",t:"背包问题总结",O:100},["/算法题/动态规划/背包问题.html","/算法题/动态规划/背包问题.md",":md"]],["v-0f45c563","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8D%95%E8%B0%83%E6%A0%88/1.%E6%AF%8F%E6%97%A5%E6%B8%A9%E5%BA%A6.html",{d:1709804676e3,c:["算法题","单调栈"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/daily-temperatures/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>单调栈适用情况：一维数组，要寻找任一个元素的右边或者左边第一个比自己大或者小的元素的位置</p>
<p>思路：遍历数组，对于当前数，找出栈中小于该元素的出栈，并将该元素入栈</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">dailyTemperatures</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">temperatures</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> temperatures<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token comment">//   栈 保存的是数组元素的索引</span>
  <span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// 结果数组</span>
    res <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>
      <span class="token comment">// 找到比当前与元素小的元素索引</span>
      temperatures<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> temperatures<span class="token punctuation">[</span>stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span>
      stack<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 获取栈头元素的索引</span>
      <span class="token keyword">const</span> top <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token comment">// i-top即为这个元素对应的结果</span>
      res<span class="token punctuation">[</span>top<span class="token punctuation">]</span> <span class="token operator">=</span> i <span class="token operator">-</span> top<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 将当前元素入栈</span>
    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.7,words:210},y:"a",t:"每日温度",O:1},["/算法题/单调栈/1.每日温度.html","/算法题/单调栈/1.每日温度.md",":md"]],["v-1dab3ea5","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8D%95%E8%B0%83%E6%A0%88/2.%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0I.html",{d:1709804676e3,c:["算法题","单调栈"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/next-greater-element-i/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>思路：先计算 nums2 数组中每个元素的邻近最大元素，然后再用 nums1 查询</p>
<p>注意：结果数组采用 map 存储，方便 nums1 进行查询</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">nextGreaterElement</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums1<span class="token punctuation">,</span> nums2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>nums2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums2<span class="token punctuation">[</span>stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> stack<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> top <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 用map存储</span>
      map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>nums2<span class="token punctuation">[</span>top<span class="token punctuation">]</span><span class="token punctuation">,</span> nums2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// 查询nums1对应的结果</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>nums1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.51,words:153},y:"a",t:"下一个更大元素1",O:1},["/算法题/单调栈/2.下一个更大元素I.html","/算法题/单调栈/2.下一个更大元素I.md",":md"]],["v-44e376c3","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8D%95%E8%B0%83%E6%A0%88/3.%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%9B%B4%E5%A4%A7%E5%85%83%E7%B4%A0II.html",{d:1709804676e3,c:["算法题","单调栈"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/next-greater-element-ii/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>这题是个循环数组，直观上看可以复制一个相同的数组拼接在一起，这过程可以通过索引来实现<code>i % length</code></p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">dailyTemperatures</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">temperatures</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    res <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span>len<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// i % len 包括了第二个数组中相同的元素</span>
    <span class="token keyword">let</span> index <span class="token operator">=</span> i <span class="token operator">%</span> len<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> stack<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> top <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      res<span class="token punctuation">[</span>top<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.48,words:143},y:"a",t:"下一个更大元素1",O:2},["/算法题/单调栈/3.下一个更大元素II.html","/算法题/单调栈/3.下一个更大元素II.md",":md"]],["v-6ef24e90","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%93%88%E5%B8%8C%E8%A1%A8/1.html",{d:1705824349e3,c:["算法题","链表"],e:`<h2> 题目连接</h2>
<p><a href="https://leetcode.cn/problems/valid-anagram/" target="_blank" rel="noopener noreferrer">有效的字母异味词</a></p>
<h2> 思路</h2>
<p>准备一个 26 个字母的哈希表，同时遍历两个字符串，第一个做加法，第二个做减法，等遍历完后检查哈希表的值是否全为 0</p>
<h2> 实现</h2>
<p>补充：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt" target="_blank" rel="noopener noreferrer">charCodeAt</a><br>
返回一个整数，表示给定索引处的 UTF-16 码元</p>`,r:{minutes:.51,words:153},y:"a",t:"有效的字母异味词",O:1},["/算法题/哈希表/1.html","/算法题/哈希表/1.md",":md"]],["v-6b889d52","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%93%88%E5%B8%8C%E8%A1%A8/2.html",{d:1705824349e3,c:["算法题","链表"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/intersection-of-two-arrays/" target="_blank" rel="noopener noreferrer">链接</a></p>
<h2> 思路</h2>
<p>将长度最小的数组转化为 set，交集一定在此 set 中，然后遍历 set 的每个元素，看是否在存在于另一个数组，不存在则删除</p>
<h2> 实现</h2>
<p>注意点：js 中判断元素是否在数组中的方法是.includes()</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">intersection</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums1<span class="token punctuation">,</span> nums2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nums1<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> nums2<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>nums2<span class="token punctuation">,</span> nums1<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>nums1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> set<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>nums2<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
      set<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>set<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.44,words:131},y:"a",t:"两个数组的交集",O:2},["/算法题/哈希表/2.html","/算法题/哈希表/2.md",":md"]],["v-681eec14","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%93%88%E5%B8%8C%E8%A1%A8/3.html",{d:1705824349e3,c:["算法题","链表"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/happy-number/" target="_blank" rel="noopener noreferrer">快乐数</a></p>
<h2> 思路</h2>
<ol>
<li>取个位数加和</li>
<li>如何判断不是快乐数：如果不是快乐数会无限循环，如果 sum 的结果出现了重复，那么就表示进入了死循环</li>
</ol>
<h2> 实现</h2>
<blockquote>
<p>取个位数加和</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getsum</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum <span class="token operator">=</span> n<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sum <span class="token operator">+=</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span>
      n <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.48,words:144},y:"a",t:"快乐数字",O:3},["/算法题/哈希表/3.html","/算法题/哈希表/3.md",":md"]],["v-64b53ad6","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%93%88%E5%B8%8C%E8%A1%A8/4.html",{d:1705824349e3,c:["算法题","链表"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/ransom-note/" target="_blank" rel="noopener noreferrer">链接</a></p>
<h2> 实现</h2>
<p>与有效异位数类似，但前者是在同步循环，该题是先后循环，所以判断条件可以优化</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">canConstruct</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">ransomNote<span class="token punctuation">,</span> magazine</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> helper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> pivot <span class="token operator">=</span> <span class="token string">"a"</span><span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> str <span class="token keyword">of</span> magazine<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    helper<span class="token punctuation">[</span>str<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> pivot<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> str <span class="token keyword">of</span> ransomNote<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    helper<span class="token punctuation">[</span>str<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">-</span> pivot<span class="token punctuation">]</span><span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> helper<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.52,words:157},y:"a",t:"赎金信",O:4},["/算法题/哈希表/4.html","/算法题/哈希表/4.md",":md"]],["v-614b8998","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%93%88%E5%B8%8C%E8%A1%A8/5.html",{d:1705824349e3,c:["算法题","链表"],e:`<h2> 链接</h2>
<p><a href="https://leetcode.cn/problems/two-sum/" target="_blank" rel="noopener noreferrer">链接</a></p>
<h2> 思路</h2>
<p>用 map 的 key 存储数字，value 存储对应的索引位置。遍历数组，如果不能从 map 中找到和这个数对应的数，则将该数加入 map</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">twoSum</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> find <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>find<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">[</span>i<span class="token punctuation">,</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>find<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.35,words:104},y:"a",t:"两数相加",O:5},["/算法题/哈希表/5.html","/算法题/哈希表/5.md",":md"]],["v-5de1d85a","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%93%88%E5%B8%8C%E8%A1%A8/6.html",{d:1705824349e3,c:["算法题","链表"],e:`<h2> 链接</h2>
<p>(四数相加)[https://leetcode.cn/problems/4sum-ii/]</p>
<h2> 思路</h2>
<p>该题只要求满足条件数组的次数，并且没有元素不能重复的要求，适合用哈希表来完成<br>
可以将四个数组分为两组，每组分别进行嵌套循环，第一组将所有可能的加和结果存入 map，第二组从第一组中找是否有满足条件的结果</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">fourSumCount</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums1<span class="token punctuation">,</span> nums2<span class="token punctuation">,</span> nums3<span class="token punctuation">,</span> nums4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> n1 <span class="token keyword">of</span> nums1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> n2 <span class="token keyword">of</span> nums2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> sum <span class="token operator">=</span> n1 <span class="token operator">+</span> n2<span class="token punctuation">;</span>
      map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>sum<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> n1 <span class="token keyword">of</span> nums3<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> n2 <span class="token keyword">of</span> nums4<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> sum <span class="token operator">=</span> n1 <span class="token operator">+</span> n2<span class="token punctuation">;</span>
      count <span class="token operator">+=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">-</span>sum<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.58,words:173},y:"a",t:"四数相加",O:6},["/算法题/哈希表/6.html","/算法题/哈希表/6.md",":md"]],["v-712bf818","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/1.html",{d:1705824349e3,c:["算法题","字符串"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/reverse-string/" target="_blank" rel="noopener noreferrer">反转字符串</a></p>
<h2> 思路</h2>
<p>双指针交换顺序</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">reverseString</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> len <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    r <span class="token operator">=</span> len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>s<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    l<span class="token operator">++</span><span class="token punctuation">;</span>
    r<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> s<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.22,words:67},y:"a",t:"反转字符串",O:1},["/算法题/字符串/1.html","/算法题/字符串/1.md",":md"]],["v-6dc246da","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/2.html",{d:1705824349e3,c:["算法题","字符串"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/reverse-string-ii/" target="_blank" rel="noopener noreferrer">链接</a></p>
<h2> 思路</h2>
<p>分[0,k],[k,2k],(2k,...)三种情况讨论，当大于 2k，就进行递归</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">reverseStr</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> k</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> l <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> newstr<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newstr <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> <span class="token number">2</span> <span class="token operator">*</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newstr <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token operator">+</span> s<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&gt;</span> <span class="token number">2</span> <span class="token operator">*</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newstr <span class="token operator">=</span> <span class="token function">reverseStr</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> k<span class="token punctuation">)</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">reverseStr</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> k<span class="token punctuation">)</span><span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> newstr<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.34,words:103},y:"a",t:"反转字符串2",O:2},["/算法题/字符串/2.html","/算法题/字符串/2.md",":md"]],["v-6a58959c","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/3.html",{d:1705824349e3,c:["算法题","字符串"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/reverse-words-in-a-string/" target="_blank" rel="noopener noreferrer">翻转字符串里的单词</a></p>
<h2> 思路</h2>
<ol>
<li>去除多余的空格</li>
<li>整个字符串反转</li>
<li>逐单词反转</li>
</ol>
<p>举个例子，源字符串为："the sky is blue "</p>
<ul>
<li>移除多余空格 : "the sky is blue"</li>
<li>字符串反转："eulb si yks eht"</li>
<li>单词反转："blue is sky the"</li>
</ul>`,r:{minutes:1.14,words:341},y:"a",t:"翻转字符串里的单词",O:3},["/算法题/字符串/3.html","/算法题/字符串/3.md",":md"]],["v-66eee45e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/4.html",{d:1705824349e3,c:["算法题","字符串"],e:`<h2> 链接</h2>
<p><a href="https://www.programmercarl.com/0028.%E5%AE%9E%E7%8E%B0strStr.html#%E7%AE%97%E6%B3%95%E5%85%AC%E5%BC%80%E8%AF%BE" target="_blank" rel="noopener noreferrer">链接</a></p>
<h2> 思路</h2>
<ol>
<li>
<p>暴力搜索滑动窗口：每次查询都是独立的，无法利用上次的查询信息，最差的情况时间复杂度可达 O(n * M)</p>
</li>
<li>
<p>KMP-算法：可以利用上一次的查询信息</p>
</li>
</ol>`,r:{minutes:1.46,words:439},y:"a",t:"实现 strStr()-KMP算法",O:4},["/算法题/字符串/4.html","/算法题/字符串/4.md",":md"]],["v-56c8aa60","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/1.%E8%AF%BE%E7%A8%8B%E8%A1%A8.html",{d:1710073278e3,c:["算法题","拓扑排序"],e:`<h2> 题目</h2>
<p><a href="https://leetcode.cn/problems/course-schedule/solutions/250377/bao-mu-shi-ti-jie-shou-ba-shou-da-tong-tuo-bu-pai-/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p><a href="https://leetcode.cn/problems/course-schedule/solutions/250377/bao-mu-shi-ti-jie-shou-ba-shou-da-tong-tuo-bu-pai-/" target="_blank" rel="noopener noreferrer">题解</a></p>`,r:{minutes:.5,words:149},y:"a",t:"课程表",O:1},["/算法题/拓扑排序/1.课程表.html","/算法题/拓扑排序/1.课程表.md",":md"]],["v-50f12e0f","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%8E%92%E5%BA%8F/%E5%A0%86%E6%8E%92%E5%BA%8F.html",{d:1710164579e3,c:["算法题","排序"],e:`<h2> 题目连接</h2>
<p><a href="https://leetcode.cn/problems/kth-largest-element-in-an-array/description/" target="_blank" rel="noopener noreferrer">题目描述</a></p>
<h2> 思路</h2>
<p><a href="https://juejin.cn/post/6986510821291638815" target="_blank" rel="noopener noreferrer">堆排序</a>
<a href="https://zhuanlan.zhihu.com/p/124885051" target="_blank" rel="noopener noreferrer">动图</a>
堆一般指的是二叉堆，顾名思义，二叉堆是完全二叉树或者近似完全二叉树,具有以下性质：</p>`,r:{minutes:1.63,words:490},y:"a",t:"第k个大的元素",O:2},["/算法题/排序/堆排序.html","/算法题/排序/堆排序.md",":md"]],["v-fa74dda6","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%8E%92%E5%BA%8F/%E5%BF%AB%E6%8E%92.html",{d:1710073278e3,c:["算法题","排序"],e:`<h2> 思路</h2>
<p>（1）在数据集之中，选择一个元素作为"基准"（pivot）。</p>
<p>（2）所有小于"基准"的元素，都移到"基准"的左边；所有大于"基准"的元素，都移到"基准"的右边。</p>
<p>（3）对"基准"左边和右边的两个子集，不断重复第一步和第二步，直到所有子集只剩下一个元素为止</p>
<p><a href="https://www.ruanyifeng.com/blog/2011/04/quicksort_in_javascript.html" target="_blank" rel="noopener noreferrer">图解</a></p>
<h2> 实现</h2>`,r:{minutes:.57,words:171},y:"a",t:"快排",O:1},["/算法题/排序/快排.html","/算法题/排序/快排.md",":md"]],["v-f2e0b34a","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/1.html",{d:169960453e4,c:["算法题","数组"],e:`<h2> 题目</h2>
<p><a href="https://leetcode.cn/problems/binary-search/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 二分法</h2>
<p>前提：有序数据集合；无重复（重复会导致下标不唯一）
关键：区间定义，[left,right] or [left,right)</p>
<ol>
<li>闭区间:[left right]</li>
</ol>
<ul>
<li>
<p>while 的条件为 left&lt;=right，因为 <code>left=right</code> 时还没有检验过</p>
</li>
<li>
<p>边界移动条件为 middle+1 或者 middle-1，因此 middle 经过了检验</p>
<figure><img src="/assets/images/alg/闭区间.jpg" alt="闭区间" tabindex="0" loading="lazy"><figcaption>闭区间</figcaption></figure>
</li>
</ul>`,r:{minutes:.86,words:257},y:"a",t:"二分查找",O:1},["/算法题/数组/1.html","/算法题/数组/1.md",":md"]],["v-ef77020c","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/2.html",{d:169960453e4,c:["算法题"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/remove-element/description/" target="_blank" rel="noopener noreferrer">移除元素</a></p>
<h2> 思路</h2>
<p>双指针-拷贝覆盖</p>
<p><a href="https://leetcode.cn/problems/remove-duplicates-from-sorted-array/solutions/683841/shuang-zhi-zhen-shan-chu-you-xu-shu-zu-z-3pi4/" target="_blank" rel="noopener noreferrer">图解</a></p>`,r:{minutes:.83,words:250},y:"a",t:"移除元素-双指针法",O:2},["/算法题/数组/2.html","/算法题/数组/2.md",":md"]],["v-e8a39f90","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/4.html",{d:1705824349e3,c:["算法题"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/spiral-matrix-ii/" target="_blank" rel="noopener noreferrer">螺旋矩形</a></p>
<h2> 思路</h2>
<p><a href="https://leetcode.cn/problems/spiral-matrix-ii/solutions/12594/spiral-matrix-ii-mo-ni-fa-she-ding-bian-jie-qing-x/" target="_blank" rel="noopener noreferrer">题解</a></p>`,r:{minutes:.78,words:235},y:"a",t:"模拟——螺旋矩形",O:4},["/算法题/数组/4.html","/算法题/数组/4.md",":md"]],["v-e539ee52","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/5.html",{d:1709804676e3,c:["算法题"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/next-permutation/description/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>如果是一个递减数组，那么就没有大于该数组的排列，直接反转即可</p>
<p>如果不是一个递减数组，则<mark>从右往左</mark>遍历，找到第一个非递减元素 i(即这个元素之后的数组都是单调递减的)</p>
<p>然后重新从右往左遍历，找到第一个大于 i 的元素 j（j 是大于 i 的最小元素，保证下一个排列最接近的），与 i 交换顺序</p>`,r:{minutes:1.07,words:322},y:"a",t:"下一个排列",O:5},["/算法题/数组/5.html","/算法题/数组/5.md",":md"]],["v-7e0a98e5","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/6.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C.html",{d:1712390338e3,c:["算法题","链表"],e:`<h2> 链接</h2>
<p>(三数相加)[https://leetcode.cn/problems/3sum/]</p>
<h2> 基础-两数之和</h2>
<p>思路：先对数组进行排序，根据首位双指针的和进行判断，如果大于 taget，则尾指针向前移动；如果小于 target，则首指针向后移动
优化：如果最小的数都大于 target，则没有满足的条件</p>
<h2> 三数之和-思路</h2>
<ol>
<li>首先将三数之和转化为一个两数之和问题，x+y+z = 0 =》 y+z = -x</li>
<li>遍历 nums，将每一个元素作为 x，寻找 y 和 z，化为两数之和的问题</li>
<li>优化：</li>
</ol>`,r:{minutes:2.65,words:795},y:"a",t:"三数相加",O:6},["/算法题/数组/6.三数之和.html","/算法题/数组/6.三数之和.md",":md"]],["v-c75feb94","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/1.html",{d:1705824349e3,c:["算法题","栈与队列"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/implement-queue-using-stacks/description/" target="_blank" rel="noopener noreferrer">用栈实现队列</a></p>
<h2> 思路</h2>
<p>入队列时，可以用一个 stackin 栈保存推入队列的元素；在出队列时，让 stackin 的元素依次出栈(pop) 并推入 stackout 中<br>
此时先入队列的元素排在了 stackout 的末尾，在让 stackout 的元素依次出栈，即可达成队列先入先出的效果</p>`,r:{minutes:.56,words:168},y:"a",t:"用栈实现队列",O:1},["/算法题/栈与队列/1.html","/算法题/栈与队列/1.md",":md"]],["v-c3f63a56","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/2.html",{d:1705824349e3,c:["算法题","栈与队列"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/implement-stack-using-queues/" target="_blank" rel="noopener noreferrer">链接</a></p>
<h2> 思路</h2>
<ol>
<li>
<p>两个队列
队列由于是先进先出，无法像栈那样做到反转顺序，因此为了实现栈的效果，只能将最后一个元素之前的所有元素都保存到另一个队列中，然后再将这个元素出队列</p>
</li>
<li>
<p>一个队列
将最后一个元素之前的元素都按顺序移动到当前队列的末尾，然后再出列</p>
</li>
</ol>`,r:{minutes:1,words:299},y:"a",t:"用队列实现栈",O:2},["/算法题/栈与队列/2.html","/算法题/栈与队列/2.md",":md"]],["v-c08c8918","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/3.html",{d:1705824349e3,c:["算法题","栈与队列"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/valid-parentheses/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>如果是有效的括号，在遍历时遇到闭符号，那么其前前一个字符一定是对应的开符号<br>
因此可以在遍历字符串时，每遇到一个开符号，就在栈中添加一个对应的闭符号；如果遇到一个闭符号，就与栈中最后一个元素比较，如果不同，就无效</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">isValid</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    map <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token string-property property">"("</span><span class="token operator">:</span> <span class="token string">")"</span><span class="token punctuation">,</span>
      <span class="token string-property property">"{"</span><span class="token operator">:</span> <span class="token string">"}"</span><span class="token punctuation">,</span>
      <span class="token string-property property">"["</span><span class="token operator">:</span> <span class="token string">"]"</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token keyword">in</span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!==</span> x<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token operator">!</span>stack<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.52,words:155},y:"a",t:"有效的括号",O:3},["/算法题/栈与队列/3.html","/算法题/栈与队列/3.md",":md"]],["v-bd22d7da","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/4.html",{d:1705824349e3,c:["算法题","栈与队列"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/remove-all-adjacent-duplicates-in-string/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>与有效的括号类似</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">removeDuplicates</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> stack<span class="token punctuation">[</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> stack<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.26,words:79},y:"a",t:"删除字符串中的所有相邻重复项",O:4},["/算法题/栈与队列/4.html","/算法题/栈与队列/4.md",":md"]],["v-b9b9269c","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/5.html",{d:1705824349e3,c:["算法题"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/sliding-window-maximum/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>找滑动窗口中的最大递减队列，那么其第一个元素就是当前滑动窗口的最大元素
如何找最大递减队列：滑动窗口每移动一次，加入一个新元素，就将队列中小于该元素的其他元素全部删除，剩下的就是最大递减队列
注意：如果当前滑动窗口最左侧的元素等于队列中的最大元素，那么滑动窗口下一次移动时，需要将该元素脱离队列</p>`,r:{minutes:1.08,words:325},y:"a",t:"滑动窗口最大值",O:5},["/算法题/栈与队列/5.html","/算法题/栈与队列/5.md",":md"]],["v-b64f755e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/6.html",{d:1705824349e3,c:["算法题"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/top-k-frequent-elements/" target="_blank" rel="noopener noreferrer">链接</a></p>
<h2> 思路</h2>
<p>桶排序</p>
<ol>
<li>首先用 map 统计每个数的频次</li>
<li>遍历 map，以频数为下标，key 为值保存到数组中（因为可能有相同频数的，所以数组中的每个元素也是数组）</li>
<li>倒序遍历数组，取 k 个最大的</li>
</ol>
<h2> 实现</h2>
<ol>
<li>暴力排序</li>
</ol>`,r:{minutes:.85,words:254},y:"a",t:"前k个高频元素",O:6},["/算法题/栈与队列/6.html","/算法题/栈与队列/6.md",":md"]],["v-b65ee6b0","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/7.%E6%9C%80%E5%B0%8F%E6%A0%88.html",{d:1710073278e3,c:["算法题","栈"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/min-stack/description/" target="_blank" rel="noopener noreferrer">链接</a></p>
<h2> 思路</h2>
<p>借助一个辅助栈，用于保存当前数组中的最小元素，每次栈中推入或删除元素，辅助栈也相应更新</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">MinStack</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// 辅助栈</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>minStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">Infinity</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">val</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">void</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token class-name">MinStack</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">push</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> len <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 辅助栈更新当加入当前元素后，数组的最小元素</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">[</span>len <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">void</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token class-name">MinStack</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">pop</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 辅助栈也需要跟随删除</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token class-name">MinStack</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">top</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>stack<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>stack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token class-name">MinStack</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getMin</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>minStack<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.52,words:156},y:"a",t:"最小栈",O:7},["/算法题/栈与队列/7.最小栈.html","/算法题/栈与队列/7.最小栈.md",":md"]],["v-288877bb","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%B7%B1%E6%90%9C/1.%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F.html",{d:1710996656e3,c:["算法题","DFS"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/number-of-islands/" target="_blank" rel="noopener noreferrer">岛屿数量</a></p>
<h2> 思路</h2>
<p>沉岛：找到一个陆地（1），就不断向四周扩张，将与其相邻的岛屿都变为 0（防止 DFS 遍历到它们时，会对一个岛重复计数）</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">numIslands</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">grid</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> grid<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">"1"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        count<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token comment">// 沉岛</span>
        <span class="token function">turnZero</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> grid<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">turnZero</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span> j<span class="token punctuation">,</span> grid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 超限或不为1，退出</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    i <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
    i <span class="token operator">&gt;=</span> grid<span class="token punctuation">.</span>length <span class="token operator">||</span>
    j <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span>
    j <span class="token operator">&gt;=</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">||</span>
    grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">"0"</span>
  <span class="token punctuation">)</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token comment">// 设为0</span>
  grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"0"</span><span class="token punctuation">;</span>
  <span class="token comment">// 向四周扩张</span>
  <span class="token function">turnZero</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> grid<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">turnZero</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> grid<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">turnZero</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> grid<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">turnZero</span><span class="token punctuation">(</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">,</span> grid<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.59,words:177},y:"a",t:"岛屿数量",O:1},["/算法题/深搜/1.岛屿数量.html","/算法题/深搜/1.岛屿数量.md",":md"]],["v-0c868226","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/1.%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E5%9F%BA%E7%A1%80.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 贪心算法的思想</h2>
<p>贪心的本质是选择每一阶段的局部最优，从而达到全局最优。</p>
<p>例如，有一堆钞票，你可以拿走十张，如果想达到最大的金额，你要怎么拿？</p>
<p>指定每次拿最大的，最终结果就是拿走最大数额的钱。</p>
<p>贪心算法并不想回溯，有固定的套路，因此贪心算法实际上就是在模拟局部最优的过程，从而推出整体最优</p>
<h2> 贪心算法的集体步骤</h2>
<p>贪心算法一般分为如下四步：</p>
<ul>
<li>将问题分解为若干个子问题</li>
<li>找出适合的贪心策略</li>
<li>求解每一个子问题的最优解</li>
<li>将局部最优解堆叠成全局最优解</li>
</ul>`,r:{minutes:.71,words:212},y:"a",t:"贪心算法基础",O:1},["/算法题/贪心算法/1.贪心算法基础.html","/算法题/贪心算法/1.贪心算法基础.md",":md"]],["v-3d8de10b","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/10.%E6%A0%B9%E6%8D%AE%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/queue-reconstruction-by-height/description/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p><a href="https://www.programmercarl.com/0406.%E6%A0%B9%E6%8D%AE%E8%BA%AB%E9%AB%98%E9%87%8D%E5%BB%BA%E9%98%9F%E5%88%97.html#%E7%AE%97%E6%B3%95%E5%85%AC%E5%BC%80%E8%AF%BE" target="_blank" rel="noopener noreferrer">题解</a></p>`,r:{minutes:.7,words:209},y:"a",t:"根据身高重建队列",O:10},["/算法题/贪心算法/10.根据身高重建队列.html","/算法题/贪心算法/10.根据身高重建队列.md",":md"]],["v-d635ed6e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/11.%E7%94%A8%E6%9C%80%E5%B0%91%E6%95%B0%E9%87%8F%E7%9A%84%E7%AE%AD%E5%BC%95%E7%88%86%E6%B0%94%E7%90%83.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons/" target="_blank" rel="noopener noreferrer">最少数量的箭引爆气球</a></p>
<h2> 思路</h2>
<p>局部最优：找到请可能多的重叠区间，按照开始位置或者结束位置排序，判断有多少区间是相交的</p>
<h2> 实现</h2>
<blockquote>
<p>结束位置排序</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">findMinArrowShots</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">points</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  points<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
    right <span class="token operator">=</span> points<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> points<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>right <span class="token operator">&lt;</span> points<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      right <span class="token operator">=</span> points<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      count<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.62,words:187},y:"a",t:"最少数量的箭引爆气球",O:11},["/算法题/贪心算法/11.用最少数量的箭引爆气球.html","/算法题/贪心算法/11.用最少数量的箭引爆气球.md",":md"]],["v-23025503","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/12.%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/non-overlapping-intervals/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>本质上与 11 题类似，是区间重叠的问题，该题要求移除区间的最小数量，实际上只要找到不重叠区间的数量，再用总数量减去该数量即可</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">eraseOverlapIntervals</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">intervals</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 先按照右边界排序</span>
  intervals<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
    right <span class="token operator">=</span> intervals<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> intervals<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> cur <span class="token operator">=</span> intervals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// 不重叠的情况</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      count<span class="token operator">++</span><span class="token punctuation">;</span>
      right <span class="token operator">=</span> cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 总区间数量 - 不重叠区间数量</span>
  <span class="token keyword">return</span> intervals<span class="token punctuation">.</span>length <span class="token operator">-</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.53,words:159},y:"a",t:"无重叠区间",O:12},["/算法题/贪心算法/12.无重叠区间.html","/算法题/贪心算法/12.无重叠区间.md",":md"]],["v-4d5da57f","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/13.%E5%88%92%E5%88%86%E5%AD%97%E6%AF%8D%E5%8C%BA%E9%97%B4.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/partition-labels/description/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>该题的难点在于判断什么时候该分割，即分割后的字符串是还还会包含前面的字母？</p>
<p>为了解决这个问题，可以利用每个字母最后出现的索引来实现，在遍历字符串时，记录遍历过字母最后出现索引的最大值，如果该值等于当前索引，那么就切割</p>
<p><a href="https://www.programmercarl.com/0435.%E6%97%A0%E9%87%8D%E5%8F%A0%E5%8C%BA%E9%97%B4.html#%E7%AE%97%E6%B3%95%E5%85%AC%E5%BC%80%E8%AF%BE" target="_blank" rel="noopener noreferrer">图解</a></p>`,r:{minutes:.85,words:255},y:"a",t:"划分字母区间",O:13},["/算法题/贪心算法/13.划分字母区间.html","/算法题/贪心算法/13.划分字母区间.md",":md"]],["v-fd1b3d04","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/14.%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/merge-intervals/" target="_blank" rel="noopener noreferrer">合并区间</a></p>
<h2> 思路</h2>
<p>与前几题区间重叠题目类似，但需要在注意的是，本题在遍历完之后，会剩余一个元素，需要在遍历结束后放入结果数组</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">merge</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">intervals</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  intervals<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> intervals<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    right <span class="token operator">=</span> intervals<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> intervals<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> cur <span class="token operator">=</span> intervals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      right <span class="token operator">=</span> cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      left <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>left<span class="token punctuation">,</span> right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      left <span class="token operator">=</span> cur<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      right <span class="token operator">=</span> cur<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 因为是把当前的和上一次对比，然后把上一次的加入;因此遍历完之后会剩下最后一个元素，要加入</span>
  res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>left<span class="token punctuation">,</span> right<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.61,words:184},y:"a",t:"划分字母区间",O:14},["/算法题/贪心算法/14.合并区间.html","/算法题/贪心算法/14.合并区间.md",":md"]],["v-0bec1b39","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/15.%E5%8D%95%E8%B0%83%E9%80%92%E5%A2%9E%E6%95%B0%E5%AD%97.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/monotone-increasing-digits/" target="_blank" rel="noopener noreferrer">单调递增的数字</a></p>
<h2> 思路</h2>
<p>以两位数 98 为例，如果想要找到它的最小单调数，首先需要末位变为 9 ，然后前一位-1，这样得到的数 89 才是最大的</p>
<p>根据这个思路，从后往前遍历，调整数字</p>
<p>注意点：如果中间某个数字变为 9 之后，其之后的位数都需要变为 9，才是最大的，如对于 124356 而言，123956 &lt; 123999</p>`,r:{minutes:.63,words:188},y:"a",t:"",O:15},["/算法题/贪心算法/15.单调递增数字.html","/算法题/贪心算法/15.单调递增数字.md",":md"]],["v-4d898dff","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/2.%E6%91%86%E5%8A%A8%E5%BA%8F%E5%88%97.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/wiggle-subsequence/" target="_blank" rel="noopener noreferrer">摆动序列</a></p>
<h2> 思路</h2>
<p>考虑最理想的情况：如果整个序列都是摆动序列，如果用图形来表示，那么这个序列就是由连续的波峰和波谷构成的</p>
<p>因此局部最优的情况就是某个元素能不能构成一个波峰和波谷，要判断这一点就需要前后的插值 prediff 和 curdiff</p>
<p>如果(prediff &lt; 0 &amp;&amp; curdiff &gt; 0) || (prediff &gt; 0 &amp;&amp; curdiff &lt;= 0)，那么说明该元素是一个波峰或者波谷</p>`,r:{minutes:1.31,words:392},y:"a",t:"摆动序列",O:2},["/算法题/贪心算法/2.摆动序列.html","/算法题/贪心算法/2.摆动序列.md",":md"]],["v-669ec558","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/3.%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%88%97.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/maximum-subarray/description/" target="_blank" rel="noopener noreferrer">最大子序列</a>‘</p>
<h2> 思路</h2>
<p>局部最优：当前“连续和”为负数的时候立刻放弃，从下一个元素重新计算“连续和”，因为负数加上下一个元素 “连续和”只会越来越小</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">maxSubArray</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">Infinity</span><span class="token punctuation">,</span>
    count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    count <span class="token operator">+=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&gt;</span> res<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res <span class="token operator">=</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.39,words:117},y:"a",t:"最大子序列",O:3},["/算法题/贪心算法/3.最大子序列.html","/算法题/贪心算法/3.最大子序列.md",":md"]],["v-716a55b2","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/4.%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA2.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/" target="_blank" rel="noopener noreferrer">买卖股票的最佳时机</a></p>
<h2> 思路</h2>
<p>贪心：利润时可以分解的,比如[1,5,13] 13-1=(13-5)+(5-1)；因此可以把利润拆成天维度的，如果今天的股价比昨天高，就出售
注意：这题是在每一天都可以购入购出，如果只能一天购入、另一天购出，那么此方法不受用</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">maxProfit</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">prices</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> profit <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> prices<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    curdiff <span class="token operator">=</span> prices<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>curdiff <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      profit <span class="token operator">+=</span> curdiff<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> profit<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.53,words:160},y:"a",t:"买卖股票的最佳时机",O:4},["/算法题/贪心算法/4.买卖股票的最佳时机2.html","/算法题/贪心算法/4.买卖股票的最佳时机2.md",":md"]],["v-74421e60","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/5.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/jump-game/" target="_blank" rel="noopener noreferrer">跳跃游戏</a></p>
<h2> 思路</h2>
<p><a href="https://www.programmercarl.com/0055.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F.html#%E5%85%B6%E4%BB%96%E8%AF%AD%E8%A8%80%E7%89%88%E6%9C%AC" target="_blank" rel="noopener noreferrer">图解</a></p>`,r:{minutes:.72,words:216},y:"a",t:"跳跃游戏",O:5},["/算法题/贪心算法/5.跳跃游戏.html","/算法题/贪心算法/5.跳跃游戏.md",":md"]],["v-4aea66c2","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/6.%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F2.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/jump-game-ii/" target="_blank" rel="noopener noreferrer">跳跃游戏 2</a></p>
<h2> 思路</h2>
<p>该题的跳跃方法和上一题一样，但要返回的是步数，因此重点是判断什么时候需要增加步数</p>
<p>上一题的 cover 是整体的一个最大覆盖范围，为了判断，需要获取每一步当前的覆盖范围和下一步的覆盖范围</p>
<p>同时遍历的重点是倒数第二个元素，如果当前的 cover 的右边界=倒数第二个元素，则还需要走一步；否则不需要</p>`,r:{minutes:.85,words:254},y:"a",t:"跳跃游戏2",O:6},["/算法题/贪心算法/6.跳跃游戏2.html","/算法题/贪心算法/6.跳跃游戏2.md",":md"]],["v-29058be8","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/7.k%E6%AC%A1%E5%8F%96%E5%8F%8D%E5%90%8E%E6%9C%80%E5%A4%A7%E5%8C%96%E6%95%B0%E7%BB%84%E5%92%8C.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/maximize-sum-of-array-after-k-negations/description/" target="_blank" rel="noopener noreferrer">K 次取反后最大化数组和</a></p>
<h2> 思路</h2>
<ol>
<li>
<p>分情况处理：先对数组按大小排序，然后根据数组是否有负数分以及 k 是否是偶数进行处理</p>
</li>
<li>
<p>统一处理：对数组按绝对值大小排序（从大到小），然后遍历数组，先恢复负数，然后进行累加；如果 k 有剩余，就讲最后一个元素减去（2 倍）</p>
</li>
</ol>`,r:{minutes:.92,words:277},y:"a",t:"K次取反后最大化数组和",O:7},["/算法题/贪心算法/7.k次取反后最大化数组和.html","/算法题/贪心算法/7.k次取反后最大化数组和.md",":md"]],["v-48d24a5e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/8.%E6%9F%A0%E6%AA%AC%E6%B0%B4%E6%89%BE%E9%9B%B6.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/lemonade-change/" target="_blank" rel="noopener noreferrer">柠檬水找零</a></p>
<h2> 思路</h2>
<p>局部最优：如果收到 20 块优先用 10 块找零，减少 5 块的消耗</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">lemonadeChange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">bills</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> five <span class="token operator">=</span> <span class="token punctuation">(</span>ten <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> bills<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>bills<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>
        five<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">10</span><span class="token operator">:</span>
        ten<span class="token operator">++</span><span class="token punctuation">;</span>
        five<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token keyword">case</span> <span class="token number">20</span><span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ten <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          ten<span class="token operator">--</span><span class="token punctuation">;</span>
          five<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          five <span class="token operator">-=</span> <span class="token number">3</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>five <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> ten <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.35,words:104},y:"a",t:"柠檬水找零",O:8},["/算法题/贪心算法/8.柠檬水找零.html","/算法题/贪心算法/8.柠檬水找零.md",":md"]],["v-75f222a2","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/9.%E5%8A%A0%E6%B2%B9%E7%AB%99.html",{d:1705824349e3,c:["算法题","贪心算法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/gas-station/" target="_blank" rel="noopener noreferrer">加油站</a></p>
<h2> 思路</h2>
<p>如果 gas 的总和小于 &lt; cost 总和，那么肯定无法到达</p>
<p>从第一个加油站开始遍历，假设到第 i 个加油站时，curSum&lt;0,那么说明 0-i 之间的加油站都无法作为出发站；从第 i+1 开始继续遍历</p>
<p>为什么是 i+1:</p>
<p>设 n &lt; i,已知在 0-n 之间，curSum&gt;0,而在 0-i 之间，curSum&lt;0。因此 n-i 之间比小于 0，所以 0-i 之间的站都不行</p>`,r:{minutes:.64,words:191},y:"a",t:"加油站",O:9},["/算法题/贪心算法/9.加油站.html","/算法题/贪心算法/9.加油站.md",":md"]],["v-21abeb46","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%80%92%E5%BD%92/1.m%E7%9A%84n%E6%AC%A1%E6%96%B9.html",{d:1712390338e3,c:["算法题","递归"],e:`<h2> 题目要求</h2>
<p>计算 m 的 n 次方，要求时间复杂度为 O(logn)</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">getExponentiation</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">m<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> m<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getExponentiation</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getExponentiation</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">*</span> m<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.23,words:68},y:"a",t:"m的n次方",O:1},["/算法题/递归/1.m的n次方.html","/算法题/递归/1.m的n次方.md",":md"]],["v-00b8db69","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/1.html",{d:1705824349e3,c:["算法题","链表"],e:`<h2> 链表的类型</h2>
<figure><img src="/assets/images/链表/单链表.png" alt="单链表" tabindex="0" loading="lazy"><figcaption>单链表</figcaption></figure>
<figure><img src="/assets/images/链表/双链表.png" alt="双链表" tabindex="0" loading="lazy"><figcaption>双链表</figcaption></figure>
<figure><img src="/assets/images/链表/循环链表.png" alt="循环链表" tabindex="0" loading="lazy"><figcaption>循环链表</figcaption></figure>`,r:{minutes:.26,words:79},y:"a",t:"链表的定义",O:1},["/算法题/链表/1.html","/算法题/链表/1.md",":md"]],["v-04228ca7","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/3.html",{d:1705824349e3,c:["算法题","链表"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/design-linked-list/" target="_blank" rel="noopener noreferrer">链接</a></p>
<h2> 思路</h2>
<p>查询第 index 结点的值：从头结点开始 next index 次</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">LinkNode</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    val <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    next <span class="token operator">?</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> <span class="token function-variable function">MyLinkedList</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token comment">// this.tail和head是两个node</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">index</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>node<span class="token punctuation">}</span></span>
 */</span>
<span class="token class-name">MyLinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">getNode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> index <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//0-&gt;head</span>
  <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNode</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    temp <span class="token operator">=</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    index<span class="token operator">--</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> temp<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">index</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span>
 */</span>
<span class="token class-name">MyLinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> index <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_size<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token comment">// 获取当前节点</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNode</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">.</span>val<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">val</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">void</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token class-name">MyLinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">addAtHead</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNode</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token comment">//没有tail说明之前没有元素</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">val</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">void</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token class-name">MyLinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">addAtTail</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNode</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>tail<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//没有tail说明是的链表</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> newNode<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">index</span>
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">val</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">void</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token class-name">MyLinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">addAtIndex</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addAtHead</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addAtTail</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> first <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNode</span><span class="token punctuation">(</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> second <span class="token operator">=</span> first<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token keyword">let</span> node <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkNode</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> second<span class="token punctuation">)</span><span class="token punctuation">;</span>
  first<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">++</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span>number<span class="token punctuation">}</span></span> <span class="token parameter">index</span>
 * <span class="token keyword">@return</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token keyword">void</span><span class="token punctuation">}</span></span>
 */</span>
<span class="token class-name">MyLinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">deleteAtIndex</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">||</span> index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    <span class="token comment">// 如果删除的这个节点同时是尾节点，要处理尾节点</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>_tail <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_head<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 处理尾结点</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>tail <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNode</span><span class="token punctuation">(</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> node <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNode</span><span class="token punctuation">(</span>index <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  node<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getNode</span><span class="token punctuation">(</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">--</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.35,words:405},y:"a",t:"定义链表",O:3},["/算法题/链表/3.html","/算法题/链表/3.md",":md"]],["v-078c3de5","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/5.html",{d:1705824349e3,c:["算法题","链表"],e:`<h2> 题目连接</h2>
<p><a href="https://leetcode.cn/problems/swap-nodes-in-pairs/description/" target="_blank" rel="noopener noreferrer">两两交换链表元素</a></p>
<h2> 思路</h2>
<p>两两交换链表除了改变相邻结点的 next 关系外，还需要改变前一个结点的 next，因此就是 3 个一组进行处理，可以采用滑动窗口方法</p>
<figure><img src="/assets/images/链表/交换链表.jpg" alt="滑动窗口" tabindex="0" loading="lazy"><figcaption>滑动窗口</figcaption></figure>`,r:{minutes:.69,words:207},y:"a",t:"两两交换链表元素",O:5},["/算法题/链表/5.html","/算法题/链表/5.md",":md"]],["v-09411684","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/6.html",{d:1705824349e3,c:["算法题","链表"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/intersection-of-two-linked-lists-lcci/" target="_blank" rel="noopener noreferrer">链表相交</a></p>
<h2> 思路</h2>
<p>因为题目中给的两个链表是在某个结点之后完全相交，因此可以将两个链表在尾部进行对齐，然后同时遍历</p>
<figure><img src="/assets/images/链表/链表相交.png" alt="图解" tabindex="0" loading="lazy"><figcaption>图解</figcaption></figure>`,r:{minutes:1.42,words:426},y:"a",t:"链表相交",O:6},["/算法题/链表/6.html","/算法题/链表/6.md",":md"]],["v-4638a3e0","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/8.LRU%E7%BC%93%E5%AD%98(%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8).html",{d:1712390338e3,c:["算法题","双向链表"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/lru-cache/" target="_blank" rel="noopener noreferrer">LRU 缓存</a></p>
<h2> 思路</h2>
<p>数据结构的选择：</p>
<ol>
<li>
<p>map+array:map 存储 key 和 value，array 维护操作顺序。 缺点：array 的插入/移动/删除的复杂度都为 O(n)</p>
</li>
<li>
<p>map+双向链表：map 存储 key 和 key 对应的 node；双向链表存储 key 和 val。 优点：双向链表的移动和删除都是指针的变化，复杂度为 O(1)</p>
</li>
</ol>`,r:{minutes:1.4,words:419},y:"a",t:"LRU缓存",O:8},["/算法题/链表/8.LRU缓存(双向链表).html","/算法题/链表/8.LRU缓存(双向链表).md",":md"]],["v-37027a41","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/0.%E6%A6%82%E8%BF%B0/1.%E6%A6%82%E8%BF%B0.html",{d:1710583872e3,c:["使用指南","vue"],e:`<h2> 虚拟 DOM</h2>
<p>虚拟 DOM: 用 JavaScript 对象描述 UI 的方式</p>
<p>目的：让用户可以声明式地去构建 UI，相较于调用 DOM api 命令式代码，可维护性更高，心智负担低；虽然性能不如命令式代码，但可以通过 Diff 算法找出虚拟 DOM 变化的地方（javascript 层面的运算，消耗远小于 DOM 层面的计算），再进行必须要的 DOM 更新，避免全量更新，提高性能。</p>
<p>优点：</p>
<ol>
<li>提高开发效率：能够基于函数式 UI 的编程方式实现高效的声明式编程</li>
<li>跨平台问题：虚拟 DOM 是对真实渲染内容的一层抽象。同一套虚拟 DOM，可以对接不同平台的渲染逻辑(可以将 DOM 操作抽离出来)，从而实现“一次编码，多端运行”</li>
</ol>`,r:{minutes:2.54,words:762},y:"a",t:"一、vue概述",i:"laptop-code",O:1},["/vue-learn/运行时/0.概述/1.概述.html","/vue-learn/运行时/0.概述/1.概述.md",":md"]],["v-7b68941e","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/1.%E6%B8%B2%E6%9F%93%E5%99%A8/1.html",{d:1705824349e3,c:["使用指南"],e:`<h2> 渲染器与响应性系统结合</h2>
<div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">const</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> effect <span class="token punctuation">}</span> <span class="token operator">=</span> Vue<span class="token punctuation">;</span>

  <span class="token keyword">const</span> num <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">render</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"app"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> num<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token function">effect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  num<span class="token punctuation">.</span>value<span class="token operator">++</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:12.86,words:3857},y:"a",t:"一、vue.js设计与实现阅读-渲染器",i:"laptop-code",O:1},["/vue-learn/运行时/1.渲染器/1.html","/vue-learn/运行时/1.渲染器/1.md",":md"]],["v-77fee2e0","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/1.%E6%B8%B2%E6%9F%93%E5%99%A8/2.html",{d:1705824349e3,c:["使用指南"],e:`<h2> h 函数的作用</h2>
<p>h 函数用于创建虚拟 DOM 节点 (vnode)<br>
第一个参数既可以是一个字符串 (用于原生元素) 也可以是一个 Vue 组件定义；第二个参数是要传递的 prop；第三个参数是子节点。</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">h</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">type</span><span class="token operator">:</span> string <span class="token operator">|</span> Component<span class="token punctuation">,</span>
  props<span class="token operator">?</span><span class="token operator">:</span> object <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  children<span class="token operator">?</span><span class="token operator">:</span> Children <span class="token operator">|</span> Slot <span class="token operator">|</span> Slots</span>
<span class="token punctuation">)</span><span class="token operator">:</span> VNode
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.69,words:807},y:"a",t:"二、h函数的实现",i:"laptop-code",O:2},["/vue-learn/运行时/1.渲染器/2.html","/vue-learn/运行时/1.渲染器/2.md",":md"]],["v-749531a2","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/1.%E6%B8%B2%E6%9F%93%E5%99%A8/3.html",{d:1705824349e3,c:["使用指南"],r:{minutes:.07,words:20},y:"a",t:"三、渲染函数基本框架",i:"laptop-code",O:3},["/vue-learn/运行时/1.渲染器/3.html","/vue-learn/运行时/1.渲染器/3.md",":md"]],["v-f16353a6","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/2.diff%E7%AE%97%E6%B3%95/4.html",{d:1705824349e3,c:["使用指南"],e:`<h2> 减少 DOM 操作的方法</h2>
<p>当遇到新旧虚拟节点都存在一组子节点时，最简单的方式是先卸载旧节点，再卸载新节点，但这种方式存在大量的 DOM 操作，性能开销极大
因此可以采用下面的方法一定程度减少性能开销：</p>
<ol>
<li>比较新旧子节点长度，找到最短的长度</li>
<li>根据这个长度遍历新旧子节点，进行 patch</li>
<li>如果新子节点更长，则将剩余的挂载上去；如果旧节点更长，将剩余的卸载</li>
</ol>
<h2> DOM 复用-key 的使用</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// oldchildren</span>
<span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"p"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"div"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"span"</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// newchildren</span>
<span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"span"</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"p"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"div"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.71,words:1114},y:"a",t:"四、简单diff算法",i:"laptop-code",O:4},["/vue-learn/运行时/2.diff算法/4.html","/vue-learn/运行时/2.diff算法/4.md",":md"]],["v-edf9a268","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/2.diff%E7%AE%97%E6%B3%95/5.html",{d:1705824349e3,c:["使用指南"],e:`<h2> 简单 diff 算法的缺点</h2>
<p>假如现在的新旧节点如下所示，如果采用简单 diff 算法，会进行 2 次 DOM 操作，将 p1 和 p2 分别移动到 p3 的后面<br>
但如果将 p3 插入到最后，只需要 1 次 DOM 操作即可</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//old</span>
<span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">"3"</span><span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">//new</span>
<span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">"3"</span><span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">3</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">"1"</span><span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"p"</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">"2"</span><span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.42,words:1026},y:"a",t:"五、双端diff算法",i:"laptop-code",O:5},["/vue-learn/运行时/2.diff算法/5.html","/vue-learn/运行时/2.diff算法/5.md",":md"]],["v-ea8ff12a","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/2.diff%E7%AE%97%E6%B3%95/6.html",{d:1705824349e3,c:["使用指南"],e:`<h2> 相同的前置元素与后置元素</h2>
<p>纯文本的 diff 算法，会对文本进行预处理，首先找到两段文本中的公共前后缀并去除，只对发生变化的区进行 diff 操作,如下面的段文字，真正需要 diff 的是 vue 和 react</p>
<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>I use vue for app development
I use react for app development
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:4.95,words:1485},y:"a",t:"六、快速diff算法",i:"laptop-code",O:6},["/vue-learn/运行时/2.diff算法/6.html","/vue-learn/运行时/2.diff算法/6.md",":md"]],["v-5406f64e","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/%E6%89%8B%E5%86%99%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/1.%E6%89%8B%E5%86%99filter.html",{d:1712540487e3,c:["面试","数组方法"],e:`<h2> filter 的入参</h2>
<p>https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/filter
filter(callbackFn, thisArg)
callbackFn(element,index,array)
thisArg:调用了 执行 callbackFn 时用作 this 的值</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myFilter</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 保存结果</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// 如果传了第二个参数</span>
  <span class="token keyword">let</span> context <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> window<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> fn <span class="token operator">===</span> <span class="token string">"function"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// this指向调用filter函数的数组</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> condition <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"parameter1 is not a function"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.38,words:115},y:"a",t:"手写filter",O:1},["/前端笔记/js/手写数组方法/1.手写filter.html","/前端笔记/js/手写数组方法/1.手写filter.md",":md"]],["v-2ab43128","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/%E6%89%8B%E5%86%99%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/2.%E6%89%8B%E5%86%99redeuce.html",{d:1712540487e3,c:["面试"],e:`<h2> 入参</h2>
<p>reduce(callbackFn, initialValue)</p>
<p>callbackFn</p>
<ul>
<li>accumulator：上一次调用 callbackFn 的结果</li>
<li>currentValue:当前元素的值</li>
<li>currentIndex</li>
<li>array</li>
</ul>
<p>initialValue:第一次调用回调时初始化 accumulator 的值。如果指定了 initialValue，则 callbackFn 从数组中的第一个值作为 currentValue 开始执行，如果没有指定 initialValue，则 accumulator 初始化为数组中的第一个值，并且 callbackFn 从数组中的第二个值作为 currentValue 开始执行</p>`,r:{minutes:.71,words:213},y:"a",t:"手写reduce",O:2},["/前端笔记/js/手写数组方法/2.手写redeuce.html","/前端笔记/js/手写数组方法/2.手写redeuce.md",":md"]],["v-2ecfd7dd","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.html",{d:1712574674e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/lowest-common-ancestor-of-a-binary-search-tree/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>利用二叉搜索树的性质：</p>
<ul>
<li>如果 p 和 q 同时大于或者小于当前节点，说明在同一侧</li>
<li>如果不满足上面的条件，说明p和q分居两侧，或者说当前的节点就等于p或者q；对于这两种情况，都直接返回当前节点即可</li>
</ul>`,r:{minutes:.66,words:199},y:"a",t:"二叉搜索树的最近公共祖先",O:1},["/算法题/二叉树/二叉搜索树/二叉搜索树的最近公共祖先.html","/算法题/二叉树/二叉搜索树/二叉搜索树的最近公共祖先.md",":md"]],["v-73677efc","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/1.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86.html",{d:1712574674e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/binary-tree-level-order-traversal/" target="_blank" rel="noopener noreferrer">层序遍历</a></p>
<h2> 思路</h2>
<p>用一个队列，保存每一层的节点，然后再节点出队列时，检查其是否有左右节点，若有，则加入队列</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>root <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 只要队列中有元素就一直遍历下去</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 由于出队列时会加入新的元素，因此先记录下当前层共有多少节点</span>
  <span class="token keyword">let</span> length <span class="token operator">=</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">let</span> curlevel <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">//遍历当前层</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> cur <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    curlevel<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cur<span class="token punctuation">.</span>left <span class="token operator">&amp;&amp;</span> queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cur<span class="token punctuation">.</span>right <span class="token operator">&amp;&amp;</span> queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>curlevel<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">return</span> res<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.96,words:287},y:"a",t:"二叉树的层序遍历",O:1},["/算法题/二叉树/层序遍历/1.二叉树的层序遍历.html","/算法题/二叉树/层序遍历/1.二叉树的层序遍历.md",":md"]],["v-719f1a9a","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6/1.%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6.html",{d:1712390338e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E5%A4%A7%E6%B7%B1%E5%BA%A6">https://leetcode.cn/problems/maximum-depth-of-binary-tree/description/</a></p>
<h2> 思路</h2>
<ol>
<li>递归：对于当前节点，其最大深度 = 左右子树的最大深度+1</li>
<li>层序遍历：看结果的长度</li>
</ol>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 递归遍历</span>
<span class="token keyword">var</span> <span class="token function-variable function">maxDepth</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 从0开始</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">maxDepth</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">maxDepth</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.33,words:98},y:"a",t:"对称二叉树",O:1},["/算法题/二叉树/树的深度/1.二叉树的最大深度.html","/算法题/二叉树/树的深度/1.二叉树的最大深度.md",":md"]],["v-dfe87174","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6/2.%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91.html",{d:1712390338e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91">https://leetcode.cn/problems/balanced-binary-tree/</a></p>
<h2> 思路</h2>
<p>与上一数的最大深度类似，可以在每个子树的判断过程中，判断是否已经不平衡，如果是就传上去-1</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">isBalanced</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">getdepth</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token function">getdepth</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 如果左子树和右子树已经不平衡了 返回-1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token function">getdepth</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 如果右子树的高度比左子树高度大1 返回-1</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>right <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">getdepth</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.52,words:155},y:"a",t:"对称二叉树",O:1},["/算法题/二叉树/树的深度/2.平衡二叉树.html","/算法题/二叉树/树的深度/2.平衡二叉树.md",":md"]],["v-5f32be14","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/%E7%9B%B8%E5%90%8C%E6%A0%91/1_%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91.html",{d:1712390338e3,c:["算法题","二叉树"],e:`<h2> 题目</h2>
<p><a href="%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91">https://leetcode.cn/problems/same-tree/</a></p>
<h2> 思路</h2>
<p>中序遍历：先判断两棵树的当前节点是否相同，然后分别判断左子树和右子树</p>
<p>当两棵树的节点同时为空时，才是 true</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">isSameTree</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> q</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// p和q有一个为空,那么必须两个同时为空才为true</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>p <span class="token operator">||</span> <span class="token operator">!</span>q<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> p <span class="token operator">===</span> q<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// p和q都存在 比较当前节点值以及左右子树是否相同</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      p<span class="token punctuation">.</span>val <span class="token operator">==</span> q<span class="token punctuation">.</span>val <span class="token operator">&amp;&amp;</span>
      <span class="token function">isSameTree</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>left<span class="token punctuation">,</span> q<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      <span class="token function">isSameTree</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>right<span class="token punctuation">,</span> q<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.48,words:144},y:"a",t:"对称二叉树",O:1},["/算法题/二叉树/相同树/1_相同的树.html","/算法题/二叉树/相同树/1,相同的树.html","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/%E7%9B%B8%E5%90%8C%E6%A0%91/1,%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91.html","/算法题/二叉树/相同树/1,相同的树.md","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/%E7%9B%B8%E5%90%8C%E6%A0%91/1,%E7%9B%B8%E5%90%8C%E7%9A%84%E6%A0%91.md"]],["v-0379f704","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/%E7%9B%B8%E5%90%8C%E6%A0%91/2.%E5%AF%B9%E7%A7%B0%E4%BA%8C%E5%8F%89%E6%A0%91.html",{d:1712390338e3,c:["算法题","二叉树"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/symmetric-tree/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>分别比较两棵树的内侧和外侧是否相等，即 left.left 与 right.right(外侧) 和 left.right 和 right.left（内侧）</p>
<p>判断的方法可见 1.相同地树</p>
<h2> 实现</h2>
<ol>
<li>层序遍历</li>
</ol>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">isSymmetric</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
  queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> right <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> right <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">continue</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>left <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> right <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> left<span class="token punctuation">.</span>val <span class="token operator">!=</span> right<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 先存外侧的</span>
    queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
    queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>right<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 再存内侧的</span>
    queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>left<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>
    queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>right<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.64,words:193},y:"a",t:"对称二叉树",O:2},["/算法题/二叉树/相同树/2.对称二叉树.html","/算法题/二叉树/相同树/2.对称二叉树.md",":md"]],["v-80b1f816","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/1.%E7%BB%84%E5%90%88/1.html",{d:1705824349e3,c:["算法题","组合","回溯"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/combinations/" target="_blank" rel="noopener noreferrer">组合</a></p>
<h2> 思路</h2>
<p><a href="https://www.programmercarl.com/0077.%E7%BB%84%E5%90%88.html#%E6%80%9D%E8%B7%AF" target="_blank" rel="noopener noreferrer">思路</a>
剪枝思路：控制遍历的起点，如果从某个元素开始，剩余元素的数量小于要找的数量 k，就不再往后遍历
剩余数量：n-i+1
剩余目标数量：k-path.length
目标：n-i+1&gt;=k-path.length
最终：i &lt;= n-k+path.length-1</p>`,r:{minutes:.72,words:215},y:"a",t:"组合",O:1},["/算法题/回溯/1.组合/1.html","/算法题/回溯/1.组合/1.md",":md"]],["v-7d4846d8","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/1.%E7%BB%84%E5%90%88/2.html",{d:1705824349e3,c:["算法题","组合","回溯"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/combination-sum-iii/description/" target="_blank" rel="noopener noreferrer">组合 3</a></p>
<h2> 思路</h2>
<p>与上一题组合类似，多了总和的限制条件</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">combinationSum3</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">k<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// 因为会回溯，所以可使用函数作用域的变量</span>
  <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">backTrack</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> path</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 剪枝策略，大于目标就退出</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//找到k个就返回</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span>length <span class="token operator">==</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>sum <span class="token operator">==</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> index<span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span> <span class="token operator">-</span> k <span class="token operator">+</span> path<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      sum <span class="token operator">+=</span> i<span class="token punctuation">;</span>
      <span class="token function">backTrack</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 回溯</span>
      sum <span class="token operator">-=</span> i<span class="token punctuation">;</span>
      path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">backTrack</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.48,words:144},y:"a",t:"组合3",O:2},["/算法题/回溯/1.组合/2.html","/算法题/回溯/1.组合/2.md",":md"]],["v-79de959a","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/1.%E7%BB%84%E5%90%88/3.html",{d:1705824349e3,c:["算法题","组合","回溯"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/letter-combinations-of-a-phone-number/" target="_blank" rel="noopener noreferrer">电话号码组合</a></p>
<h2> 思路</h2>
<p>模拟多重 for 循环</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"abc"</span><span class="token punctuation">,</span> <span class="token string">"def"</span><span class="token punctuation">,</span> <span class="token string">"ghi"</span><span class="token punctuation">,</span> <span class="token string">"jkl"</span><span class="token punctuation">,</span> <span class="token string">"mno"</span><span class="token punctuation">,</span> <span class="token string">"pqrs"</span><span class="token punctuation">,</span> <span class="token string">"tuv"</span><span class="token punctuation">,</span> <span class="token string">"wxyz"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> <span class="token function-variable function">letterCombinations</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">digits</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> k <span class="token operator">=</span> digits<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> <span class="token function-variable function">BackTrack</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">path<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span>length <span class="token operator">===</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 注意这里循环的方式：通过i控制digtis的第几个元素</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> char <span class="token keyword">of</span> map<span class="token punctuation">[</span>digits<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">BackTrack</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> digits<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">BackTrack</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.41,words:122},y:"a",t:"电话号码组合",O:3},["/算法题/回溯/1.组合/3.html","/算法题/回溯/1.组合/3.md",":md"]],["v-7674e45c","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/1.%E7%BB%84%E5%90%88/4.html",{d:1705824349e3,c:["算法题","组合","回溯"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/combination-sum-ii/" target="_blank" rel="noopener noreferrer">组合总和 2</a></p>
<h2> 思路</h2>
<p>题目中要求：元素在同一个组合内是可以重复的，但不同的组合不能相同，因此需要去重；关键在于：去重要在同一层中进行，同一层中使用过的元素不能再使用<br>
同层判断的条件：<code>index &gt; startindex</code>这样才能保证比较的是同一层循环里的对象
注意点：</p>
<ul>
<li>要判断树层去重的话，需要对数组排序！然后就可以根据<code>candidates[i] == candidates[i - 1]</code>来判断是否重复了</li>
</ul>`,r:{minutes:1.08,words:323},y:"a",t:"组合总和2",O:4},["/算法题/回溯/1.组合/4.html","/算法题/回溯/1.组合/4.md",":md"]],["v-730b331e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/1.%E7%BB%84%E5%90%88/5.html",{d:1705824349e3,c:["算法题","组合","回溯"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/palindrome-partitioning/description/" target="_blank" rel="noopener noreferrer">分割回文串</a></p>
<h2> 思路</h2>
<p>通过 startIndex 索引判断是否切割完毕</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">isPalindrome</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">,</span> l<span class="token punctuation">,</span> r</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> l<span class="token punctuation">,</span> j <span class="token operator">=</span> r<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> j<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">,</span> j<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> <span class="token function-variable function">partition</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    len <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

  <span class="token keyword">function</span> <span class="token function">backtracking</span><span class="token punctuation">(</span><span class="token parameter">startIndex</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 已经对字符串切割完毕</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>startIndex <span class="token operator">&gt;=</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> startIndex<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//剪枝策略：如果当前的不是回文串，就跳过</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isPalindrome</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> startIndex<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
      path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>startIndex<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">backtracking</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">backtracking</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.48,words:144},y:"a",t:"分割回文串",O:5},["/算法题/回溯/1.组合/5.html","/算法题/回溯/1.组合/5.md",":md"]],["v-6fa181e0","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/1.%E7%BB%84%E5%90%88/6.html",{d:1705824349e3,c:["算法题","组合","回溯"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/restore-ip-addresses/" target="_blank" rel="noopener noreferrer">复原 ip 地址</a></p>
<h2> 思路</h2>
<p>与上一题类似,只是判断条件更多</p>
<p>小技巧:通过'+str'可以将 string 转化为 number</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">restoreIpAddresses</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> len <span class="token operator">=</span> s<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
    path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">backTrack</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">startindex</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>startindex <span class="token operator">&gt;=</span> len <span class="token operator">&amp;&amp;</span> path<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"."</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> startindex<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> str <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>startindex<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> str<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">"0"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">3</span> <span class="token operator">||</span> <span class="token operator">+</span>str <span class="token operator">&gt;</span> <span class="token number">255</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">backTrack</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">backTrack</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.41,words:123},y:"a",t:"复原IP地址",O:6},["/算法题/回溯/1.组合/6.html","/算法题/回溯/1.组合/6.md",":md"]],["v-6c37d0a2","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/1.%E7%BB%84%E5%90%88/7.html",{d:1705824349e3,c:["算法题","组合","回溯"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/non-decreasing-subsequences/" target="_blank" rel="noopener noreferrer">非递减子序列</a></p>
<h2> 思路</h2>
<p>注意:</p>
<ol>
<li>需要从原数组中找，不能对数组进行排序</li>
<li>仍需要对同层元素去重</li>
<li>需要增加非递减的判断<code>nums[i]&gt;=path[path.length-1]</code></li>
</ol>
<p>可以采用 set 方法直接对结果去重，也可以在回溯的过程中进行剪枝判断。</p>`,r:{minutes:1.25,words:375},y:"a",t:"非递减子序列",O:6},["/算法题/回溯/1.组合/7.html","/算法题/回溯/1.组合/7.md",":md"]],["v-52707f20","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/2.%E6%8E%92%E5%88%97/1.html",{d:1705824349e3,c:["算法题","排列","回溯"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/permutations/" target="_blank" rel="noopener noreferrer">全排列</a></p>
<h2> 思路</h2>
<p>思路：<br>
与组合不同，排列在横向遍历中递归时，每次索引都要从头开始（而不是组合的 startIndex），如下图中，取 2 后，剩余集合为｛1,3｝；但是这样会导致纵向递归中出现重复的情况（如取了 1 后，递归时从头开始，又会遇到 1），为了避免这种情况，可以用一个 set 或者 map 保存已经读取过的值</p>`,r:{minutes:.88,words:265},y:"a",t:"全排列1",O:1},["/算法题/回溯/2.排列/1.html","/算法题/回溯/2.排列/1.md",":md"]],["v-4f06cde2","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/2.%E6%8E%92%E5%88%97/2.html",{d:1705824349e3,c:["算法题","排列","回溯"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/permutations-ii/" target="_blank" rel="noopener noreferrer">全排列 2</a></p>
<h2> 思路</h2>
<p>这里题目给定的是一个可包含重复数字的序列，并且要求返回不重复的全排列，因此上一题的方式不再适用，此外还额外需要对同一层中的额外元素去重（先排列）</p>
<p>这里采用 used 方式记录某个元素是否使用过，used 是个与 nums 长度相同的数组，每个位置记录 true 与 false</p>
<h2> 实现</h2>`,r:{minutes:1.09,words:326},y:"a",t:"全排列2",O:2},["/算法题/回溯/2.排列/2.html","/算法题/回溯/2.排列/2.md",":md"]],["v-48336b66","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/2.%E6%8E%92%E5%88%97/4.html",{d:1705824349e3,c:["算法题","排列","回溯"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/reconstruct-itinerary/" target="_blank" rel="noopener noreferrer">重新安排行程</a></p>
<h2> 思路</h2>
<p>本题存在如下一些问题:</p>
<ol>
<li>如何搜索一个机场对应的所有机场</li>
<li>存在多种解法，需要根据字母排序</li>
<li>如何判断终止条件</li>
<li>如何避免一个机场被多次使用</li>
</ol>
<p>基于这些问题，为了查询的方便，将 tickets 数组首先整理成一个 map,它的 key 是出发机场，value 是到达机场的数组；然后对 value 根据字母顺序进行排序；同时本题的回溯并不是要找出所有的解法，而是根据排序的顺序遍历，找出第一个能够满足条件的解法，这样的解法一定是满足字母排序的。最后为了避免一个机场被多次作为到达机场，每次选中一个 city，就要到 map 中将其暂时删除，等回溯时在恢复</p>`,r:{minutes:1.38,words:414},y:"a",t:"重新安排行程",O:3},["/算法题/回溯/2.排列/4.html","/算法题/回溯/2.排列/4.md",":md"]],["v-e2d0832c","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/3.%E6%B7%B1%E5%BA%A6%E6%90%9C%E7%B4%A2/1.%E6%89%80%E6%9C%89%E5%8F%AF%E8%83%BD%E7%9A%84%E8%B7%AF%E5%BE%84.html",{d:1709804676e3,c:["算法题","回溯"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/all-paths-from-source-to-target/" target="_blank" rel="noopener noreferrer">所有可能的路径</a></p>
<h2> </h2>
<p>思路：通过回溯完成深度搜索</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">allPathsSourceTarget</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">graph</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> target <span class="token operator">=</span> graph<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// 当前的出发节点</span>
  <span class="token keyword">const</span> <span class="token function-variable function">dfs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">startIndex</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>startIndex <span class="token operator">===</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 遍历当前出发节点能到达的节点</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> graph<span class="token punctuation">[</span>startIndex<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>startIndex<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 将这个节点作为下一个出发节点</span>
      <span class="token function">dfs</span><span class="token punctuation">(</span>graph<span class="token punctuation">[</span>startIndex<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      path<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  path<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.44,words:131},y:"a",t:"所有可能的路径",O:1},["/算法题/回溯/3.深度搜索/1.所有可能的路径.html","/算法题/回溯/3.深度搜索/1.所有可能的路径.md",":md"]],["v-34e8f89f","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E4%B8%AD%E5%BF%83%E6%89%A9%E6%95%A3%E6%B3%95/1.%E6%9C%80%E5%A4%A7%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2.html",{d:1709804676e3,c:["算法题","字符串","中心扩散法"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/longest-palindromic-substring/solutions/63641/zhong-xin-kuo-san-fa-he-dong-tai-gui-hua-by-reedfa/" target="_blank" rel="noopener noreferrer">最大回文子串</a></p>
<h2> 思路</h2>
<p><a href="https://leetcode.cn/problems/longest-palindromic-substring/solutions/63641/zhong-xin-kuo-san-fa-he-dong-tai-gui-hua-by-reedfa/" target="_blank" rel="noopener noreferrer">题解</a></p>`,r:{minutes:.92,words:275},y:"a",t:"最大回文子串",O:1},["/算法题/字符串/中心扩散法/1.最大回文子串.html","/算法题/字符串/中心扩散法/1.最大回文子串.md",":md"]],["v-00160158","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%9B%9E%E6%96%87%E4%B8%B2/%E5%9B%9E%E6%96%87%E4%B8%B2.html",{d:1712574674e3,c:["算法题","字符串","中心扩散法"],e:`<h2> 题 1</h2>
<p><a href="https://leetcode.cn/problems/longest-palindrome/description/" target="_blank" rel="noopener noreferrer">最长回文串</a>
思路：通过 map 保存每个字符出现的次数，如果是偶数，直接加上，如果是奇数，就-1，再加上；此外可以选一个奇数的字符作为中心，因此额外+1</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">longestPalindrome</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    even <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    odd <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> c <span class="token keyword">of</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      map<span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      map<span class="token punctuation">[</span>c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      even <span class="token operator">+=</span> map<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      even <span class="token operator">+=</span> map<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
      odd <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> even <span class="token operator">+</span> odd<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.62,words:487},y:"a",t:"回文子串",O:1},["/算法题/字符串/回文串/回文串.html","/算法题/字符串/回文串/回文串.md",":md"]],["v-8397c7ba","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%95%B0%E7%BB%84%E7%9A%84%E8%BD%AC%E6%8D%A2/1.%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%88%86%E7%BB%84.html",{d:1709804676e3,c:["算法题","字符串"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/group-anagrams/" target="_blank" rel="noopener noreferrer">字母异位词分组</a></p>
<h2> 思路</h2>
<ol>
<li>对数组中的每个字符串按照字母顺序排序</li>
<li>使用 map 保存分组数组，key 为相同的字符，value 为分组数组</li>
</ol>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">groupAnagrams</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">strs</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> str <span class="token keyword">of</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 按字母顺序排序每个字符串，首选转换为数组</span>
    <span class="token keyword">const</span> arr <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 排序</span>
    arr<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 还原字符作为key</span>
    <span class="token keyword">let</span> key <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 构建map</span>
    <span class="token keyword">let</span> group <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">?</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 放入对应分组</span>
    group<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 保存分组数组</span>
    map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> group<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 将map还原成数组</span>
  <span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.57,words:172},y:"a",t:"字母异位词分组",O:1},["/算法题/字符串/字符串与数组的转换/1.字母异位词分组.html","/算法题/字符串/字符串与数组的转换/1.字母异位词分组.md",":md"]],["v-5b191d69","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%A0%88/1.%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%A7%A3%E7%A0%81.html",{d:1709804676e3,c:["算法题","字符串","栈"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/decode-string/" target="_blank" rel="noopener noreferrer">字符串解码</a></p>
<h2> 思路</h2>
<p><a href="https://leetcode.cn/problems/decode-string/solutions/264879/zhan-de-ji-yi-nei-ceng-de-jie-ma-liao-bie-wang-lia/" target="_blank" rel="noopener noreferrer">题解</a></p>`,r:{minutes:.91,words:273},y:"a",t:"字符串解码",O:1},["/算法题/字符串/栈/1.字符串解码.html","/算法题/字符串/栈/1.字符串解码.md",":md"]],["v-fff2f994","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/1.%E6%97%A0%E9%87%8D%E5%A4%8D%E6%9C%80%E9%95%BF%E5%AD%97%E4%B8%B2.html",{d:1709804676e3,c:["算法题","字符串","滑动窗口"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/longest-substring-without-repeating-characters/description/" target="_blank" rel="noopener noreferrer">无重复最长字串</a></p>
<h2> 思路</h2>
<p>子串是连续的字符串，对于字串问题，可以使用滑动窗口</p>
<p>当滑动窗口遇到重复元素时，就将左侧区间移动重复元素后面，比较区间的最大长度</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">lengthOfLongestSubstring</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    right <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
    len <span class="token operator">=</span> right <span class="token operator">-</span> left<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 在滑动区间内找是否存在重复元素</span>
    <span class="token keyword">let</span> findIndex <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span> right<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 存在</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>findIndex <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 将左侧区间移动到重复元素后</span>
      left <span class="token operator">=</span> left <span class="token operator">+</span> findIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    right<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> curLen <span class="token operator">=</span> right <span class="token operator">-</span> left<span class="token punctuation">;</span>
    len <span class="token operator">=</span> curLen <span class="token operator">&gt;</span> len <span class="token operator">?</span> curLen <span class="token operator">:</span> len<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> len<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.6,words:180},y:"a",t:"无重复最长字串",O:1},["/算法题/字符串/滑动窗口/1.无重复最长字串.html","/算法题/字符串/滑动窗口/1.无重复最长字串.md",":md"]],["v-03b4e419","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%80%92%E5%BD%92/1.%E6%8B%AC%E5%8F%B7%E7%94%9F%E6%88%90.html",{d:1709804676e3,c:["算法题","字符串","递归"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/generate-parentheses/" target="_blank" rel="noopener noreferrer">括号生成</a></p>
<h2> 思路</h2>
<p>对于括号匹配有两个约束：</p>
<ol>
<li>
<p>只要还有左括号剩余就可以使用</p>
</li>
<li>
<p>只有当剩余左括号数量小于右括号数量时才可以使用，否则匹配出错</p>
</li>
</ol>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">generateParenthesis</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">dfs</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// 回溯的出口，匹配完成</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">==</span> n <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 左括号还有剩余，回溯</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">dfs</span><span class="token punctuation">(</span>l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> str <span class="token operator">+</span> <span class="token string">"("</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 右括号剩余数量大于左括号，回溯</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">dfs</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> r <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> str <span class="token operator">+</span> <span class="token string">")"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">dfs</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> n<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.54,words:161},y:"a",t:"括号生成",O:1},["/算法题/字符串/递归/1.括号生成.html","/算法题/字符串/递归/1.括号生成.md",":md"]],["v-68dcdd74","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/1.%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%841.html",{d:1709804676e3,c:["算法题","数组"],e:`<h2> 题目</h2>
<p><a href="https://leetcode.cn/problems/find-minimum-in-rotated-sorted-array/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p><a href="https://juejin.cn/post/6844903824050618381" target="_blank" rel="noopener noreferrer">二分查找</a></p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">findMin</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
    mid<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    mid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 出口：找到两个递增序列的分界点，那么右侧区间的起点就是最小的元素</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> nums<span class="token punctuation">[</span>mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 经过旋转的规则，左侧的区间大于右侧的区间</span>
    <span class="token comment">// 如果mid&gt;第一个元素，说明最小值在右边的区间中，left向右移动</span>
    <span class="token comment">// 如果mid&lt;第一个元素，说明此时mid已经进入了右边的区间中，right向左移动，找右区间的起点</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.74,words:222},y:"a",t:"旋转数组1",O:1},["/算法题/数组/二分查找/1.旋转数组1.html","/算法题/数组/二分查找/1.旋转数组1.md",":md"]],["v-2d7e1f72","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/2.%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%842.html",{d:1709804676e3,c:["算法题","数组"],e:`<h2> 题目</h2>
<p><a href="https://leetcode.cn/problems/search-in-rotated-sorted-array/submissions/506688129/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>在上一题的基础上，增加对于 target 位置的判断</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">search</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>nums<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> mid
    <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&lt;=</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mid <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>right <span class="token operator">-</span> left<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">==</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> mid
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果target在左侧的区间且小于mid，那么即向左移动</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> target <span class="token operator">&gt;=</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                right <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1</span>
            <span class="token punctuation">}</span>
            <span class="token comment">// 否则无论在左区间还是右区间，都向右移动</span>
            <span class="token keyword">else</span> <span class="token punctuation">{</span>
                left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果target在右侧的区间且大于mid，那么即向右移动</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>mid<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> target <span class="token operator">&lt;=</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                left <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token comment">// 否则都向左移动</span>
                right <span class="token operator">=</span> mid <span class="token operator">-</span><span class="token number">1</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.61,words:184},y:"a",t:"旋转数组2",O:2},["/算法题/数组/二分查找/2.旋转数组2.html","/算法题/数组/二分查找/2.旋转数组2.md",":md"]],["v-584dbbd6","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/3.%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%92%8C%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%85%83%E7%B4%A0.html",{d:1709804676e3,c:["算法题","数组","二分"],e:`<h2> 题目</h2>
<p><a href="https://leetcode.cn/problems/find-first-and-last-position-of-element-in-sorted-array/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>该题需要找第一个位置和最后一个位置
而最后一个位置可以转化为找比 target 大的元素的第一个位置，然后再减 1 得到</p>
<p>而第一个元素可以有右侧进行判断实现（nums[mid] &gt;= target）</p>
<h2> 实现</h2>`,r:{minutes:.7,words:209},y:"a",t:"排序数组中第一个和最后一个元素",O:3},["/算法题/数组/二分查找/3.排序数组中第一个和最后一个元素.html","/算法题/数组/二分查找/3.排序数组中第一个和最后一个元素.md",":md"]],["v-2cc8ee1c","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/4.%E5%AF%BB%E6%89%BE%E9%87%8D%E5%A4%8D%E6%95%B0(%E5%80%BC%E5%9F%9F%E4%BA%8C%E5%88%86).html",{d:1710222705e3,c:["算法题","数组","二分"],e:`<h2> 题目</h2>
<p><a href="https://leetcode.cn/problems/find-the-duplicate-number/" target="_blank" rel="noopener noreferrer">寻找重复数</a></p>
<h2> 思路</h2>
<p><a href="https://leetcode.cn/problems/find-the-duplicate-number/solutions/262703/zhe-ge-shu-zu-you-dian-te-shu-suo-yi-ke-yi-yong-ku/" target="_blank" rel="noopener noreferrer">题解</a>
二分查找有两种：</p>`,r:{minutes:.65,words:196},y:"a",t:"寻找重复数",O:4},["/算法题/数组/二分查找/4.寻找重复数(值域二分).html","/算法题/数组/二分查找/4.寻找重复数(值域二分).md",":md"]],["v-7ed1c45a","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/5.%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0.html",{d:1712390338e3,c:["算法题","二分查找"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/median-of-two-sorted-arrays/description/" target="_blank" rel="noopener noreferrer">寻找两个正序数组的中位数</a></p>
<h2> 思路</h2>
<ol>
<li>
<p>暴力法：将两个数组合并，时间复杂度为 O(m+n)</p>
</li>
<li>
<p>二分查找：通过二分查找，直接找出中位数</p>
</li>
</ol>
<p>思路：将按顺序合并后的顺序分为左右两部分，左侧为&lt;=中位数的数组，右侧为&gt;中位数的数组
那么左侧数组的大小为(len1+len2+1) &gt;&gt; 1
假设左边部分来源于 nums1 左分段的长度为 partLen1，剩下的就是来源于 nums2 的左分段，长度是 ((len + 1) &gt;&gt; 1) - partLen1</p>`,r:{minutes:1.67,words:500},y:"a",t:"寻找两个正序数组的中位数",O:5},["/算法题/数组/二分查找/5.寻找两个正序数组的中位数.html","/算法题/数组/二分查找/5.寻找两个正序数组的中位数.md",":md"]],["v-69864716","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E4%B8%89%E9%A2%98.html",{d:1712540487e3,c:["算法题","滑动窗口"],e:`<h2> 滑动窗口思路</h2>
<p>常见题型：最短/最长/方案数</p>
<p>本质上也是一个双指针，右指针作为索引去遍历数组，然后判断一下当前滑动窗口中的元素是否满足题目条件，如果满足，就移动左指针，缩小范围</p>
<h2> 题 1</h2>
<p><a href="https://leetcode.cn/problems/minimum-size-subarray-sum/" target="_blank" rel="noopener noreferrer">长度最小的子数组</a></p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">minSubArrayLen</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> nums</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token comment">// ans设置为len+1 用于判断是否有满足条件的ans</span>
    ans <span class="token operator">=</span> nums<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>
    sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> right <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> right <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> right<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 每次将right放入滑动窗口</span>
    sum <span class="token operator">+=</span> nums<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// 判断条件</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>sum <span class="token operator">&gt;=</span> target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 满足就记录一下ans</span>
      ans <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span> right <span class="token operator">-</span> left <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// 减去left，缩小范围再判断</span>
      sum <span class="token operator">=</span> sum <span class="token operator">-</span> nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span><span class="token punctuation">;</span>
      left<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> ans <span class="token operator">&lt;=</span> nums<span class="token punctuation">.</span>length <span class="token operator">?</span> ans <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:2.76,words:829},y:"a",t:"滑动窗口三题",O:1},["/算法题/数组/滑动窗口/滑动窗口三题.html","/算法题/数组/滑动窗口/滑动窗口三题.md",":md"]],["v-96a60dc4","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%88%9B%E5%BB%BA%E6%96%B0%E9%93%BE%E8%A1%A8%E8%BE%85%E5%8A%A9/1.%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0.html",{d:1709804676e3,c:["算法题","链表"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/add-two-numbers/submissions/505856736/" target="_blank" rel="noopener noreferrer">两数相加</a></p>
<h2> 思路</h2>
<p>创建一个新的列表来存储相加结果</p>
<p>只要 l1 或 l2 存在或是存在进位的情况就相加</p>
<p>这里创建了一个虚拟节点，为的是防止最后剩余一个空节点</p>
<p>如下写法的话，最后会多出个空节点，因此在做当前位的加法时，节点还在之前一位</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>cur<span class="token punctuation">.</span>val <span class="token operator">=</span> carry <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">;</span>
cur<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cur <span class="token operator">=</span> cur<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.85,words:256},y:"a",t:"两数相加",O:1},["/算法题/链表/创建新链表辅助/1.两数相加.html","/算法题/链表/创建新链表辅助/1.两数相加.md",":md"]],["v-6e12230b","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/1.%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0.html",{d:1712574674e3,c:["算法题","链表"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/remove-linked-list-elements/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 虚拟头结点法</h2>
<p>如果直接在原来的链表中进行删除，则需要考虑当前的元素是否为头结点</p>
<ul>
<li>如果是头结点，只需将头结点向后移一位</li>
<li>如果不是头结点，将该结点的前一个结点的 next 设为该结点下一个结点（即跳过该结点）</li>
</ul>
<p>虚拟头结点法是将一个虚拟头结点加入圆脸表作为头结点，这样就无需分情况进行讨论</p>`,r:{minutes:1.12,words:336},y:"a",t:"移除链表元素",O:1},["/算法题/链表/删除链表元素/1.移除链表元素.html","/算法题/链表/删除链表元素/1.移除链表元素.md",":md"]],["v-cf2c548a","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/2.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9.html",{d:1712574674e3,c:["算法题","链表"],e:`<h2> 题目连接</h2>
<p><a href="https://leetcode.cn/problems/delete-node-in-a-linked-list/description/" target="_blank" rel="noopener noreferrer">题目链接</a></p>
<h2> 思路</h2>
<p>这题没法获取 head 节点，因此上一题的删除思路行不通，可以将一个节点的值赋给前 node，然后将下一个节点删除，可以实现相同的效果</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">deleteNode</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  node<span class="token punctuation">.</span>val <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
  node<span class="token punctuation">.</span>next <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.32,words:97},y:"a",t:"移除链表元素",O:2},["/算法题/链表/删除链表元素/2.删除链表中的节点.html","/算法题/链表/删除链表元素/2.删除链表中的节点.md",":md"]],["v-8ca3767e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/3.%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E5%80%92%E6%95%B0%E7%AC%ACn%E4%B8%AA%E8%8A%82%E7%82%B9.html",{d:1712574674e3,c:["算法题","链表"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/SLwz0R/description/" target="_blank" rel="noopener noreferrer">移除链表倒数第 n 个元素</a></p>
<h2> 思路</h2>
<p>快慢指针来解决，先让快指针自己走 n 步，然后让快慢指针同时走，这样快慢指针的间隔就保持为 n，当快指针走到终点，慢指针指向的就是待删除元素的前一个</p>
<h2> 实现</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">removeNthFromEnd</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">head<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> dummy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> head<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> dummy<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    right <span class="token operator">=</span> right<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> dummy<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>right<span class="token punctuation">.</span>next<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    right <span class="token operator">=</span> right<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    left <span class="token operator">=</span> left<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  left<span class="token punctuation">.</span>next <span class="token operator">=</span> left<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
  <span class="token keyword">return</span> dummy<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.49,words:147},y:"a",t:"移除链表倒数第n个元素",O:3},["/算法题/链表/删除链表元素/3.删除链表倒数第n个节点.html","/算法题/链表/删除链表元素/3.删除链表倒数第n个节点.md",":md"]],["v-403116f1","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/4.html",{d:1712574674e3,c:["算法题","链表"],e:`<h2> 题目 1-反转链表</h2>
<p><a href="https://leetcode.cn/problems/reverse-linked-list/" target="_blank" rel="noopener noreferrer">反转链表</a></p>
<p><a href="https://leetcode.cn/problems/reverse-linked-list/solutions/2361282/206-fan-zhuan-lian-biao-shuang-zhi-zhen-r1jel/" target="_blank" rel="noopener noreferrer">图解</a></p>`,r:{minutes:1.33,words:399},y:"a",t:"反转链表问题",O:1},["/算法题/链表/反转链表/4.html","/算法题/链表/反转链表/4.md",":md"]],["v-16501f32","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%BD%92%E5%B9%B6%E6%B3%95/1.%E9%93%BE%E8%A1%A8%E6%8E%92%E5%BA%8F%20.html",{d:1710073278e3,c:["算法题","链表","归并"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/sort-list/description/" target="_blank" rel="noopener noreferrer">链表排序</a></p>
<h2> 思路</h2>
<p>首先将链表不断二分，直到只剩一个二分，然后在递归出栈时合并。二分可以通过快慢指针实现，快指针一次走 2 步，慢指针一次走 1 步，当快指针达到终点或越界时，慢指针真好走到中间</p>
<p>在合并时，由于有 l 和 r 两个链表，可以通过一个虚拟链表，将 l 和 r 串联起来</p>
<p><a href="https://leetcode.cn/problems/sort-list/solutions/493183/shou-hua-tu-jie-gui-bing-pai-xu-148-lian-biao-pai-/" target="_blank" rel="noopener noreferrer">图解</a></p>`,r:{minutes:1.15,words:345},y:"a",t:"链表排序",O:1},["/算法题/链表/归并法/1.链表排序 .html","/算法题/链表/归并法/1.链表排序 .md",":md"]],["v-5045411e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%BF%AB%E6%85%A2%E6%8C%87%E9%92%88/1.%E9%93%BE%E8%A1%A8%E7%9A%84%E4%B8%AD%E9%97%B4%E8%8A%82%E7%82%B9.html",{d:1712574674e3,c:["算法题","链表"],e:`<h2> 题目连接</h2>
<p><a href="https://leetcode.cn/problems/middle-of-the-linked-list/description/" target="_blank" rel="noopener noreferrer">链表的中间节点</a></p>
<h2> 思路</h2>
<p>快慢指针：快指针走两步，慢指针走一步</p>
<p>对于奇数长度的链表，快指针可以走到最后一个节点，此时 slow 指针指向的就是中间节点</p>
<p>对于偶数长度的链表，快指针只能走到最后一个节点的前一个或后一个的位置，当快指针指向最后一个节点的后一个位置（空），此时 slow 指向的就是中间节点</p>`,r:{minutes:.66,words:197},y:"a",t:"链表的中间节点",O:1},["/算法题/链表/快慢指针/1.链表的中间节点.html","/算法题/链表/快慢指针/1.链表的中间节点.md",":md"]],["v-aa06dbaa","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%BF%AB%E6%85%A2%E6%8C%87%E9%92%88/2.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8.html",{d:1712574674e3,c:["算法题","链表"],e:`<h2> 题目连接</h2>
<p><a href="https://leetcode.cn/problems/linked-list-cycle/" target="_blank" rel="noopener noreferrer">环形链表</a></p>
<h2> 题解</h2>
<p>快慢指针：</p>
<ul>
<li>有环：快慢指针总能相遇，当 fast==slow，return true</li>
<li>无环: 快指针最后会遍历完链表，此时还没相遇，return false</li>
</ul>
<h2> 思路</h2>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">reverseList</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">head</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> pre <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    temp <span class="token operator">=</span> head<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>head<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>temp<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> next <span class="token operator">=</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    temp<span class="token punctuation">.</span>next <span class="token operator">=</span> pre<span class="token punctuation">;</span>
    pre <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    temp <span class="token operator">=</span> next<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> pre<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:.32,words:96},y:"a",t:"环形链表",O:2},["/算法题/链表/快慢指针/2.环形链表.html","/算法题/链表/快慢指针/2.环形链表.md",":md"]],["v-7b1ed234","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%BF%AB%E6%85%A2%E6%8C%87%E9%92%88/3.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A82.html",{d:1712574674e3,c:["算法题","链表"],e:`<h2> 题目链接</h2>
<p><a href="https://leetcode.cn/problems/linked-list-cycle-ii/solutions/12616/linked-list-cycle-ii-kuai-man-zhi-zhen-shuang-zhi-/" target="_blank" rel="noopener noreferrer">环形链表 II</a></p>
<h2> 题解</h2>
<p><a href="https://leetcode.cn/problems/linked-list-cycle-ii/solutions/12616/linked-list-cycle-ii-kuai-man-zhi-zhen-shuang-zhi-/" target="_blank" rel="noopener noreferrer">题解</a></p>`,r:{minutes:.92,words:275},y:"a",t:"环形链表II",O:3},["/算法题/链表/快慢指针/3.环形链表2.html","/算法题/链表/快慢指针/3.环形链表2.md",":md"]],["v-574a5511","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/3.%E7%BB%84%E4%BB%B6/1.%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/10.html",{d:1705824349e3,c:["vue","组件"],e:`<h2> 插槽的原理</h2>
<blockquote>
<p>子组件模版</p>
</blockquote>
<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 插槽 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 插槽 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>body<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 插槽 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.11,words:333},y:"a",t:"插槽的工作原理与实现",i:"laptop-code",O:4},["/vue-learn/运行时/3.组件/1.组件实现基本原理/10.html","/vue-learn/运行时/3.组件/1.组件实现基本原理/10.md",":md"]],["v-58ff2db0","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/3.%E7%BB%84%E4%BB%B6/1.%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/11.html",{d:1705824349e3,c:["vue","组件"],e:`<h2> 注册生命周期</h2>
<p>A 组件的 setup 函数中调用 onMounted 函数会将该钩子函数注册到 A 组件上；而在 B 组件的 setup 函数中调用 onMounted 函数会将钩子函数注册到 B 组件上；要想实现这一点，则需要维护一个变量 <code>currentInstance</code>，用它来存储当前组件实例:</p>
<ol>
<li>每当初始化组件并执行组件的 setup 函数之前，先将 currentInstance 设置为当前组件实例</li>
<li>然后执行组件的 setup 函数，这样就可以通过 currentInstance 来获取当前正在被初始化的组件实例，从而将那些通过 onMounted 函数注册的钩子函数与组件实例进行关联</li>
</ol>`,r:{minutes:1.54,words:462},y:"a",t:"注册生命周期",i:"laptop-code",O:5},["/vue-learn/运行时/3.组件/1.组件实现基本原理/11.html","/vue-learn/运行时/3.组件/1.组件实现基本原理/11.md",":md"]],["v-bc9d1daa","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/3.%E7%BB%84%E4%BB%B6/1.%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/7.html",{d:1705824349e3,c:["vue","组件"],e:`<h2> 渲染组件</h2>
<p>从用户的角度看，一个有状态组件就是一个选项(data、props、生命周期函数等)对象</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> myComponent <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"myComponent"</span><span class="token punctuation">,</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:7.12,words:2137},y:"a",t:"组件的实现原理",i:"laptop-code",O:1},["/vue-learn/运行时/3.组件/1.组件实现基本原理/7.html","/vue-learn/运行时/3.组件/1.组件实现基本原理/7.md",":md"]],["v-b9336c6c","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/3.%E7%BB%84%E4%BB%B6/1.%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/8.html",{d:1705824349e3,c:["vue","组件"],e:`<h2> setup 函数的作用</h2>
<p>setup 函数是 Vue.js 3 新增的组件选项，用于配合组合式 API，为用户提供一个地方，用于建立组合逻辑、创建响应式数据、创建通用函数、注册生命周期钩子等能力，setup 函数只会在被挂载时执行一次，</p>
<p>setup 接受两个函数，一个是 props 对象：传递给组件的属性；另一个是 setupContext 对象：保存与组件接口相关的数据与方法，如 slots、emits、attrs、expose</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> comp <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">foo</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> setupContext</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 访问传入props的数据</span>
    props<span class="token punctuation">.</span>foo<span class="token punctuation">;</span>
    <span class="token comment">// 取出setupContext 中包含与组件接口相关的重要数据</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> slots<span class="token punctuation">,</span> emit<span class="token punctuation">,</span> attrs<span class="token punctuation">,</span> expose <span class="token punctuation">}</span> <span class="token operator">=</span> setupContext<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.82,words:545},y:"a",t:"setup函数的作用与实现",i:"laptop-code",O:2},["/vue-learn/运行时/3.组件/1.组件实现基本原理/8.html","/vue-learn/运行时/3.组件/1.组件实现基本原理/8.md",":md"]],["v-b5c9bb2e","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/3.%E7%BB%84%E4%BB%B6/1.%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/9.html",{d:1705824349e3,c:["vue","组件"],e:`<h2> emit 的用法</h2>
<p>emit 用于发射组件的自定义事件</p>
<blockquote>
<p>子组件</p>
</blockquote>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> myComp <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"myComponent"</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> <span class="token punctuation">{</span> emit <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 发射 change 事件，并传递给事件处理函数两个参数</span>
    <span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">"change"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 省略</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:3.68,words:1103},y:"a",t:"组件事件与 emit 的实现",i:"laptop-code",O:3},["/vue-learn/运行时/3.组件/1.组件实现基本原理/9.html","/vue-learn/运行时/3.组件/1.组件实现基本原理/9.md",":md"]],["v-106a3a50","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/3.%E7%BB%84%E4%BB%B6/2.%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6%E4%B8%8E%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BB%84%E4%BB%B6/12.html",{d:1705824349e3,c:["vue","组件"],e:`<h2> 1 异步组件要解决的问题</h2>
<p>在页面性能、拆包以及服务端下发组件等场景中，以异步的方式加载并渲染组件是十分重要的<br>
要实现异步组件的实现不需要任何框架层面的支持，只需通过动态导入语句<code>import()</code>来加载组件</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">loader</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">"App.vue"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 动态导入import()返回一个Promise对象</span>
<span class="token function">loader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">App</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">"#app"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.75,words:524},y:"a",t:"异步组件",i:"laptop-code",O:1},["/vue-learn/运行时/3.组件/2.异步组件与函数式组件/12.html","/vue-learn/运行时/3.组件/2.异步组件与函数式组件/12.md",":md"]],["v-0d008912","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/3.%E7%BB%84%E4%BB%B6/2.%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6%E4%B8%8E%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BB%84%E4%BB%B6/13.html",{d:1705824349e3,c:["vue","组件"],e:`<p>一个函数式组件就是一个返回虚拟 DOM 的函数,函数式组件没有自身状态，但它仍然可以接收由外部传入的 props,需要在组件函数上添加静态 props 属性</p>
<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">MyFuncComp</span><span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"h1"</span><span class="token punctuation">,</span> <span class="token literal-property property">children</span><span class="token operator">:</span> props<span class="token punctuation">.</span>title <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 定义 props</span>
MyFuncComp<span class="token punctuation">.</span>props <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">title</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,r:{minutes:1.21,words:364},y:"a",t:"函数式组件",i:"laptop-code",O:2},["/vue-learn/运行时/3.组件/2.异步组件与函数式组件/13.html","/vue-learn/运行时/3.组件/2.异步组件与函数式组件/13.md",":md"]],["v-3706649a","/404.html",{y:"p",t:""},[]],["v-1557149e","/tips/",{y:"p",t:"Tips"},[]],["v-6a7967d2","/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/",{y:"p",t:"前端工程化"},["/前端工程化/"]],["v-692c291e","/javascript/apple/",{y:"p",t:"Apple"},[]],["v-08f42f4a","/posts/apple/",{y:"p",t:"Apple"},[]],["v-30be3cd5","/posts/banana/",{y:"p",t:"Banana"},[]],["v-6368f7de","/posts/vue/",{y:"p",t:"Vue"},[]],["v-27e029a2","/vue-learn/%E5%93%8D%E5%BA%94%E5%BC%8F/",{y:"p",t:"响应式"},["/vue-learn/响应式/"]],["v-338ec84b","/vue-learn/",{y:"p",t:"Vue Learn"},[]],["v-3f5a4526","/vue-learn/%E7%BC%96%E8%AF%91%E5%99%A8/",{y:"p",t:"编译器"},["/vue-learn/编译器/"]],["v-3a1acc86","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/",{y:"p",t:"Js"},["/前端笔记/js/"]],["v-d67894ae","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/",{y:"p",t:"前端笔记"},["/前端笔记/"]],["v-7b662092","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/vue/",{y:"p",t:"Vue"},["/前端笔记/vue/"]],["v-28f9bf55","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/%E5%9C%BA%E6%99%AF/",{y:"p",t:"场景"},["/前端笔记/场景/"]],["v-6f309449","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/",{y:"p",t:"二叉树"},["/算法题/二叉树/"]],["v-28317131","/%E7%AE%97%E6%B3%95%E9%A2%98/",{y:"p",t:"算法题"},["/算法题/"]],["v-42b12288","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BD%8D%E8%BF%90%E7%AE%97/",{y:"p",t:"位运算"},["/算法题/位运算/"]],["v-083450f2","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%89%8D%E7%BC%80%E5%92%8C/",{y:"p",t:"前缀和"},["/算法题/前缀和/"]],["v-604c82fa","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",{y:"p",t:"动态规划"},["/算法题/动态规划/"]],["v-67729439","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8D%95%E8%B0%83%E6%A0%88/",{y:"p",t:"单调栈"},["/算法题/单调栈/"]],["v-5b81f570","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%93%88%E5%B8%8C%E8%A1%A8/",{y:"p",t:"哈希表"},["/算法题/哈希表/"]],["v-62053dac","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/",{y:"p",t:"字符串"},["/算法题/字符串/"]],["v-b973c2d6","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/",{y:"p",t:"拓扑排序"},["/算法题/拓扑排序/"]],["v-b46461c8","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%8E%92%E5%BA%8F/",{y:"p",t:"排序"},["/算法题/排序/"]],["v-65db0d5a","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/",{y:"p",t:"数组"},["/算法题/数组/"]],["v-44759d6e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/",{y:"p",t:"栈与队列"},["/算法题/栈与队列/"]],["v-53a1e0b6","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%B7%B1%E6%90%9C/",{y:"p",t:"深搜"},["/算法题/深搜/"]],["v-56df12a8","/%E7%AE%97%E6%B3%95%E9%A2%98/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/",{y:"p",t:"贪心算法"},["/算法题/贪心算法/"]],["v-10c426ec","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%80%92%E5%BD%92/",{y:"p",t:"递归"},["/算法题/递归/"]],["v-d157de3e","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/",{y:"p",t:"链表"},["/算法题/链表/"]],["v-7e435b34","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/0.%E6%A6%82%E8%BF%B0/",{y:"p",t:"0.概述"},["/vue-learn/运行时/0.概述/"]],["v-02f3c156","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/",{y:"p",t:"运行时"},["/vue-learn/运行时/"]],["v-4c9f7169","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/1.%E6%B8%B2%E6%9F%93%E5%99%A8/",{y:"p",t:"1.渲染器"},["/vue-learn/运行时/1.渲染器/"]],["v-152109f0","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/2.diff%E7%AE%97%E6%B3%95/",{y:"p",t:"2.diff算法"},["/vue-learn/运行时/2.diff算法/"]],["v-ef4ca084","/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/%E6%89%8B%E5%86%99%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/",{y:"p",t:"手写数组方法"},["/前端笔记/js/手写数组方法/"]],["v-43d7ffa4","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/",{y:"p",t:"二叉搜索树"},["/算法题/二叉树/二叉搜索树/"]],["v-be4ea730","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/",{y:"p",t:"层序遍历"},["/算法题/二叉树/层序遍历/"]],["v-383f1282","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6/",{y:"p",t:"树的深度"},["/算法题/二叉树/树的深度/"]],["v-464ab984","/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/%E7%9B%B8%E5%90%8C%E6%A0%91/",{y:"p",t:"相同树"},["/算法题/二叉树/相同树/"]],["v-0bfe926d","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/1.%E7%BB%84%E5%90%88/",{y:"p",t:"1.组合"},["/算法题/回溯/1.组合/"]],["v-7e40917a","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/",{y:"p",t:"回溯"},["/算法题/回溯/"]],["v-70cdf1b0","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/2.%E6%8E%92%E5%88%97/",{y:"p",t:"2.排列"},["/算法题/回溯/2.排列/"]],["v-0fc73c12","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/3.%E6%B7%B1%E5%BA%A6%E6%90%9C%E7%B4%A2/",{y:"p",t:"3.深度搜索"},["/算法题/回溯/3.深度搜索/"]],["v-7a209ea4","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E4%B8%AD%E5%BF%83%E6%89%A9%E6%95%A3%E6%B3%95/",{y:"p",t:"中心扩散法"},["/算法题/字符串/中心扩散法/"]],["v-39cd4ea6","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%9B%9E%E6%96%87%E4%B8%B2/",{y:"p",t:"回文串"},["/算法题/字符串/回文串/"]],["v-54c2deef","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%95%B0%E7%BB%84%E7%9A%84%E8%BD%AC%E6%8D%A2/",{y:"p",t:"字符串与数组的转换"},["/算法题/字符串/字符串与数组的转换/"]],["v-2d7b7654","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%A0%88/",{y:"p",t:"栈"},["/算法题/字符串/栈/"]],["v-241fb1ea","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/",{y:"p",t:"滑动窗口"},["/算法题/字符串/滑动窗口/"]],["v-29a6da91","/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/%E9%80%92%E5%BD%92/",{y:"p",t:"递归"},["/算法题/字符串/递归/"]],["v-e4cc0424","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/",{y:"p",t:"二分查找"},["/算法题/数组/二分查找/"]],["v-142f82a3","/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/",{y:"p",t:"滑动窗口"},["/算法题/数组/滑动窗口/"]],["v-3c1069b0","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%88%9B%E5%BB%BA%E6%96%B0%E9%93%BE%E8%A1%A8%E8%BE%85%E5%8A%A9/",{y:"p",t:"创建新链表辅助"},["/算法题/链表/创建新链表辅助/"]],["v-49746908","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/",{y:"p",t:"删除链表元素"},["/算法题/链表/删除链表元素/"]],["v-86d9c268","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/",{y:"p",t:"反转链表"},["/算法题/链表/反转链表/"]],["v-3a37ead6","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%BD%92%E5%B9%B6%E6%B3%95/",{y:"p",t:"归并法"},["/算法题/链表/归并法/"]],["v-7ee2fb60","/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%BF%AB%E6%85%A2%E6%8C%87%E9%92%88/",{y:"p",t:"快慢指针"},["/算法题/链表/快慢指针/"]],["v-8d888e2e","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/3.%E7%BB%84%E4%BB%B6/1.%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/",{y:"p",t:"1.组件实现基本原理"},["/vue-learn/运行时/3.组件/1.组件实现基本原理/"]],["v-6f054c29","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/3.%E7%BB%84%E4%BB%B6/",{y:"p",t:"3.组件"},["/vue-learn/运行时/3.组件/"]],["v-770df480","/vue-learn/%E8%BF%90%E8%A1%8C%E6%97%B6/3.%E7%BB%84%E4%BB%B6/2.%E5%BC%82%E6%AD%A5%E7%BB%84%E4%BB%B6%E4%B8%8E%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BB%84%E4%BB%B6/",{y:"p",t:"2.异步组件与函数式组件"},["/vue-learn/运行时/3.组件/2.异步组件与函数式组件/"]],["v-5bc93818","/category/",{y:"p",t:"分类",I:0},[]],["v-744d024e","/tag/",{y:"p",t:"标签",I:0},[]],["v-e52c881c","/article/",{y:"p",t:"文章",I:0},[]],["v-154dc4c4","/star/",{y:"p",t:"收藏",I:0},[]],["v-01560935","/timeline/",{y:"p",t:"时间轴",I:0},[]],["v-0c75a0f8","/category/%E6%A8%B1%E6%A1%83/",{y:"p",t:"樱桃 分类",I:0},["/category/樱桃/"]],["v-0f1d0e94","/tag/%E7%BA%A2/",{y:"p",t:"标签: 红",I:0},["/tag/红/"]],["v-226a68ec","/category/%E7%81%AB%E9%BE%99%E6%9E%9C/",{y:"p",t:"火龙果 分类",I:0},["/category/火龙果/"]],["v-3e6b05e8","/tag/%E5%B0%8F/",{y:"p",t:"标签: 小",I:0},["/tag/小/"]],["v-12590846","/category/%E6%B0%B4%E6%9E%9C/",{y:"p",t:"水果 分类",I:0},["/category/水果/"]],["v-301b24f4","/tag/%E5%9C%86/",{y:"p",t:"标签: 圆",I:0},["/tag/圆/"]],["v-03d57386","/category/%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/",{y:"p",t:"使用指南 分类",I:0},["/category/使用指南/"]],["v-3ceeab45","/tag/%E5%A4%A7/",{y:"p",t:"标签: 大",I:0},["/tag/大/"]],["v-247d58ff","/category/%E8%8D%89%E8%8E%93/",{y:"p",t:"草莓 分类",I:0},["/category/草莓/"]],["v-42254370","/tag/%E9%BB%84/",{y:"p",t:"标签: 黄",I:0},["/tag/黄/"]],["v-76b80ea2","/category/%E8%94%AC%E8%8F%9C/",{y:"p",t:"蔬菜 分类",I:0},["/category/蔬菜/"]],["v-3aafda76","/tag/%E5%BC%AF%E6%9B%B2%E7%9A%84/",{y:"p",t:"标签: 弯曲的",I:0},["/tag/弯曲的/"]],["v-20dfa189","/category/knowledge/",{y:"p",t:"knowledge 分类",I:0},[]],["v-624a9248","/tag/%E9%95%BF/",{y:"p",t:"标签: 长",I:0},["/tag/长/"]],["v-4eb18eb1","/category/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/",{y:"p",t:"前端工程化 分类",I:0},["/category/前端工程化/"]],["v-40b68770","/category/%E8%8B%B9%E6%9E%9C/",{y:"p",t:"苹果 分类",I:0},["/category/苹果/"]],["v-4c41ef7e","/category/%E9%A6%99%E8%95%89/",{y:"p",t:"香蕉 分类",I:0},["/category/香蕉/"]],["v-65f6d381","/category/vue/",{y:"p",t:"vue 分类",I:0},[]],["v-116a43a7","/category/%E9%9D%A2%E8%AF%95/",{y:"p",t:"面试 分类",I:0},["/category/面试/"]],["v-3d184cee","/category/js/",{y:"p",t:"JS 分类",I:0},[]],["v-65ef0bff","/category/es6/",{y:"p",t:"ES6 分类",I:0},[]],["v-5b12e1d0","/category/%E7%AE%97%E6%B3%95%E9%A2%98/",{y:"p",t:"算法题 分类",I:0},["/category/算法题/"]],["v-07caeaa0","/category/%E4%BA%8C%E5%8F%89%E6%A0%91/",{y:"p",t:"二叉树 分类",I:0},["/category/二叉树/"]],["v-44cc51bd","/category/%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91/",{y:"p",t:"二叉搜索树 分类",I:0},["/category/二叉搜索树/"]],["v-6b916523","/category/%E4%BD%8D%E8%BF%90%E7%AE%97/",{y:"p",t:"位运算 分类",I:0},["/category/位运算/"]],["v-ee606424","/category/%E5%89%8D%E7%BC%80%E5%92%8C/",{y:"p",t:"前缀和 分类",I:0},["/category/前缀和/"]],["v-25c3d073","/category/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/",{y:"p",t:"动态规划 分类",I:0},["/category/动态规划/"]],["v-1f2cc090","/category/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98/",{y:"p",t:"背包问题 分类",I:0},["/category/背包问题/"]],["v-1746eac0","/category/%E5%8D%95%E8%B0%83%E6%A0%88/",{y:"p",t:"单调栈 分类",I:0},["/category/单调栈/"]],["v-2532fa9a","/category/%E9%93%BE%E8%A1%A8/",{y:"p",t:"链表 分类",I:0},["/category/链表/"]],["v-222197da","/category/%E5%AD%97%E7%AC%A6%E4%B8%B2/",{y:"p",t:"字符串 分类",I:0},["/category/字符串/"]],["v-68bd6c0e","/category/%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/",{y:"p",t:"拓扑排序 分类",I:0},["/category/拓扑排序/"]],["v-33acb8d5","/category/%E6%8E%92%E5%BA%8F/",{y:"p",t:"排序 分类",I:0},["/category/排序/"]],["v-5af1630c","/category/%E6%95%B0%E7%BB%84/",{y:"p",t:"数组 分类",I:0},["/category/数组/"]],["v-09eceae7","/category/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/",{y:"p",t:"栈与队列 分类",I:0},["/category/栈与队列/"]],["v-368a59c0","/category/%E6%A0%88/",{y:"p",t:"栈 分类",I:0},["/category/栈/"]],["v-65ee6e36","/category/dfs/",{y:"p",t:"DFS 分类",I:0},[]],["v-1c566021","/category/%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95/",{y:"p",t:"贪心算法 分类",I:0},["/category/贪心算法/"]],["v-c2b9deb6","/category/%E9%80%92%E5%BD%92/",{y:"p",t:"递归 分类",I:0},["/category/递归/"]],["v-06e76276","/category/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8/",{y:"p",t:"双向链表 分类",I:0},["/category/双向链表/"]],["v-fa9f5eca","/category/%E6%95%B0%E7%BB%84%E6%96%B9%E6%B3%95/",{y:"p",t:"数组方法 分类",I:0},["/category/数组方法/"]],["v-731bf1cc","/category/%E7%BB%84%E5%90%88/",{y:"p",t:"组合 分类",I:0},["/category/组合/"]],["v-0c1f7b33","/category/%E5%9B%9E%E6%BA%AF/",{y:"p",t:"回溯 分类",I:0},["/category/回溯/"]],["v-221d7106","/category/%E6%8E%92%E5%88%97/",{y:"p",t:"排列 分类",I:0},["/category/排列/"]],["v-a0f187e0","/category/%E4%B8%AD%E5%BF%83%E6%89%A9%E6%95%A3%E6%B3%95/",{y:"p",t:"中心扩散法 分类",I:0},["/category/中心扩散法/"]],["v-57ebea04","/category/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/",{y:"p",t:"滑动窗口 分类",I:0},["/category/滑动窗口/"]],["v-5762eaa4","/category/%E4%BA%8C%E5%88%86/",{y:"p",t:"二分 分类",I:0},["/category/二分/"]],["v-4d748649","/category/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/",{y:"p",t:"二分查找 分类",I:0},["/category/二分查找/"]],["v-f972c15e","/category/%E5%BD%92%E5%B9%B6/",{y:"p",t:"归并 分类",I:0},["/category/归并/"]],["v-1b942ee2","/category/%E7%BB%84%E4%BB%B6/",{y:"p",t:"组件 分类",I:0},["/category/组件/"]]];var nl=F({name:"Vuepress",setup(){const n=fk();return()=>c(n.value)}}),N8=()=>$8.reduce((n,[s,a,e,t])=>(n.push({name:s,path:a,component:nl,meta:e},{path:a.endsWith("/")?a+"index.html":a.substring(0,a.length-5),redirect:a},...t.map(o=>({path:o===":md"?a.substring(0,a.length-5)+".md":o,redirect:a}))),n),[{name:"404",path:"/:catchAll(.*)",component:nl}]),z8=Mk,H8=()=>{const n=ym({history:z8(Zo("/")),routes:N8(),scrollBehavior:(s,a,e)=>e||(s.hash?{el:s.hash}:{top:0})});return n.beforeResolve(async(s,a)=>{var e;(s.path!==a.path||a===Ls)&&([s.meta._data]=await Promise.all([Is.resolvePageData(s.name),(e=ti[s.name])==null?void 0:e.__asyncLoader()]))}),n},q8=n=>{n.component("ClientOnly",Et),n.component("Content",vi)},U8=(n,s,a)=>{const e=Rc(()=>s.currentRoute.value.path),t=Rc(()=>Is.resolveRouteLocale(_a.value.locales,e.value)),o=cp(e,()=>s.currentRoute.value.meta._data),p=w(()=>Is.resolveLayouts(a)),i=w(()=>Is.resolveSiteLocaleData(_a.value,t.value)),r=w(()=>Is.resolvePageFrontmatter(o.value)),u=w(()=>Is.resolvePageHeadTitle(o.value,i.value)),d=w(()=>Is.resolvePageHead(u.value,r.value,i.value)),v=w(()=>Is.resolvePageLang(o.value,i.value)),k=w(()=>Is.resolvePageLayout(o.value,p.value));return n.provide(dk,p),n.provide(oi,o),n.provide(pi,r),n.provide(mk,u),n.provide(ci,d),n.provide(li,v),n.provide(ri,k),n.provide(np,t),n.provide(di,i),Object.defineProperties(n.config.globalProperties,{$frontmatter:{get:()=>r.value},$head:{get:()=>d.value},$headTitle:{get:()=>u.value},$lang:{get:()=>v.value},$page:{get:()=>o.value},$routeLocale:{get:()=>t.value},$site:{get:()=>_a.value},$siteLocale:{get:()=>i.value},$withBase:{get:()=>Tn}}),{layouts:p,pageData:o,pageFrontmatter:r,pageHead:d,pageHeadTitle:u,pageLang:v,pageLayout:k,routeLocale:t,siteData:_a,siteLocaleData:i}},W8=()=>{const n=kk(),s=ii(),a=Y([]),e=()=>{n.value.forEach(o=>{const p=G8(o);p&&a.value.push(p)})},t=()=>{document.documentElement.lang=s.value,a.value.forEach(o=>{o.parentNode===document.head&&document.head.removeChild(o)}),a.value.splice(0,a.value.length),n.value.forEach(o=>{const p=K8(o);p!==null&&(document.head.appendChild(p),a.value.push(p))})};fs(Ek,t),gn(()=>{e(),t(),fn(()=>n.value,t)})},G8=([n,s,a=""])=>{const e=Object.entries(s).map(([i,r])=>mn(r)?`[${i}=${JSON.stringify(r)}]`:r===!0?`[${i}]`:"").join(""),t=`head > ${n}${e}`;return Array.from(document.querySelectorAll(t)).find(i=>i.innerText===a)||null},K8=([n,s,a])=>{if(!mn(n))return null;const e=document.createElement(n);return we(s)&&Object.entries(s).forEach(([t,o])=>{mn(o)?e.setAttribute(t,o):o===!0&&e.setAttribute(t,"")}),mn(a)&&e.appendChild(document.createTextNode(a)),e},J8=sk,Y8=async()=>{var a;const n=J8({name:"VuepressApp",setup(){var e;W8();for(const t of Qe)(e=t.setup)==null||e.call(t);return()=>[c(wi),...Qe.flatMap(({rootComponents:t=[]})=>t.map(o=>c(o)))]}}),s=H8();q8(n),U8(n,s,Qe);for(const e of Qe)await((a=e.enhance)==null?void 0:a.call(e,{app:n,router:s,siteData:_a}));return n.use(s),{app:n,router:s}};Y8().then(({app:n,router:s})=>{s.isReady().then(()=>{n.mount("#app")})});export{l as _,Ul as a,Wl as b,Q8 as c,Y8 as createVueApp,Z8 as d,Ln as e,X8 as f,lv as o,ns as r,wd as w};
