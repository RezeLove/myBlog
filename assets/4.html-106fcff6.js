const n=JSON.parse('{"key":"v-52e48aa4","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/4.html","title":"反转二叉树","lang":"zh-CN","frontmatter":{"title":"反转二叉树","order":4,"category":["算法题","二叉树"],"description":"题目链接 反转二叉树 思路 递归遍历:根据一定顺序(前序、后序)递归二叉树，先交换左右节点，然后再继续反转左右节点的子节点 层序遍历 实现 递归遍历 var invertTree = function (root) { // 终止条件 if (!root) { return null; } //交换节点 let rightnode = root.right; root.right = root.left; root.left = rightnode; //反转子节点 invertTree(root.left); invertTree(root.right); return root; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BA%8C%E5%8F%89%E6%A0%91/4.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"反转二叉树"}],["meta",{"property":"og:description","content":"题目链接 反转二叉树 思路 递归遍历:根据一定顺序(前序、后序)递归二叉树，先交换左右节点，然后再继续反转左右节点的子节点 层序遍历 实现 递归遍历 var invertTree = function (root) { // 终止条件 if (!root) { return null; } //交换节点 let rightnode = root.right; root.right = root.left; root.left = rightnode; //反转子节点 invertTree(root.left); invertTree(root.right); return root; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T08:05:49.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-01-21T08:05:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"反转二叉树\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-21T08:05:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1705824349000,"updatedTime":1705824349000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.62,"words":185},"filePathRelative":"算法题/二叉树/4.md","localizedDate":"2024年1月21日","excerpt":"<h2> 题目链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/invert-binary-tree/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">反转二叉树</a></p>\\n<h2> 思路</h2>\\n<ul>\\n<li>\\n<p>递归遍历:根据一定顺序(前序、后序)递归二叉树，先交换左右节点，然后再继续反转左右节点的子节点</p>\\n</li>\\n<li>\\n<p>层序遍历</p>\\n</li>\\n</ul>\\n<h2> 实现</h2>\\n<ol>\\n<li>递归遍历</li>\\n</ol>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">invertTree</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">root</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 终止条件</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>root<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">//交换节点</span>\\n  <span class=\\"token keyword\\">let</span> rightnode <span class=\\"token operator\\">=</span> root<span class=\\"token punctuation\\">.</span>right<span class=\\"token punctuation\\">;</span>\\n  root<span class=\\"token punctuation\\">.</span>right <span class=\\"token operator\\">=</span> root<span class=\\"token punctuation\\">.</span>left<span class=\\"token punctuation\\">;</span>\\n  root<span class=\\"token punctuation\\">.</span>left <span class=\\"token operator\\">=</span> rightnode<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">//反转子节点</span>\\n  <span class=\\"token function\\">invertTree</span><span class=\\"token punctuation\\">(</span>root<span class=\\"token punctuation\\">.</span>left<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token function\\">invertTree</span><span class=\\"token punctuation\\">(</span>root<span class=\\"token punctuation\\">.</span>right<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> root<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
