const t=JSON.parse('{"key":"v-80b1f816","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/1.%E7%BB%84%E5%90%88/1.html","title":"组合","lang":"zh-CN","frontmatter":{"title":"组合","order":1,"category":["算法题","组合","回溯"],"description":"题目链接 组合 思路 思路 剪枝思路：控制遍历的起点，如果从某个元素开始，剩余元素的数量小于要找的数量 k，就不再往后遍历 剩余数量：n-i+1 剩余目标数量：k-path.length 目标：n-i+1&gt;=k-path.length 最终：i &lt;= n-k+path.length-1","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%9E%E6%BA%AF/1.%E7%BB%84%E5%90%88/1.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"组合"}],["meta",{"property":"og:description","content":"题目链接 组合 思路 思路 剪枝思路：控制遍历的起点，如果从某个元素开始，剩余元素的数量小于要找的数量 k，就不再往后遍历 剩余数量：n-i+1 剩余目标数量：k-path.length 目标：n-i+1&gt;=k-path.length 最终：i &lt;= n-k+path.length-1"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T08:05:49.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-01-21T08:05:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"组合\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-21T08:05:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1705824349000,"updatedTime":1705824349000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.72,"words":215},"filePathRelative":"算法题/回溯/1.组合/1.md","localizedDate":"2024年1月21日","excerpt":"<h2> 题目链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/combinations/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">组合</a></p>\\n<h2> 思路</h2>\\n<p><a href=\\"https://www.programmercarl.com/0077.%E7%BB%84%E5%90%88.html#%E6%80%9D%E8%B7%AF\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">思路</a>\\n剪枝思路：控制遍历的起点，如果从某个元素开始，剩余元素的数量小于要找的数量 k，就不再往后遍历\\n剩余数量：n-i+1\\n剩余目标数量：k-path.length\\n目标：n-i+1&gt;=k-path.length\\n最终：i &lt;= n-k+path.length-1</p>","autoDesc":true}');export{t as data};
