const s=JSON.parse('{"key":"v-1ccec648","path":"/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/%E6%A8%A1%E6%8B%9Fclass.html","title":"模拟class","lang":"zh-CN","frontmatter":{"title":"模拟class","order":21,"category":["面试","JS"],"description":"1 Class 中 extends 的作用 继承父类的原型方法 继承父类中的静态方法(static) 继承父类的构造函数逻辑，通过 super() 可以调用父类的构造函数（下面具体展开） 原型链继承 2 Class 中 super 的作用 在子类构造函数中调用父类的构造函数 class Person { constructor(name) { this.name = name; } } class Student extends Person { constructor(name, grade) { // 调用父类的构造函数 super(name); this.grade = grade; } }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/%E6%A8%A1%E6%8B%9Fclass.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"模拟class"}],["meta",{"property":"og:description","content":"1 Class 中 extends 的作用 继承父类的原型方法 继承父类中的静态方法(static) 继承父类的构造函数逻辑，通过 super() 可以调用父类的构造函数（下面具体展开） 原型链继承 2 Class 中 super 的作用 在子类构造函数中调用父类的构造函数 class Person { constructor(name) { this.name = name; } } class Student extends Person { constructor(name, grade) { // 调用父类的构造函数 super(name); this.grade = grade; } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-03T08:35:43.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-10-03T08:35:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"模拟class\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T08:35:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1 Class 中 extends 的作用","slug":"_1-class-中-extends-的作用","link":"#_1-class-中-extends-的作用","children":[]},{"level":2,"title":"2 Class 中 super 的作用","slug":"_2-class-中-super-的作用","link":"#_2-class-中-super-的作用","children":[]},{"level":2,"title":"3 如何用 js 模拟 class","slug":"_3-如何用-js-模拟-class","link":"#_3-如何用-js-模拟-class","children":[]}],"git":{"createdTime":1727944543000,"updatedTime":1727944543000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":1.27,"words":381},"filePathRelative":"前端笔记/js/模拟class.md","localizedDate":"2024年10月3日","excerpt":"<h2> 1 Class 中 extends 的作用</h2>\\n<ol>\\n<li>继承父类的原型方法</li>\\n<li>继承父类中的静态方法(static)</li>\\n<li>继承父类的构造函数逻辑，通过 <mark>super()</mark> 可以调用父类的构造函数（下面具体展开）</li>\\n<li>原型链继承</li>\\n</ol>\\n<h2> 2 Class 中 super 的作用</h2>\\n<ol>\\n<li>在子类构造函数中调用父类的构造函数</li>\\n</ol>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Person</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">name</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">=</span> name<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">Student</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">Person</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">constructor</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">name<span class=\\"token punctuation\\">,</span> grade</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 调用父类的构造函数</span>\\n    <span class=\\"token keyword\\">super</span><span class=\\"token punctuation\\">(</span>name<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>grade <span class=\\"token operator\\">=</span> grade<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{s as data};
