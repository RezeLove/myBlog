const n=JSON.parse('{"key":"v-64b53ad6","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%93%88%E5%B8%8C%E8%A1%A8/4.html","title":"赎金信","lang":"zh-CN","frontmatter":{"title":"赎金信","order":4,"category":["算法题","链表"],"description":"题目链接 链接 实现 与有效异位数类似，但前者是在同步循环，该题是先后循环，所以判断条件可以优化 var canConstruct = function (ransomNote, magazine) { const helper = new Array(26).fill(0); const pivot = \\"a\\".charCodeAt(0); for (let str of magazine) { helper[str.charCodeAt(0) - pivot]++; } for (let str of ransomNote) { helper[str.charCodeAt(0) - pivot]--; } return helper.every((i) =&gt; { i &gt;= 0; }); };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%93%88%E5%B8%8C%E8%A1%A8/4.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"赎金信"}],["meta",{"property":"og:description","content":"题目链接 链接 实现 与有效异位数类似，但前者是在同步循环，该题是先后循环，所以判断条件可以优化 var canConstruct = function (ransomNote, magazine) { const helper = new Array(26).fill(0); const pivot = \\"a\\".charCodeAt(0); for (let str of magazine) { helper[str.charCodeAt(0) - pivot]++; } for (let str of ransomNote) { helper[str.charCodeAt(0) - pivot]--; } return helper.every((i) =&gt; { i &gt;= 0; }); };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T08:05:49.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-01-21T08:05:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"赎金信\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-21T08:05:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1705824349000,"updatedTime":1705824349000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.52,"words":157},"filePathRelative":"算法题/哈希表/4.md","localizedDate":"2024年1月21日","excerpt":"<h2> 题目链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/ransom-note/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">链接</a></p>\\n<h2> 实现</h2>\\n<p>与有效异位数类似，但前者是在同步循环，该题是先后循环，所以判断条件可以优化</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">canConstruct</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">ransomNote<span class=\\"token punctuation\\">,</span> magazine</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> helper <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Array</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">26</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fill</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> pivot <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"a\\"</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charCodeAt</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> str <span class=\\"token keyword\\">of</span> magazine<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    helper<span class=\\"token punctuation\\">[</span>str<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charCodeAt</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> pivot<span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> str <span class=\\"token keyword\\">of</span> ransomNote<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    helper<span class=\\"token punctuation\\">[</span>str<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">charCodeAt</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">-</span> pivot<span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> helper<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">every</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">i</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    i <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
