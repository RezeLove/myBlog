const t=JSON.parse('{"key":"v-5fb1723e","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/8.01%E8%83%8C%E5%8C%85-%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84.html","title":"01背包-一维数组","lang":"zh-CN","frontmatter":{"title":"01背包-一维数组","order":8,"category":["算法题","动态规划"],"description":"简化 二维 dp 数组是从物品和背包两个维度进行构造，实际上只需要一维数组也可以完成相同的目的，因为实际只需要二维 dp 中的每一行 dp[i] 容量为 j 的背包所背的最大价值 递推公式的思路与上一题一样，放或不放 dp[j] = Math.max(dp[j], dp[j - weight[i]] + value[i]);","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/8.01%E8%83%8C%E5%8C%85-%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"01背包-一维数组"}],["meta",{"property":"og:description","content":"简化 二维 dp 数组是从物品和背包两个维度进行构造，实际上只需要一维数组也可以完成相同的目的，因为实际只需要二维 dp 中的每一行 dp[i] 容量为 j 的背包所背的最大价值 递推公式的思路与上一题一样，放或不放 dp[j] = Math.max(dp[j], dp[j - weight[i]] + value[i]);"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T08:05:49.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-01-21T08:05:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"01背包-一维数组\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-21T08:05:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"简化","slug":"简化","link":"#简化","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1705824349000,"updatedTime":1705824349000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":1.35,"words":406},"filePathRelative":"算法题/动态规划/8.01背包-一维数组.md","localizedDate":"2024年1月21日","excerpt":"<h2> 简化</h2>\\n<p>二维 dp 数组是从物品和背包两个维度进行构造，实际上只需要一维数组也可以完成相同的目的，因为实际只需要二维 dp 中的每一行</p>\\n<p>dp[i] 容量为 j 的背包所背的最大价值</p>\\n<p>递推公式的思路与上一题一样，放或不放</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code>dp<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">max</span><span class=\\"token punctuation\\">(</span>dp<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> dp<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">-</span> weight<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">+</span> value<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{t as data};
