const e=JSON.parse('{"key":"v-668081e0","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%BA%BF%E6%80%A7dp%E9%97%AE%E9%A2%98/5.%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C.html","title":"最大子数组和","lang":"zh-CN","frontmatter":{"title":"最大子数组和","order":5,"category":["算法题","动态规划"],"description":"题目链接 思路 贪心 动态规划 因为要求连续最大子数组的和，在考虑 nums[i]时，为了能将 nums[i]加入结果 dp[i]表示的是从 nums[j]~nums[i]的连续最大子数组的和，j 是从 0-i-1 的任意数 递推公式：dp[i] = Math.max(dp[i-1]+nums[i],nums[i]) 实现 动态规划","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/%E7%BA%BF%E6%80%A7dp%E9%97%AE%E9%A2%98/5.%E6%9C%80%E5%A4%A7%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"最大子数组和"}],["meta",{"property":"og:description","content":"题目链接 思路 贪心 动态规划 因为要求连续最大子数组的和，在考虑 nums[i]时，为了能将 nums[i]加入结果 dp[i]表示的是从 nums[j]~nums[i]的连续最大子数组的和，j 是从 0-i-1 的任意数 递推公式：dp[i] = Math.max(dp[i-1]+nums[i],nums[i]) 实现 动态规划"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-18T01:56:39.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-09-18T01:56:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"最大子数组和\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-18T01:56:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1726624599000,"updatedTime":1726624599000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.52,"words":155},"filePathRelative":"算法题/动态规划/线性dp问题/5.最大子数组和.md","localizedDate":"2024年9月18日","excerpt":"<h2> 题目链接</h2>\\n<h2> 思路</h2>\\n<ol>\\n<li>\\n<p>贪心</p>\\n</li>\\n<li>\\n<p>动态规划</p>\\n</li>\\n</ol>\\n<p>因为要求连续最大子数组的和，在考虑 nums[i]时，为了能将 nums[i]加入结果</p>\\n<p>dp[i]表示的是从 nums[j]~nums[i]的连续最大子数组的和，j 是从 0-i-1 的任意数</p>\\n<p>递推公式：dp[i] = Math.max(dp[i-1]+nums[i],nums[i])</p>\\n<h2> 实现</h2>\\n<blockquote>\\n<p>动态规划</p>\\n</blockquote>\\n","autoDesc":true}');export{e as data};
