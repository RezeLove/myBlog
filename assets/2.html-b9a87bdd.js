const n=JSON.parse('{"key":"v-6b889d52","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%93%88%E5%B8%8C%E8%A1%A8/2.html","title":"两个数组的交集","lang":"zh-CN","frontmatter":{"title":"两个数组的交集","order":2,"category":["算法题","链表"],"description":"题目链接 链接 思路 将长度最小的数组转化为 set，交集一定在此 set 中，然后遍历 set 的每个元素，看是否在存在于另一个数组，不存在则删除 实现 注意点：js 中判断元素是否在数组中的方法是.includes() var intersection = function (nums1, nums2) { if (nums1.length &gt; nums2.length) { [nums1, nums2] = [nums2, nums1]; } const set = new Set(nums1); for (let item of set) { if (!nums2.includes(item)) { console.log(item); set.delete(item); } } return [...set]; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%93%88%E5%B8%8C%E8%A1%A8/2.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"两个数组的交集"}],["meta",{"property":"og:description","content":"题目链接 链接 思路 将长度最小的数组转化为 set，交集一定在此 set 中，然后遍历 set 的每个元素，看是否在存在于另一个数组，不存在则删除 实现 注意点：js 中判断元素是否在数组中的方法是.includes() var intersection = function (nums1, nums2) { if (nums1.length &gt; nums2.length) { [nums1, nums2] = [nums2, nums1]; } const set = new Set(nums1); for (let item of set) { if (!nums2.includes(item)) { console.log(item); set.delete(item); } } return [...set]; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T08:05:49.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-01-21T08:05:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"两个数组的交集\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-21T08:05:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1705824349000,"updatedTime":1705824349000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.44,"words":131},"filePathRelative":"算法题/哈希表/2.md","localizedDate":"2024年1月21日","excerpt":"<h2> 题目链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/intersection-of-two-arrays/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">链接</a></p>\\n<h2> 思路</h2>\\n<p>将长度最小的数组转化为 set，交集一定在此 set 中，然后遍历 set 的每个元素，看是否在存在于另一个数组，不存在则删除</p>\\n<h2> 实现</h2>\\n<p>注意点：js 中判断元素是否在数组中的方法是.includes()</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">intersection</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">nums1<span class=\\"token punctuation\\">,</span> nums2</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>nums1<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">&gt;</span> nums2<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token punctuation\\">[</span>nums1<span class=\\"token punctuation\\">,</span> nums2<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>nums2<span class=\\"token punctuation\\">,</span> nums1<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">const</span> set <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Set</span><span class=\\"token punctuation\\">(</span>nums1<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> item <span class=\\"token keyword\\">of</span> set<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>nums2<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">includes</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      set<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">delete</span><span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">...</span>set<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
