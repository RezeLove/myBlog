const n=JSON.parse('{"key":"v-5d5cd144","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/6.%E5%AF%BB%E6%89%BE%E5%B3%B0%E5%80%BC%E5%85%83%E7%B4%A0.html","title":"寻找峰值元素","lang":"zh-CN","frontmatter":{"title":"寻找峰值元素","order":6,"category":["算法题","数组","二分"],"description":"思路 根据题目描述,nums[-1] = nums[n] = -∞,那么数组中一定存在一个峰值 因此当找到一个元素&lt;它右侧的元素时，就不断向左移动，一定能够找到一个峰值 区别：这题是与相邻元素比较，而非与定值比较，因此在左闭右闭区的写法中，会出现左元素越界的情况，需要额外判断 实现 var findPeakElement = function (nums) { let l = 0, r = nums.length - 1; if (nums.length === 1) return 0; while (l &lt;= r) { let mid = Math.floor((l + r) / 2); // 与相邻元素比较而非固定目标 if (nums[mid] &gt; nums[mid + 1]) { r = mid - 1; } else { l = mid + 1; } } // l会越界,需要增加判断条件 return l &gt;= nums.length ? l - 1 : l; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/6.%E5%AF%BB%E6%89%BE%E5%B3%B0%E5%80%BC%E5%85%83%E7%B4%A0.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"寻找峰值元素"}],["meta",{"property":"og:description","content":"思路 根据题目描述,nums[-1] = nums[n] = -∞,那么数组中一定存在一个峰值 因此当找到一个元素&lt;它右侧的元素时，就不断向左移动，一定能够找到一个峰值 区别：这题是与相邻元素比较，而非与定值比较，因此在左闭右闭区的写法中，会出现左元素越界的情况，需要额外判断 实现 var findPeakElement = function (nums) { let l = 0, r = nums.length - 1; if (nums.length === 1) return 0; while (l &lt;= r) { let mid = Math.floor((l + r) / 2); // 与相邻元素比较而非固定目标 if (nums[mid] &gt; nums[mid + 1]) { r = mid - 1; } else { l = mid + 1; } } // l会越界,需要增加判断条件 return l &gt;= nums.length ? l - 1 : l; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-03T07:15:19.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-08-03T07:15:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"寻找峰值元素\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-03T07:15:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1722669319000,"updatedTime":1722669319000,"contributors":[{"name":"‘TX7’","email":"‘1224745953@qq.com’","commits":1}]},"readingTime":{"minutes":0.66,"words":197},"filePathRelative":"算法题/数组/二分查找/6.寻找峰值元素.md","localizedDate":"2024年8月3日","excerpt":"<h2> 思路</h2>\\n<p>根据题目描述,nums[-1] = nums[n] = -∞,那么数组中一定存在一个峰值</p>\\n<p>因此当找到一个元素&lt;它右侧的元素时，就不断向左移动，一定能够找到一个峰值</p>\\n<p>区别：这题是与相邻元素比较，而非与定值比较，因此在左闭右闭区的写法中，会出现左元素越界的情况，需要额外判断</p>\\n<h2> 实现</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">findPeakElement</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">nums</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> l <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span>\\n    r <span class=\\"token operator\\">=</span> nums<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">===</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>l <span class=\\"token operator\\">&lt;=</span> r<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> mid <span class=\\"token operator\\">=</span> Math<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">floor</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>l <span class=\\"token operator\\">+</span> r<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">/</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 与相邻元素比较而非固定目标</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">[</span>mid<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> nums<span class=\\"token punctuation\\">[</span>mid <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      r <span class=\\"token operator\\">=</span> mid <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n      l <span class=\\"token operator\\">=</span> mid <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">// l会越界,需要增加判断条件</span>\\n  <span class=\\"token keyword\\">return</span> l <span class=\\"token operator\\">&gt;=</span> nums<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">?</span> l <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">:</span> l<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
