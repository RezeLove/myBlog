const e=JSON.parse('{"key":"v-ad785c40","path":"/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/18.%E6%89%8B%E5%86%99Promise.html","title":"手写Promise","lang":"zh-CN","frontmatter":{"title":"手写Promise","order":18,"category":["面试","JS"],"description":"参考链接 手写 Promise 基础版 Promise todo: 构建 Promise 对象时，需要传入一个 executor 函数，Promise 的主要业务流程都在 executor 函数中执行 promise 有三个状态：pending，fulfilled，or reject executor 函数接受两个函数 resolve 和 reject，如果运行在 excutor 函数中的业务执行成功了，会调用 resolve 函数；如果执行失败了，则调用 reject 函数 Promise 的状态不可逆，同时调用 resolve 函数和 reject 函数，默认会采取第一次调用的结果","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/18.%E6%89%8B%E5%86%99Promise.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"手写Promise"}],["meta",{"property":"og:description","content":"参考链接 手写 Promise 基础版 Promise todo: 构建 Promise 对象时，需要传入一个 executor 函数，Promise 的主要业务流程都在 executor 函数中执行 promise 有三个状态：pending，fulfilled，or reject executor 函数接受两个函数 resolve 和 reject，如果运行在 excutor 函数中的业务执行成功了，会调用 resolve 函数；如果执行失败了，则调用 reject 函数 Promise 的状态不可逆，同时调用 resolve 函数和 reject 函数，默认会采取第一次调用的结果"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-07T13:37:50.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-10-07T13:37:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"手写Promise\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-07T13:37:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]},{"level":3,"title":"基础版 Promise","slug":"基础版-promise","link":"#基础版-promise","children":[]}],"git":{"createdTime":1710583872000,"updatedTime":1728308270000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":2},{"name":"‘TX7’","email":"‘1224745953@qq.com’","commits":1}]},"readingTime":{"minutes":7.51,"words":2254},"filePathRelative":"前端笔记/js/18.手写Promise.md","localizedDate":"2024年3月16日","excerpt":"<h3> 参考链接</h3>\\n<p><a href=\\"https://zhuanlan.zhihu.com/p/183801144\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">手写 Promise</a></p>\\n<h3> 基础版 Promise</h3>\\n<p>todo:</p>\\n<ul>\\n<li>构建 Promise 对象时，需要传入一个 executor 函数，Promise 的主要业务流程都在 executor 函数中执行</li>\\n<li>promise 有三个状态：pending，fulfilled，or reject</li>\\n<li>executor 函数接受两个函数 resolve 和 reject，如果运行在 excutor 函数中的业务执行成功了，会调用 resolve 函数；如果执行失败了，则调用 reject 函数</li>\\n<li>Promise 的状态不可逆，同时调用 resolve 函数和 reject 函数，默认会采取第一次调用的结果</li>\\n</ul>","autoDesc":true}');export{e as data};
