const n=JSON.parse('{"key":"v-f390e4d2","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%8E%92%E5%BA%8F/5.%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F.html","title":"插入排序","lang":"zh-CN","frontmatter":{"title":"插入排序","order":5,"category":["算法题","排序"],"description":"思路 类似于打扑克牌时整理牌的方式：将手中的牌保持有序，每次从牌堆中抽出一张牌，并将它插入到正确的位置 从第二个元素开始，将其与前面的元素进行比较，找到适当的位置插入 后面的元素逐个插入到前面已经排好序的部分 重复这个过程，直到所有元素都插入到正确的位置 时间复杂度 O(N^2) 实现 const insertionSort = (arr) =&gt; { let n = arr.length; for (let i = 1; i &lt; n; i++) { let current = arr[i]; let j = i - 1; while (j &gt;= 0 &amp;&amp; arr[j] &gt; current) { arr[j + 1] = arr[j]; j--; } // j多减了一次 arr[j + 1] = current; } return arr; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%8E%92%E5%BA%8F/5.%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"插入排序"}],["meta",{"property":"og:description","content":"思路 类似于打扑克牌时整理牌的方式：将手中的牌保持有序，每次从牌堆中抽出一张牌，并将它插入到正确的位置 从第二个元素开始，将其与前面的元素进行比较，找到适当的位置插入 后面的元素逐个插入到前面已经排好序的部分 重复这个过程，直到所有元素都插入到正确的位置 时间复杂度 O(N^2) 实现 const insertionSort = (arr) =&gt; { let n = arr.length; for (let i = 1; i &lt; n; i++) { let current = arr[i]; let j = i - 1; while (j &gt;= 0 &amp;&amp; arr[j] &gt; current) { arr[j + 1] = arr[j]; j--; } // j多减了一次 arr[j + 1] = current; } return arr; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-23T02:52:28.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-09-23T02:52:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"插入排序\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-23T02:52:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"时间复杂度","slug":"时间复杂度","link":"#时间复杂度","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1727059948000,"updatedTime":1727059948000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.63,"words":190},"filePathRelative":"算法题/排序/5.插入排序.md","localizedDate":"2024年9月23日","excerpt":"<h2> 思路</h2>\\n<p>类似于打扑克牌时整理牌的方式：将手中的牌保持有序，每次从牌堆中抽出一张牌，并将它插入到正确的位置</p>\\n<ol>\\n<li>从第二个元素开始，将其与前面的元素进行比较，找到适当的位置插入</li>\\n<li>后面的元素逐个插入到前面已经排好序的部分</li>\\n<li>重复这个过程，直到所有元素都插入到正确的位置</li>\\n</ol>\\n<h2> 时间复杂度</h2>\\n<p>O(N^2)</p>\\n<h2> 实现</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">insertionSort</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">arr</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> n <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> n<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> current <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">let</span> j <span class=\\"token operator\\">=</span> i <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>j <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">&amp;&amp;</span> arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;</span> current<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      arr<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n      j<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token comment\\">// j多减了一次</span>\\n    arr<span class=\\"token punctuation\\">[</span>j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> current<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> arr<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
