const e=JSON.parse('{"key":"v-798b9566","path":"/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/1.%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html","title":"单利模式","lang":"zh-CN","frontmatter":{"title":"单利模式","order":1,"category":["设计模式"],"description":"基本概念 单例模式的定义是：保证一个类仅有一个实例，并提供一个访问它的全局访问点。 应用场景： 如当我们单击登录按钮的时候，页面中会出现一个登录浮窗，而这个登录浮窗是唯一的，无论单击多少次登录按钮，这个浮窗都只会被创建一次，那么这个登录浮窗就适合用单例模式来创建 全局的配置文件 实现思路 考虑到单一职责原则，实现单利模式需要至少两个方法： 1.管理单例的方法：判断单利是否创建，如果创建过就直接返回；如果未创建过就新建一个单例 2.创建单例的方法","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/1.%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"单利模式"}],["meta",{"property":"og:description","content":"基本概念 单例模式的定义是：保证一个类仅有一个实例，并提供一个访问它的全局访问点。 应用场景： 如当我们单击登录按钮的时候，页面中会出现一个登录浮窗，而这个登录浮窗是唯一的，无论单击多少次登录按钮，这个浮窗都只会被创建一次，那么这个登录浮窗就适合用单例模式来创建 全局的配置文件 实现思路 考虑到单一职责原则，实现单利模式需要至少两个方法： 1.管理单例的方法：判断单利是否创建，如果创建过就直接返回；如果未创建过就新建一个单例 2.创建单例的方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-06T12:03:13.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-06-06T12:03:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"单利模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-06T12:03:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":2,"title":"实现思路","slug":"实现思路","link":"#实现思路","children":[]},{"level":2,"title":"举例","slug":"举例","link":"#举例","children":[]},{"level":2,"title":"使用 ES6 class 实现","slug":"使用-es6-class-实现","link":"#使用-es6-class-实现","children":[]}],"git":{"createdTime":1717675393000,"updatedTime":1717675393000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":2.45,"words":736},"filePathRelative":"前端笔记/设计模式/1.单例模式.md","localizedDate":"2024年6月6日","excerpt":"<h2> 基本概念</h2>\\n<p>单例模式的定义是：保证一个类仅有一个实例，并提供一个访问它的全局访问点。</p>\\n<p>应用场景：</p>\\n<ul>\\n<li>\\n<p>如当我们单击登录按钮的时候，页面中会出现一个登录浮窗，而这个登录浮窗是唯一的，无论单击多少次登录按钮，这个浮窗都只会被创建一次，那么这个登录浮窗就适合用单例模式来创建</p>\\n</li>\\n<li>\\n<p>全局的配置文件</p>\\n</li>\\n</ul>\\n<h2> 实现思路</h2>\\n<p>考虑到单一职责原则，实现单利模式需要至少两个方法：</p>\\n<ul>\\n<li>1.管理单例的方法：判断单利是否创建，如果创建过就直接返回；如果未创建过就新建一个单例</li>\\n<li>2.创建单例的方法</li>\\n</ul>","autoDesc":true}');export{e as data};
