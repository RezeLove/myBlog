const e=JSON.parse('{"key":"v-77edda85","path":"/vue-learn/%E5%93%8D%E5%BA%94%E5%BC%8F/6.html","title":"六、实现Reactive和Effect函数","lang":"zh-CN","frontmatter":{"title":"六、实现Reactive和Effect函数","icon":"laptop-code","order":6,"category":["使用指南"],"description":"概述 通过 Proxy 代理对象，通过 get 拦截中的 track 函数将对象属性涉及的 effect 函数存入一个 weakmap 中，结构如下；在 set 拦截器中依次触发 weakmap 中收集的 effect 函数 TargetMap的数据结构 reactive思路","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/vue-learn/%E5%93%8D%E5%BA%94%E5%BC%8F/6.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"六、实现Reactive和Effect函数"}],["meta",{"property":"og:description","content":"概述 通过 Proxy 代理对象，通过 get 拦截中的 track 函数将对象属性涉及的 effect 函数存入一个 weakmap 中，结构如下；在 set 拦截器中依次触发 weakmap 中收集的 effect 函数 TargetMap的数据结构 reactive思路"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-21T04:50:56.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-03-21T04:50:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"六、实现Reactive和Effect函数\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-21T04:50:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"分支切换问题与 cleanup","slug":"分支切换问题与-cleanup","link":"#分支切换问题与-cleanup","children":[]},{"level":2,"title":"嵌套 effect 与 effect 栈","slug":"嵌套-effect-与-effect-栈","link":"#嵌套-effect-与-effect-栈","children":[]},{"level":2,"title":"避免无限循环","slug":"避免无限循环","link":"#避免无限循环","children":[]},{"level":2,"title":"调度系统","slug":"调度系统","link":"#调度系统","children":[]},{"level":2,"title":"基本 Reactive 函数","slug":"基本-reactive-函数","link":"#基本-reactive-函数","children":[]},{"level":2,"title":"基本 Effect 函数","slug":"基本-effect-函数","link":"#基本-effect-函数","children":[]},{"level":2,"title":"getter 中的 Track 函数","slug":"getter-中的-track-函数","link":"#getter-中的-track-函数","children":[]},{"level":2,"title":"setter 中的 Trigger 函数","slug":"setter-中的-trigger-函数","link":"#setter-中的-trigger-函数","children":[]},{"level":2,"title":"reactive 的局限性","slug":"reactive-的局限性","link":"#reactive-的局限性","children":[]}],"git":{"createdTime":1705824349000,"updatedTime":1710996656000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":2}]},"readingTime":{"minutes":5.08,"words":1524},"filePathRelative":"vue-learn/响应式/6.md","localizedDate":"2024年1月21日","excerpt":"<h2> 概述</h2>\\n<p>通过 Proxy 代理对象，通过 get 拦截中的 track 函数将对象属性涉及的 effect 函数存入一个 weakmap 中，结构如下；在 set 拦截器中依次触发 weakmap 中收集的 effect 函数</p>\\n<figure><img src=\\"/assets/images/targetMap.png\\" alt=\\"TargetMap的数据结构\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>TargetMap的数据结构</figcaption></figure>\\n<figure><img src=\\"/assets/images/reactive.drawio.png\\" alt=\\"reactive思路\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>reactive思路</figcaption></figure>","autoDesc":true}');export{e as data};
