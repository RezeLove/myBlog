const n=JSON.parse('{"key":"v-288877bb","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%B7%B1%E6%90%9C/1.%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F.html","title":"岛屿数量","lang":"zh-CN","frontmatter":{"title":"岛屿数量","order":1,"category":["算法题","DFS"],"description":"题目链接 岛屿数量 思路 沉岛：找到一个陆地（1），就不断向四周扩张，将与其相邻的岛屿都变为 0（防止 DFS 遍历到它们时，会对一个岛重复计数） 实现 const numIslands = (grid) =&gt; { let count = 0; for (let i = 0; i &lt; grid.length; i++) { for (let j = 0; j &lt; grid[0].length; j++) { if (grid[i][j] === \\"1\\") { count++; // 沉岛 turnZero(i, j, grid); } } } return count; }; function turnZero(i, j, grid) { // 超限或不为1，退出 if ( i &lt; 0 || i &gt;= grid.length || j &lt; 0 || j &gt;= grid[0].length || grid[i][j] === \\"0\\" ) return; // 设为0 grid[i][j] = \\"0\\"; // 向四周扩张 turnZero(i, j + 1, grid); turnZero(i, j - 1, grid); turnZero(i + 1, j, grid); turnZero(i - 1, j, grid); }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%B7%B1%E6%90%9C/1.%E5%B2%9B%E5%B1%BF%E6%95%B0%E9%87%8F.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"岛屿数量"}],["meta",{"property":"og:description","content":"题目链接 岛屿数量 思路 沉岛：找到一个陆地（1），就不断向四周扩张，将与其相邻的岛屿都变为 0（防止 DFS 遍历到它们时，会对一个岛重复计数） 实现 const numIslands = (grid) =&gt; { let count = 0; for (let i = 0; i &lt; grid.length; i++) { for (let j = 0; j &lt; grid[0].length; j++) { if (grid[i][j] === \\"1\\") { count++; // 沉岛 turnZero(i, j, grid); } } } return count; }; function turnZero(i, j, grid) { // 超限或不为1，退出 if ( i &lt; 0 || i &gt;= grid.length || j &lt; 0 || j &gt;= grid[0].length || grid[i][j] === \\"0\\" ) return; // 设为0 grid[i][j] = \\"0\\"; // 向四周扩张 turnZero(i, j + 1, grid); turnZero(i, j - 1, grid); turnZero(i + 1, j, grid); turnZero(i - 1, j, grid); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-21T04:50:56.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-03-21T04:50:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"岛屿数量\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-21T04:50:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1710996656000,"updatedTime":1710996656000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.59,"words":177},"filePathRelative":"算法题/深搜/1.岛屿数量.md","localizedDate":"2024年3月21日","excerpt":"<h2> 题目链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/number-of-islands/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">岛屿数量</a></p>\\n<h2> 思路</h2>\\n<p>沉岛：找到一个陆地（1），就不断向四周扩张，将与其相邻的岛屿都变为 0（防止 DFS 遍历到它们时，会对一个岛重复计数）</p>\\n<h2> 实现</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">numIslands</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">grid</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> count <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> grid<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> j <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> j <span class=\\"token operator\\">&lt;</span> grid<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> j<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>grid<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">===</span> <span class=\\"token string\\">\\"1\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        count<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token comment\\">// 沉岛</span>\\n        <span class=\\"token function\\">turnZero</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">,</span> j<span class=\\"token punctuation\\">,</span> grid<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> count<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">function</span> <span class=\\"token function\\">turnZero</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">i<span class=\\"token punctuation\\">,</span> j<span class=\\"token punctuation\\">,</span> grid</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 超限或不为1，退出</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>\\n    i <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">||</span>\\n    i <span class=\\"token operator\\">&gt;=</span> grid<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">||</span>\\n    j <span class=\\"token operator\\">&lt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">||</span>\\n    j <span class=\\"token operator\\">&gt;=</span> grid<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">||</span>\\n    grid<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">===</span> <span class=\\"token string\\">\\"0\\"</span>\\n  <span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">return</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 设为0</span>\\n  grid<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"0\\"</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 向四周扩张</span>\\n  <span class=\\"token function\\">turnZero</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">,</span> j <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> grid<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token function\\">turnZero</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">,</span> j <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> grid<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token function\\">turnZero</span><span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> j<span class=\\"token punctuation\\">,</span> grid<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token function\\">turnZero</span><span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> j<span class=\\"token punctuation\\">,</span> grid<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
