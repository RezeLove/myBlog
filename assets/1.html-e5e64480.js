const t=JSON.parse('{"key":"v-c75feb94","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/1.html","title":"用栈实现队列","lang":"zh-CN","frontmatter":{"title":"用栈实现队列","order":1,"category":["算法题","栈与队列"],"description":"题目链接 用栈实现队列 思路 入队列时，可以用一个 stackin 栈保存推入队列的元素；在出队列时，让 stackin 的元素依次出栈(pop) 并推入 stackout 中 此时先入队列的元素排在了 stackout 的末尾，在让 stackout 的元素依次出栈，即可达成队列先入先出的效果","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/1.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"用栈实现队列"}],["meta",{"property":"og:description","content":"题目链接 用栈实现队列 思路 入队列时，可以用一个 stackin 栈保存推入队列的元素；在出队列时，让 stackin 的元素依次出栈(pop) 并推入 stackout 中 此时先入队列的元素排在了 stackout 的末尾，在让 stackout 的元素依次出栈，即可达成队列先入先出的效果"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T08:05:49.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-01-21T08:05:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"用栈实现队列\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-21T08:05:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1705824349000,"updatedTime":1705824349000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.56,"words":168},"filePathRelative":"算法题/栈与队列/1.md","localizedDate":"2024年1月21日","excerpt":"<h2> 题目链接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/implement-queue-using-stacks/description/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">用栈实现队列</a></p>\\n<h2> 思路</h2>\\n<p>入队列时，可以用一个 stackin 栈保存推入队列的元素；在出队列时，让 stackin 的元素依次出栈(pop) 并推入 stackout 中<br>\\n此时先入队列的元素排在了 stackout 的末尾，在让 stackout 的元素依次出栈，即可达成队列先入先出的效果</p>","autoDesc":true}');export{t as data};
