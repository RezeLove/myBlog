const n=JSON.parse('{"key":"v-0891cbc4","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%BE%E8%AE%BA/BFS.html","title":"BFS","lang":"zh-CN","frontmatter":{"title":"BFS","order":1,"category":["算法题","图论"],"description":"例题-腐烂的橘子 链接 思路：这题中每一分钟腐烂一次，比较适合 BFS,每一轮记录新腐烂的橘子的位置 var orangesRotting = function (grid) { const queue = []; let count = 0; // 统计新鲜子橘子的数量 及 腐烂橘子初始位置 for (let i = 0; i &lt; grid.length; i++) { for (let j = 0; j &lt; grid[0].length; j++) { if (grid[i][j] === 2) { queue.push([i, j]); } if (grid[i][j] === 1) { count++; } } } let minutes = 0; while (count &gt; 0 &amp;&amp; queue.length) { minutes++; // 记录上一轮腐烂橘子的数量 let len = queue.length; for (let i = 1; i &lt;= len; i++) { // 遍历每个腐烂的橘子， 腐烂其周围的新鲜橘子 const [r, c] = queue.shift(); if (r &gt;= 1 &amp;&amp; grid[r - 1][c] == 1) { grid[r - 1][c] = 2; queue.push([r - 1, c]); count--; } if (r + 1 &lt; grid.length &amp;&amp; grid[r + 1][c] == 1) { grid[r + 1][c] = 2; queue.push([r + 1, c]); count--; } if (c &gt;= 1 &amp;&amp; grid[r][c - 1] == 1) { grid[r][c - 1] = 2; queue.push([r, c - 1]); count--; } if (c + 1 &lt; grid[0].length &amp;&amp; grid[r][c + 1] == 1) { grid[r][c + 1] = 2; queue.push([r, c + 1]); count--; } } } // 最后判断是否还剩下新鲜橘子 if (count &gt; 0) return -1; if (count === 0) return minutes; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%9B%BE%E8%AE%BA/BFS.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"BFS"}],["meta",{"property":"og:description","content":"例题-腐烂的橘子 链接 思路：这题中每一分钟腐烂一次，比较适合 BFS,每一轮记录新腐烂的橘子的位置 var orangesRotting = function (grid) { const queue = []; let count = 0; // 统计新鲜子橘子的数量 及 腐烂橘子初始位置 for (let i = 0; i &lt; grid.length; i++) { for (let j = 0; j &lt; grid[0].length; j++) { if (grid[i][j] === 2) { queue.push([i, j]); } if (grid[i][j] === 1) { count++; } } } let minutes = 0; while (count &gt; 0 &amp;&amp; queue.length) { minutes++; // 记录上一轮腐烂橘子的数量 let len = queue.length; for (let i = 1; i &lt;= len; i++) { // 遍历每个腐烂的橘子， 腐烂其周围的新鲜橘子 const [r, c] = queue.shift(); if (r &gt;= 1 &amp;&amp; grid[r - 1][c] == 1) { grid[r - 1][c] = 2; queue.push([r - 1, c]); count--; } if (r + 1 &lt; grid.length &amp;&amp; grid[r + 1][c] == 1) { grid[r + 1][c] = 2; queue.push([r + 1, c]); count--; } if (c &gt;= 1 &amp;&amp; grid[r][c - 1] == 1) { grid[r][c - 1] = 2; queue.push([r, c - 1]); count--; } if (c + 1 &lt; grid[0].length &amp;&amp; grid[r][c + 1] == 1) { grid[r][c + 1] = 2; queue.push([r, c + 1]); count--; } } } // 最后判断是否还剩下新鲜橘子 if (count &gt; 0) return -1; if (count === 0) return minutes; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-16T09:48:19.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-10-16T09:48:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"BFS\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-16T09:48:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"例题-腐烂的橘子","slug":"例题-腐烂的橘子","link":"#例题-腐烂的橘子","children":[]}],"git":{"createdTime":1729072099000,"updatedTime":1729072099000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.92,"words":277},"filePathRelative":"算法题/图论/BFS.md","localizedDate":"2024年10月16日","excerpt":"<h2> 例题-腐烂的橘子</h2>\\n<p><a href=\\"https://leetcode.cn/problems/rotting-oranges/?envType=study-plan-v2&amp;envId=top-100-liked\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">链接</a></p>\\n<p>思路：这题中每一分钟腐烂一次，比较适合 BFS,每一轮记录新腐烂的橘子的位置</p>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">orangesRotting</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">grid</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> queue <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">let</span> count <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token comment\\">// 统计新鲜子橘子的数量 及 腐烂橘子初始位置</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> grid<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> j <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> j <span class=\\"token operator\\">&lt;</span> grid<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span> j<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>grid<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">===</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">,</span> j<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>grid<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">===</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        count<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">let</span> minutes <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>count <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">&amp;&amp;</span> queue<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    minutes<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 记录上一轮腐烂橘子的数量</span>\\n    <span class=\\"token keyword\\">let</span> len <span class=\\"token operator\\">=</span> queue<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;=</span> len<span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// 遍历每个腐烂的橘子， 腐烂其周围的新鲜橘子</span>\\n      <span class=\\"token keyword\\">const</span> <span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">,</span> c<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">shift</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>r <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">&amp;&amp;</span> grid<span class=\\"token punctuation\\">[</span>r <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>c<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        grid<span class=\\"token punctuation\\">[</span>r <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>c<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n        queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>r <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> c<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        count<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>r <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">&lt;</span> grid<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">&amp;&amp;</span> grid<span class=\\"token punctuation\\">[</span>r <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>c<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        grid<span class=\\"token punctuation\\">[</span>r <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>c<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n        queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>r <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> c<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        count<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">&gt;=</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">&amp;&amp;</span> grid<span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>c <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        grid<span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>c <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n        queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">,</span> c <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        count<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>c <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span> <span class=\\"token operator\\">&lt;</span> grid<span class=\\"token punctuation\\">[</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">&amp;&amp;</span> grid<span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>c <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        grid<span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">[</span>c <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">;</span>\\n        queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span>r<span class=\\"token punctuation\\">,</span> c <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        count<span class=\\"token operator\\">--</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token comment\\">// 最后判断是否还剩下新鲜橘子</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>count <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>count <span class=\\"token operator\\">===</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> minutes<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
