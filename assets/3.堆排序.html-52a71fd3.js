const e=JSON.parse('{"key":"v-57957d8c","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/3.%E5%A0%86%E6%8E%92%E5%BA%8F.html","title":"第k个大的元素","lang":"zh-CN","frontmatter":{"title":"第k个大的元素","order":3,"category":["算法题","排序"],"description":"堆 堆一般指二叉堆，是一个完全二叉树，具有以下性质： 第 n 个元素的 左子节点 为 2 * n+1 第 n 个元素的 右子节点 为 2 * n+2 第 n 个元素的 父节点 为 (n-1)/2 最后一个非叶子节点为 Math.floor(arr.length/2)-1 堆根据堆序性可以分为大根堆和小根堆： 大根堆：每个父节点都必须大于它的子节点，因此堆顶元素是最大的 小根堆：每个父节点都必须小于它的子节点，因此堆顶元素是最小的","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/3.%E5%A0%86%E6%8E%92%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"第k个大的元素"}],["meta",{"property":"og:description","content":"堆 堆一般指二叉堆，是一个完全二叉树，具有以下性质： 第 n 个元素的 左子节点 为 2 * n+1 第 n 个元素的 右子节点 为 2 * n+2 第 n 个元素的 父节点 为 (n-1)/2 最后一个非叶子节点为 Math.floor(arr.length/2)-1 堆根据堆序性可以分为大根堆和小根堆： 大根堆：每个父节点都必须大于它的子节点，因此堆顶元素是最大的 小根堆：每个父节点都必须小于它的子节点，因此堆顶元素是最小的"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-16T06:09:05.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-10-16T06:09:05.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"第k个大的元素\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-16T06:09:05.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"堆","slug":"堆","link":"#堆","children":[]},{"level":2,"title":"数组构建堆","slug":"数组构建堆","link":"#数组构建堆","children":[]},{"level":2,"title":"class-构建堆","slug":"class-构建堆","link":"#class-构建堆","children":[]},{"level":2,"title":"题目连接","slug":"题目连接","link":"#题目连接","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1729058945000,"updatedTime":1729058945000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":3.59,"words":1078},"filePathRelative":"算法题/优先队列/3.堆排序.md","localizedDate":"2024年10月16日","excerpt":"<h2> 堆</h2>\\n<p>堆一般指二叉堆，是一个完全二叉树，具有以下性质：</p>\\n<ul>\\n<li>第 n 个元素的 左子节点 为 2 * n+1</li>\\n<li>第 n 个元素的 右子节点 为 2 * n+2</li>\\n<li>第 n 个元素的 父节点 为 (n-1)/2</li>\\n<li>最后一个非叶子节点为 Math.floor(arr.length/2)-1</li>\\n</ul>\\n<p>堆根据堆序性可以分为大根堆和小根堆：</p>\\n<ul>\\n<li>大根堆：每个父节点都必须大于它的子节点，因此堆顶元素是最大的</li>\\n<li>小根堆：每个父节点都必须小于它的子节点，因此堆顶元素是最小的</li>\\n</ul>","autoDesc":true}');export{e as data};
