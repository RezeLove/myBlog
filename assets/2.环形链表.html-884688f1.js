const n=JSON.parse('{"key":"v-aa06dbaa","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%BF%AB%E6%85%A2%E6%8C%87%E9%92%88/2.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8.html","title":"环形链表","lang":"zh-CN","frontmatter":{"title":"环形链表","order":2,"category":["算法题","链表"],"description":"题目连接 环形链表 题解 快慢指针： 有环：快慢指针总能相遇，当 fast==slow，return true 无环: 快指针最后会遍历完链表，此时还没相遇，return false 思路 var reverseList = function (head) { let pre = null, temp = head; if (!head) { return null; } while (temp) { let next = temp.next; temp.next = pre; pre = temp; temp = next; } return pre; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E9%93%BE%E8%A1%A8/%E5%BF%AB%E6%85%A2%E6%8C%87%E9%92%88/2.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"环形链表"}],["meta",{"property":"og:description","content":"题目连接 环形链表 题解 快慢指针： 有环：快慢指针总能相遇，当 fast==slow，return true 无环: 快指针最后会遍历完链表，此时还没相遇，return false 思路 var reverseList = function (head) { let pre = null, temp = head; if (!head) { return null; } while (temp) { let next = temp.next; temp.next = pre; pre = temp; temp = next; } return pre; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-08T11:11:14.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-04-08T11:11:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"环形链表\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-08T11:11:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目连接","slug":"题目连接","link":"#题目连接","children":[]},{"level":2,"title":"题解","slug":"题解","link":"#题解","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]}],"git":{"createdTime":1712574674000,"updatedTime":1712574674000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.32,"words":96},"filePathRelative":"算法题/链表/快慢指针/2.环形链表.md","localizedDate":"2024年4月8日","excerpt":"<h2> 题目连接</h2>\\n<p><a href=\\"https://leetcode.cn/problems/linked-list-cycle/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">环形链表</a></p>\\n<h2> 题解</h2>\\n<p>快慢指针：</p>\\n<ul>\\n<li>有环：快慢指针总能相遇，当 fast==slow，return true</li>\\n<li>无环: 快指针最后会遍历完链表，此时还没相遇，return false</li>\\n</ul>\\n<h2> 思路</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">reverseList</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">head</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> pre <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">,</span>\\n    temp <span class=\\"token operator\\">=</span> head<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>head<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>temp<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">let</span> next <span class=\\"token operator\\">=</span> temp<span class=\\"token punctuation\\">.</span>next<span class=\\"token punctuation\\">;</span>\\n    temp<span class=\\"token punctuation\\">.</span>next <span class=\\"token operator\\">=</span> pre<span class=\\"token punctuation\\">;</span>\\n    pre <span class=\\"token operator\\">=</span> temp<span class=\\"token punctuation\\">;</span>\\n    temp <span class=\\"token operator\\">=</span> next<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> pre<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
