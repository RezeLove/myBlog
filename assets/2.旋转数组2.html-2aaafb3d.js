const n=JSON.parse('{"key":"v-2d7e1f72","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/2.%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%842.html","title":"旋转数组2","lang":"zh-CN","frontmatter":{"title":"旋转数组2","order":2,"category":["算法题","数组"],"description":"题目 题目链接 思路 在上一题的基础上，增加对于 target 位置的判断 实现 var search = function (nums, target) { if (!nums.length) { return -1 } let left = 0, right = nums.length - 1, mid while (left &lt;= right) { mid = left + ((right - left) &gt;&gt; 1) if (nums[mid] == target) { return mid } if (nums[mid] &gt;= nums[left]) { // 如果target在左侧的区间且小于mid，那么即向左移动 if (target &lt; nums[mid] &amp;&amp; target &gt;= nums[left]) { right = mid - 1 } // 否则无论在左区间还是右区间，都向右移动 else { left = mid + 1 } } else { // 如果target在右侧的区间且大于mid，那么即向右移动 if (target &gt; nums[mid] &amp;&amp; target &lt;= nums[right]) { left = mid + 1 } else { // 否则都向左移动 right = mid -1 } } } return -1 }; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%95%B0%E7%BB%84/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/2.%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%842.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"旋转数组2"}],["meta",{"property":"og:description","content":"题目 题目链接 思路 在上一题的基础上，增加对于 target 位置的判断 实现 var search = function (nums, target) { if (!nums.length) { return -1 } let left = 0, right = nums.length - 1, mid while (left &lt;= right) { mid = left + ((right - left) &gt;&gt; 1) if (nums[mid] == target) { return mid } if (nums[mid] &gt;= nums[left]) { // 如果target在左侧的区间且小于mid，那么即向左移动 if (target &lt; nums[mid] &amp;&amp; target &gt;= nums[left]) { right = mid - 1 } // 否则无论在左区间还是右区间，都向右移动 else { left = mid + 1 } } else { // 如果target在右侧的区间且大于mid，那么即向右移动 if (target &gt; nums[mid] &amp;&amp; target &lt;= nums[right]) { left = mid + 1 } else { // 否则都向左移动 right = mid -1 } } } return -1 }; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-07T09:44:36.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-03-07T09:44:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"旋转数组2\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-07T09:44:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目","slug":"题目","link":"#题目","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1709804676000,"updatedTime":1709804676000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.61,"words":184},"filePathRelative":"算法题/数组/二分查找/2.旋转数组2.md","localizedDate":"2024年3月7日","excerpt":"<h2> 题目</h2>\\n<p><a href=\\"https://leetcode.cn/problems/search-in-rotated-sorted-array/submissions/506688129/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">题目链接</a></p>\\n<h2> 思路</h2>\\n<p>在上一题的基础上，增加对于 target 位置的判断</p>\\n<h2> 实现</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">search</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">nums<span class=\\"token punctuation\\">,</span> target</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>nums<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">let</span> left <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> right <span class=\\"token operator\\">=</span> nums<span class=\\"token punctuation\\">.</span>length <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> mid\\n    <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span>left <span class=\\"token operator\\">&lt;=</span> right<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        mid <span class=\\"token operator\\">=</span> left <span class=\\"token operator\\">+</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>right <span class=\\"token operator\\">-</span> left<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">&gt;&gt;</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">[</span>mid<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">==</span> target<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">return</span> mid\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>nums<span class=\\"token punctuation\\">[</span>mid<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&gt;=</span> nums<span class=\\"token punctuation\\">[</span>left<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token comment\\">// 如果target在左侧的区间且小于mid，那么即向左移动</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>target <span class=\\"token operator\\">&lt;</span> nums<span class=\\"token punctuation\\">[</span>mid<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&amp;&amp;</span> target <span class=\\"token operator\\">&gt;=</span> nums<span class=\\"token punctuation\\">[</span>left<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                right <span class=\\"token operator\\">=</span> mid <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span>\\n            <span class=\\"token punctuation\\">}</span>\\n            <span class=\\"token comment\\">// 否则无论在左区间还是右区间，都向右移动</span>\\n            <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n                left <span class=\\"token operator\\">=</span> mid <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token comment\\">// 如果target在右侧的区间且大于mid，那么即向右移动</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>target <span class=\\"token operator\\">&gt;</span> nums<span class=\\"token punctuation\\">[</span>mid<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&amp;&amp;</span> target <span class=\\"token operator\\">&lt;=</span> nums<span class=\\"token punctuation\\">[</span>right<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n                left <span class=\\"token operator\\">=</span> mid <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span>\\n            <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n                <span class=\\"token comment\\">// 否则都向左移动</span>\\n                right <span class=\\"token operator\\">=</span> mid <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span>\\n            <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">return</span> <span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
