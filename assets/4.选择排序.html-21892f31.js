const n=JSON.parse('{"key":"v-0c214d3f","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%8E%92%E5%BA%8F/4.%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F.html","title":"选择排序","lang":"zh-CN","frontmatter":{"title":"选择排序","order":4,"category":["算法题","排序"],"description":"思路： 从未排序部分找到最小元素。 将该元素与未排序部分的第一个元素交换位置。 重复上述步骤，直到整个数组有序 时间复杂度：O(N^2) 实现 function selectionSort(arr) { let n = arr.length; // 外层循环的是最小值的位置 for (let i = 0; i &lt; n - 1; i++) { // 假设当前的 i 位置是最小值 let minIndex = i; // 查找未排序部分中最小的值 for (let j = i + 1; j &lt; n; j++) { if (arr[j] &lt; arr[minIndex]) { minIndex = j; } } // 如果找到更小的值，交换当前值和最小值 if (minIndex !== i) { [arr[i], arr[minIndex]] = [arr[minIndex], arr[i]]; // 使用 ES6 解构赋值进行交换 } } return arr; }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E6%8E%92%E5%BA%8F/4.%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"选择排序"}],["meta",{"property":"og:description","content":"思路： 从未排序部分找到最小元素。 将该元素与未排序部分的第一个元素交换位置。 重复上述步骤，直到整个数组有序 时间复杂度：O(N^2) 实现 function selectionSort(arr) { let n = arr.length; // 外层循环的是最小值的位置 for (let i = 0; i &lt; n - 1; i++) { // 假设当前的 i 位置是最小值 let minIndex = i; // 查找未排序部分中最小的值 for (let j = i + 1; j &lt; n; j++) { if (arr[j] &lt; arr[minIndex]) { minIndex = j; } } // 如果找到更小的值，交换当前值和最小值 if (minIndex !== i) { [arr[i], arr[minIndex]] = [arr[minIndex], arr[i]]; // 使用 ES6 解构赋值进行交换 } } return arr; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-23T02:52:28.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-09-23T02:52:28.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"选择排序\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-23T02:52:28.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"思路：","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"时间复杂度：O(N^2)","slug":"时间复杂度-o-n-2","link":"#时间复杂度-o-n-2","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1727059948000,"updatedTime":1727059948000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.63,"words":189},"filePathRelative":"算法题/排序/4.选择排序.md","localizedDate":"2024年9月23日","excerpt":"<h2> 思路：</h2>\\n<ol>\\n<li>从未排序部分找到最小元素。</li>\\n<li>将该元素与未排序部分的第一个元素交换位置。</li>\\n<li>重复上述步骤，直到整个数组有序</li>\\n</ol>\\n<h2> 时间复杂度：O(N^2)</h2>\\n<h2> 实现</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">selectionSort</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">arr</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> n <span class=\\"token operator\\">=</span> arr<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token comment\\">// 外层循环的是最小值的位置</span>\\n  <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> i <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> i <span class=\\"token operator\\">&lt;</span> n <span class=\\"token operator\\">-</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> i<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 假设当前的 i 位置是最小值</span>\\n    <span class=\\"token keyword\\">let</span> minIndex <span class=\\"token operator\\">=</span> i<span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 查找未排序部分中最小的值</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> j <span class=\\"token operator\\">=</span> i <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">;</span> j <span class=\\"token operator\\">&lt;</span> n<span class=\\"token punctuation\\">;</span> j<span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>arr<span class=\\"token punctuation\\">[</span>j<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">&lt;</span> arr<span class=\\"token punctuation\\">[</span>minIndex<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        minIndex <span class=\\"token operator\\">=</span> j<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// 如果找到更小的值，交换当前值和最小值</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>minIndex <span class=\\"token operator\\">!==</span> i<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token punctuation\\">[</span>arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> arr<span class=\\"token punctuation\\">[</span>minIndex<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>arr<span class=\\"token punctuation\\">[</span>minIndex<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span> arr<span class=\\"token punctuation\\">[</span>i<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span> <span class=\\"token comment\\">// 使用 ES6 解构赋值进行交换</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n\\n  <span class=\\"token keyword\\">return</span> arr<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
