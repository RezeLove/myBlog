const n=JSON.parse('{"key":"v-6dc246da","path":"/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/2.html","title":"反转字符串2","lang":"zh-CN","frontmatter":{"title":"反转字符串2","order":2,"category":["算法题","字符串"],"description":"题目链接 (链接)[https://leetcode.cn/problems/reverse-string-ii/] 思路 分[0,k],[k,2k],(2k,...)三种情况讨论，当大于 2k，就进行递归 实现 var reverseStr = function (s, k) { let l = s.length; let newstr; if (l &lt;= k) { newstr = s.split(\\"\\").reverse().join(\\"\\"); } else if (l &lt;= 2 * k) { newstr = s.slice(0, k).split(\\"\\").reverse().join(\\"\\") + s.slice(k); } else if (l &gt; 2 * k) { newstr = reverseStr(s.slice(0, 2 * k), k) + reverseStr(s.slice(2 * k), k); } return newstr; };","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E7%AE%97%E6%B3%95%E9%A2%98/%E5%AD%97%E7%AC%A6%E4%B8%B2/2.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"反转字符串2"}],["meta",{"property":"og:description","content":"题目链接 (链接)[https://leetcode.cn/problems/reverse-string-ii/] 思路 分[0,k],[k,2k],(2k,...)三种情况讨论，当大于 2k，就进行递归 实现 var reverseStr = function (s, k) { let l = s.length; let newstr; if (l &lt;= k) { newstr = s.split(\\"\\").reverse().join(\\"\\"); } else if (l &lt;= 2 * k) { newstr = s.slice(0, k).split(\\"\\").reverse().join(\\"\\") + s.slice(k); } else if (l &gt; 2 * k) { newstr = reverseStr(s.slice(0, 2 * k), k) + reverseStr(s.slice(2 * k), k); } return newstr; };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-21T08:05:49.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-01-21T08:05:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"反转字符串2\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-21T08:05:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"题目链接","slug":"题目链接","link":"#题目链接","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"实现","slug":"实现","link":"#实现","children":[]}],"git":{"createdTime":1705824349000,"updatedTime":1705824349000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.34,"words":103},"filePathRelative":"算法题/字符串/2.md","localizedDate":"2024年1月21日","excerpt":"<h2> 题目链接</h2>\\n<p>(链接)[https://leetcode.cn/problems/reverse-string-ii/]</p>\\n<h2> 思路</h2>\\n<p>分[0,k],[k,2k],(2k,...)三种情况讨论，当大于 2k，就进行递归</p>\\n<h2> 实现</h2>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> <span class=\\"token function-variable function\\">reverseStr</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">function</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">s<span class=\\"token punctuation\\">,</span> k</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> l <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">.</span>length<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">let</span> newstr<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>l <span class=\\"token operator\\">&lt;=</span> k<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    newstr <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">split</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reverse</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>l <span class=\\"token operator\\">&lt;=</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> k<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    newstr <span class=\\"token operator\\">=</span> s<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">slice</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> k<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">split</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">reverse</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> s<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">slice</span><span class=\\"token punctuation\\">(</span>k<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>l <span class=\\"token operator\\">&gt;</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> k<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    newstr <span class=\\"token operator\\">=</span> <span class=\\"token function\\">reverseStr</span><span class=\\"token punctuation\\">(</span>s<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">slice</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> k<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> k<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> <span class=\\"token function\\">reverseStr</span><span class=\\"token punctuation\\">(</span>s<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">slice</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">2</span> <span class=\\"token operator\\">*</span> k<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> k<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> newstr<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
