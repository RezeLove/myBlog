const n=JSON.parse('{"key":"v-62beb5f5","path":"/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/%E6%B7%B1%E5%BA%A6%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1.html","title":"深度遍历对象","lang":"zh-CN","frontmatter":{"title":"深度遍历对象","order":22,"category":["面试","JS"],"description":"const obj = { a: 1, b: { c: 2, d: [1, 2], }, e: 3, d: [1, [4, 5]], }; const flattenObj = (obj) =&gt; { const res = {}; const myFlat = (obj, path) =&gt; { for (let key in obj) { const val = obj[key]; const joinedKey = path + key; if (val &amp;&amp; typeof val === \\"object\\") { myFlat(val, joinedKey + \\".\\"); } else { res[joinedKey] = val; } } }; myFlat(obj, \\"\\"); return res; }; console.log(flattenObj(obj));","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/%E5%89%8D%E7%AB%AF%E7%AC%94%E8%AE%B0/js/%E6%B7%B1%E5%BA%A6%E9%81%8D%E5%8E%86%E5%AF%B9%E8%B1%A1.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"深度遍历对象"}],["meta",{"property":"og:description","content":"const obj = { a: 1, b: { c: 2, d: [1, 2], }, e: 3, d: [1, [4, 5]], }; const flattenObj = (obj) =&gt; { const res = {}; const myFlat = (obj, path) =&gt; { for (let key in obj) { const val = obj[key]; const joinedKey = path + key; if (val &amp;&amp; typeof val === \\"object\\") { myFlat(val, joinedKey + \\".\\"); } else { res[joinedKey] = val; } } }; myFlat(obj, \\"\\"); return res; }; console.log(flattenObj(obj));"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-03T12:02:36.000Z"}],["meta",{"property":"article:author","content":"TX"}],["meta",{"property":"article:modified_time","content":"2024-10-03T12:02:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"深度遍历对象\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-03T12:02:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"TX\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1727956956000,"updatedTime":1727956956000,"contributors":[{"name":"RezeLove","email":"1224745953@qq.com","commits":1}]},"readingTime":{"minutes":0.24,"words":72},"filePathRelative":"前端笔记/js/深度遍历对象.md","localizedDate":"2024年10月3日","excerpt":"<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">const</span> obj <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">a</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">b</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token literal-property property\\">c</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token literal-property property\\">d</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">2</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">e</span><span class=\\"token operator\\">:</span> <span class=\\"token number\\">3</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token literal-property property\\">d</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">5</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">flattenObj</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">obj</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> res <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">myFlat</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">obj<span class=\\"token punctuation\\">,</span> path</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">let</span> key <span class=\\"token keyword\\">in</span> obj<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token keyword\\">const</span> val <span class=\\"token operator\\">=</span> obj<span class=\\"token punctuation\\">[</span>key<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">const</span> joinedKey <span class=\\"token operator\\">=</span> path <span class=\\"token operator\\">+</span> key<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>val <span class=\\"token operator\\">&amp;&amp;</span> <span class=\\"token keyword\\">typeof</span> val <span class=\\"token operator\\">===</span> <span class=\\"token string\\">\\"object\\"</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">myFlat</span><span class=\\"token punctuation\\">(</span>val<span class=\\"token punctuation\\">,</span> joinedKey <span class=\\"token operator\\">+</span> <span class=\\"token string\\">\\".\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n        res<span class=\\"token punctuation\\">[</span>joinedKey<span class=\\"token punctuation\\">]</span> <span class=\\"token operator\\">=</span> val<span class=\\"token punctuation\\">;</span>\\n      <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token function\\">myFlat</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token keyword\\">return</span> res<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\nconsole<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">flattenObj</span><span class=\\"token punctuation\\">(</span>obj<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
